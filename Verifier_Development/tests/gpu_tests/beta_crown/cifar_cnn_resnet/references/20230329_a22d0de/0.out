Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: model_resnet
  path: cifar_resnet_8px.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 4854
  end: 4855
  select_instance: null
  num_outputs: 10
  mean: [0.485, 0.456, 0.406]
  std: [0.225, 0.225, 0.225]
  pkl_path: null
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.03137254901
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 8
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 180
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 18:31:31 2023 on zeratul
DenseSequential(
  (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Dense(
    (Ws): ModuleList(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (3): ReLU()
  (4): Dense(
    (Ws): ModuleList(
      (0): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): None
      (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (5): ReLU()
  (6): Dense(
    (Ws): ModuleList(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (7): ReLU()
  (8): Dense(
    (Ws): ModuleList(
      (0): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): None
      (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (9): ReLU()
  (10): Dense(
    (Ws): ModuleList(
      (0): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    )
  )
  (11): ReLU()
  (12): Dense(
    (Ws): ModuleList(
      (0): Conv2d(16, 32, kernel_size=(2, 2), stride=(2, 2))
      (1): None
      (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (13): ReLU()
  (14): Dense(
    (Ws): ModuleList(
      (0): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    )
  )
  (15): ReLU()
  (16): Dense(
    (Ws): ModuleList(
      (0): Conv2d(32, 64, kernel_size=(2, 2), stride=(2, 2))
      (1): None
      (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (17): ReLU()
  (18): Flatten()
  (19): Linear(in_features=4096, out_features=1000, bias=True)
  (20): ReLU()
  (21): Linear(in_features=1000, out_features=10, bias=True)
)
Trying generic MNIST/CIFAR data loader.
Files already downloaded and verified
Internal results will be saved to Verified_ret_[model_resnet]_start=4854_end=4855_iter=20_b=8_timeout=180_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 4854 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.03485840559005737, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.99463260, -0.27370033,  0.34276968,  0.12394978, -0.50668955,
          0.20725247, -0.14019394, -0.26229852,  0.10012728, -0.58596790]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.43396294, -0.18375874,  0.07417613,  0.22655302, -0.40009955,
           0.41563481, -0.11134443, -0.10009836,  0.01030296, -0.36540833],
         [ 0.43396294, -0.18375874,  0.07417613,  0.22655302, -0.40009955,
           0.41563481, -0.11134443, -0.10009836,  0.01030296, -0.36540833]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[0.61772168, 0.35978681, 0.20740992, 0.83406246, 0.01832813,
          0.54530740, 0.53406131, 0.42365998, 0.79937124]]], device='cuda:0')
number of violation:  0
Attack finished in 3.7055 seconds.
PGD attack failed
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundParams(name=/9, inputs=[])
  (/10): BoundParams(name=/10, inputs=[])
  (/11): BoundParams(name=/11, inputs=[])
  (/12): BoundParams(name=/12, inputs=[])
  (/13): BoundParams(name=/13, inputs=[])
  (/14): BoundParams(name=/14, inputs=[])
  (/15): BoundParams(name=/15, inputs=[])
  (/16): BoundParams(name=/16, inputs=[])
  (/17): BoundParams(name=/17, inputs=[])
  (/18): BoundParams(name=/18, inputs=[])
  (/19): BoundParams(name=/19, inputs=[])
  (/20): BoundParams(name=/20, inputs=[])
  (/21): BoundParams(name=/21, inputs=[])
  (/22): BoundParams(name=/22, inputs=[])
  (/23): BoundParams(name=/23, inputs=[])
  (/24): BoundParams(name=/24, inputs=[])
  (/25): BoundParams(name=/25, inputs=[])
  (/26): BoundParams(name=/26, inputs=[])
  (/27): BoundParams(name=/27, inputs=[])
  (/28): BoundParams(name=/28, inputs=[])
  (/29): BoundParams(name=/29, inputs=[])
  (/30): BoundParams(name=/30, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2])
  (/input.4): BoundRelu(name=/input.4, inputs=[/input])
  (/33): BoundConv(name=/33, inputs=[/input.4, /3, /4])
  (/input.8): BoundRelu(name=/input.8, inputs=[/33])
  (/35): BoundConv(name=/35, inputs=[/input.4, /5, /6])
  (/36): BoundConv(name=/36, inputs=[/input.8, /7, /8])
  (/input.12): BoundAdd(name=/input.12, inputs=[/35, /36])
  (/input.16): BoundRelu(name=/input.16, inputs=[/input.12])
  (/39): BoundConv(name=/39, inputs=[/input.16, /9, /10])
  (/input.20): BoundRelu(name=/input.20, inputs=[/39])
  (/41): BoundConv(name=/41, inputs=[/input.16, /11, /12])
  (/42): BoundConv(name=/42, inputs=[/input.20, /13, /14])
  (/input.24): BoundAdd(name=/input.24, inputs=[/41, /42])
  (/input.28): BoundRelu(name=/input.28, inputs=[/input.24])
  (/45): BoundConv(name=/45, inputs=[/input.28, /15, /16])
  (/input.32): BoundRelu(name=/input.32, inputs=[/45])
  (/47): BoundConv(name=/47, inputs=[/input.28, /17, /18])
  (/48): BoundConv(name=/48, inputs=[/input.32, /19, /20])
  (/input.36): BoundAdd(name=/input.36, inputs=[/47, /48])
  (/input.40): BoundRelu(name=/input.40, inputs=[/input.36])
  (/51): BoundConv(name=/51, inputs=[/input.40, /21, /22])
  (/input.44): BoundRelu(name=/input.44, inputs=[/51])
  (/53): BoundConv(name=/53, inputs=[/input.40, /23, /24])
  (/54): BoundConv(name=/54, inputs=[/input.44, /25, /26])
  (/input.48): BoundAdd(name=/input.48, inputs=[/53, /54])
  (/56): BoundRelu(name=/56, inputs=[/input.48])
  (/57): BoundShape(name=/57, inputs=[/56])
  (/58): BoundConstant(name=/58, inputs=[])
  (/59): BoundGather(name=/59, inputs=[/57, /58])
  (/60): BoundConstant(name=/60, inputs=[])
  (/61): BoundUnsqueeze(name=/61, inputs=[/59])
  (/62): BoundUnsqueeze(name=/62, inputs=[/60])
  (/63): BoundConcat(name=/63, inputs=[/61, /62])
  (/64): BoundReshape(name=/64, inputs=[/56, /63])
  (/input.52): BoundLinear(name=/input.52, inputs=[/64, /27, /28])
  (/66): BoundRelu(name=/66, inputs=[/input.52])
  (/67): BoundLinear(name=/67, inputs=[/66, /29, /30])
)
Model prediction is: tensor([[ 0.99463260, -0.27370033,  0.34276968,  0.12394978, -0.50668955,
          0.20725247, -0.14019394, -0.26229852,  0.10012728, -0.58596790]],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [335]; unstable size 335; total size 16384 (torch.Size([1, 16, 32, 32]))
layer /input.4 start_node /input.12 using sparse-spec alpha with unstable size 6 total_size 16 output_shape 16
layer /input.4 start_node /39 using sparse-spec alpha with unstable size 1 total_size 16384 output_shape (16, 32, 32)
layer /input.4 start_node /input.24 using sparse-spec alpha with unstable size 292 total_size 16384 output_shape (16, 32, 32)
layer /input.4 start_node /input.48 using sparse-spec alpha with unstable size 4 total_size 4096 output_shape (64, 8, 8)
layer /input.4 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /input.4 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.8 using sparse-features alpha with shape [0]; unstable size 0; total size 16384 (torch.Size([1, 16, 32, 32]))
layer /input.8 start_node /input.12 using sparse-spec alpha with unstable size 6 total_size 16 output_shape 16
layer /input.8 start_node /39 using sparse-spec alpha with unstable size 1 total_size 16384 output_shape (16, 32, 32)
layer /input.8 start_node /input.24 using sparse-spec alpha with unstable size 292 total_size 16384 output_shape (16, 32, 32)
layer /input.8 start_node /input.48 using sparse-spec alpha with unstable size 4 total_size 4096 output_shape (64, 8, 8)
layer /input.8 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /input.8 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.16 using sparse-features alpha with shape [1938]; unstable size 1938; total size 16384 (torch.Size([1, 16, 32, 32]))
layer /input.16 start_node /39 using sparse-spec alpha with unstable size 1 total_size 16384 output_shape (16, 32, 32)
layer /input.16 start_node /input.24 using sparse-spec alpha with unstable size 292 total_size 16384 output_shape (16, 32, 32)
layer /input.16 start_node /input.48 using sparse-spec alpha with unstable size 4 total_size 4096 output_shape (64, 8, 8)
layer /input.16 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /input.16 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.20 using sparse-features alpha with shape [1]; unstable size 1; total size 16384 (torch.Size([1, 16, 32, 32]))
layer /input.20 start_node /input.24 using sparse-spec alpha with unstable size 292 total_size 16384 output_shape (16, 32, 32)
layer /input.20 start_node /input.48 using sparse-spec alpha with unstable size 4 total_size 4096 output_shape (64, 8, 8)
layer /input.20 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /input.20 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.28 using sparse-features alpha with shape [292]; unstable size 292; total size 16384 (torch.Size([1, 16, 32, 32]))
layer /input.28 start_node /input.48 using sparse-spec alpha with unstable size 4 total_size 4096 output_shape (64, 8, 8)
layer /input.28 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /input.28 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.32 using sparse-features alpha with shape [0]; unstable size 0; total size 8192 (torch.Size([1, 32, 16, 16]))
layer /input.32 start_node /input.48 using sparse-spec alpha with unstable size 4 total_size 4096 output_shape (64, 8, 8)
layer /input.32 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /input.32 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.40 using sparse-features alpha with shape [0]; unstable size 0; total size 8192 (torch.Size([1, 32, 16, 16]))
layer /input.40 start_node /input.48 using sparse-spec alpha with unstable size 4 total_size 4096 output_shape (64, 8, 8)
layer /input.40 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /input.40 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.44 using sparse-features alpha with shape [0]; unstable size 0; total size 4096 (torch.Size([1, 64, 8, 8]))
layer /input.44 start_node /input.48 using sparse-spec alpha with unstable size 4 total_size 4096 output_shape (64, 8, 8)
layer /input.44 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /input.44 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /56 using sparse-features alpha with shape [4]; unstable size 4; total size 4096 (torch.Size([1, 64, 8, 8]))
layer /56 start_node /input.52 using sparse-spec alpha with unstable size 98 total_size 1000 output_shape torch.Size([1000])
layer /56 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
layer /66 using sparse-features alpha with shape [98]; unstable size 98; total size 1000 (torch.Size([1, 1000]))
layer /66 start_node /67 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.27834892,  0.12059402, -0.01623917,  0.68720436, -0.20861769,
          0.33312082,  0.39703131,  0.19260311,  0.43699884]], device='cuda:0') None
best_l after optimization: 2.459822177886963
alpha/beta optimization time: 34.4263973236084
initial alpha-CROWN bounds: tensor([[ 0.31708431,  0.13145041,  0.01737881,  0.70261574, -0.16614342,
          0.34787989,  0.41357231,  0.22029424,  0.47568989]], device='cuda:0')
Worst class: (+ rhs) -0.16614341735839844
Split layers:
  BoundConv(name=/33, inputs=[/input.4, /3, /4]): [(BoundRelu(name=/input.8, inputs=[/33]), 0)]
  BoundConv(name=/51, inputs=[/input.40, /21, /22]): [(BoundRelu(name=/input.44, inputs=[/51]), 0)]
  BoundLinear(name=/input.52, inputs=[/64, /27, /28]): [(BoundRelu(name=/66, inputs=[/input.52]), 0)]
  BoundAdd(name=/input.36, inputs=[/47, /48]): [(BoundRelu(name=/input.40, inputs=[/input.36]), 0)]
  BoundConv(name=/input, inputs=[/input.1, /1, /2]): [(BoundRelu(name=/input.4, inputs=[/input]), 0)]
  BoundConv(name=/45, inputs=[/input.28, /15, /16]): [(BoundRelu(name=/input.32, inputs=[/45]), 0)]
  BoundAdd(name=/input.24, inputs=[/41, /42]): [(BoundRelu(name=/input.28, inputs=[/input.24]), 0)]
  BoundConv(name=/39, inputs=[/input.16, /9, /10]): [(BoundRelu(name=/input.20, inputs=[/39]), 0)]
  BoundAdd(name=/input.12, inputs=[/35, /36]): [(BoundRelu(name=/input.16, inputs=[/input.12]), 0)]
  BoundAdd(name=/input.48, inputs=[/53, /54]): [(BoundRelu(name=/56, inputs=[/input.48]), 0)]
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 16, 32, 32]), torch.Size([1, 9, 16, 32, 32]), torch.Size([1, 9, 16, 32, 32]), torch.Size([1, 9, 16, 32, 32]), torch.Size([1, 9, 16, 32, 32]), torch.Size([1, 9, 32, 16, 16]), torch.Size([1, 9, 32, 16, 16]), torch.Size([1, 9, 64, 8, 8]), torch.Size([1, 9, 64, 8, 8]), torch.Size([1, 9, 1000])]

Properties batch 0, size 1
Remaining timeout: 134.86439037322998
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.31708431243896484.

Properties batch 1, size 1
Remaining timeout: 134.62137413024902
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.13145041465759277.

Properties batch 2, size 1
Remaining timeout: 134.55945539474487
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.017378807067871094.

Properties batch 3, size 1
Remaining timeout: 134.49757075309753
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.7026157379150391.

Properties batch 4, size 1
Remaining timeout: 134.43063688278198
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.16614342]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundParams(name=/9, inputs=[])
  (/10): BoundParams(name=/10, inputs=[])
  (/11): BoundParams(name=/11, inputs=[])
  (/12): BoundParams(name=/12, inputs=[])
  (/13): BoundParams(name=/13, inputs=[])
  (/14): BoundParams(name=/14, inputs=[])
  (/15): BoundParams(name=/15, inputs=[])
  (/16): BoundParams(name=/16, inputs=[])
  (/17): BoundParams(name=/17, inputs=[])
  (/18): BoundParams(name=/18, inputs=[])
  (/19): BoundParams(name=/19, inputs=[])
  (/20): BoundParams(name=/20, inputs=[])
  (/21): BoundParams(name=/21, inputs=[])
  (/22): BoundParams(name=/22, inputs=[])
  (/23): BoundParams(name=/23, inputs=[])
  (/24): BoundParams(name=/24, inputs=[])
  (/25): BoundParams(name=/25, inputs=[])
  (/26): BoundParams(name=/26, inputs=[])
  (/27): BoundParams(name=/27, inputs=[])
  (/28): BoundParams(name=/28, inputs=[])
  (/29): BoundParams(name=/29, inputs=[])
  (/30): BoundParams(name=/30, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2])
  (/input.4): BoundRelu(name=/input.4, inputs=[/input])
  (/33): BoundConv(name=/33, inputs=[/input.4, /3, /4])
  (/input.8): BoundRelu(name=/input.8, inputs=[/33])
  (/35): BoundConv(name=/35, inputs=[/input.4, /5, /6])
  (/36): BoundConv(name=/36, inputs=[/input.8, /7, /8])
  (/input.12): BoundAdd(name=/input.12, inputs=[/35, /36])
  (/input.16): BoundRelu(name=/input.16, inputs=[/input.12])
  (/39): BoundConv(name=/39, inputs=[/input.16, /9, /10])
  (/input.20): BoundRelu(name=/input.20, inputs=[/39])
  (/41): BoundConv(name=/41, inputs=[/input.16, /11, /12])
  (/42): BoundConv(name=/42, inputs=[/input.20, /13, /14])
  (/input.24): BoundAdd(name=/input.24, inputs=[/41, /42])
  (/input.28): BoundRelu(name=/input.28, inputs=[/input.24])
  (/45): BoundConv(name=/45, inputs=[/input.28, /15, /16])
  (/input.32): BoundRelu(name=/input.32, inputs=[/45])
  (/47): BoundConv(name=/47, inputs=[/input.28, /17, /18])
  (/48): BoundConv(name=/48, inputs=[/input.32, /19, /20])
  (/input.36): BoundAdd(name=/input.36, inputs=[/47, /48])
  (/input.40): BoundRelu(name=/input.40, inputs=[/input.36])
  (/51): BoundConv(name=/51, inputs=[/input.40, /21, /22])
  (/input.44): BoundRelu(name=/input.44, inputs=[/51])
  (/53): BoundConv(name=/53, inputs=[/input.40, /23, /24])
  (/54): BoundConv(name=/54, inputs=[/input.44, /25, /26])
  (/input.48): BoundAdd(name=/input.48, inputs=[/53, /54])
  (/56): BoundRelu(name=/56, inputs=[/input.48])
  (/57): BoundShape(name=/57, inputs=[/56])
  (/58): BoundConstant(name=/58, inputs=[])
  (/59): BoundGather(name=/59, inputs=[/57, /58])
  (/60): BoundConstant(name=/60, inputs=[])
  (/61): BoundUnsqueeze(name=/61, inputs=[/59])
  (/62): BoundUnsqueeze(name=/62, inputs=[/60])
  (/63): BoundConcat(name=/63, inputs=[/61, /62])
  (/64): BoundReshape(name=/64, inputs=[/56, /63])
  (/input.52): BoundLinear(name=/input.52, inputs=[/64, /27, /28])
  (/66): BoundRelu(name=/66, inputs=[/input.52])
  (/67): BoundLinear(name=/67, inputs=[/66, /29, /30])
)
Model prediction is: tensor([ 0.99463260, -0.27370033,  0.34276968,  0.12394978, -0.50668955,
         0.20725247, -0.14019394, -0.26229852,  0.10012728, -0.58596790],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /67 with alignment adjustment
setting alpha for layer /input.8 start_node /67 with alignment adjustment
setting alpha for layer /input.16 start_node /67 with alignment adjustment
setting alpha for layer /input.20 start_node /67 with alignment adjustment
setting alpha for layer /input.28 start_node /67 with alignment adjustment
setting alpha for layer /input.32 start_node /67 with alignment adjustment
setting alpha for layer /input.40 start_node /67 with alignment adjustment
setting alpha for layer /input.44 start_node /67 with alignment adjustment
setting alpha for layer /56 start_node /67 with alignment adjustment
setting alpha for layer /66 start_node /67 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 32, 32]), torch.Size([1, 1, 16, 32, 32]), torch.Size([1, 1, 16, 32, 32]), torch.Size([1, 1, 16, 32, 32]), torch.Size([1, 1, 16, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 1000])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.16614342]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /33,/51,/input.52,/input.36,/input,/45,/input.24,/39,/input.12,/input.48,/67
Split layers:
  BoundConv(name=/33, inputs=[/input.4, /3, /4]): [(BoundRelu(name=/input.8, inputs=[/33]), 0)]
  BoundAdd(name=/input.24, inputs=[/41, /42]): [(BoundRelu(name=/input.28, inputs=[/input.24]), 0)]
  BoundAdd(name=/input.48, inputs=[/53, /54]): [(BoundRelu(name=/56, inputs=[/input.48]), 0)]
  BoundConv(name=/39, inputs=[/input.16, /9, /10]): [(BoundRelu(name=/input.20, inputs=[/39]), 0)]
  BoundConv(name=/45, inputs=[/input.28, /15, /16]): [(BoundRelu(name=/input.32, inputs=[/45]), 0)]
  BoundConv(name=/51, inputs=[/input.40, /21, /22]): [(BoundRelu(name=/input.44, inputs=[/51]), 0)]
  BoundAdd(name=/input.36, inputs=[/47, /48]): [(BoundRelu(name=/input.40, inputs=[/input.36]), 0)]
  BoundConv(name=/input, inputs=[/input.1, /1, /2]): [(BoundRelu(name=/input.4, inputs=[/input]), 0)]
  BoundLinear(name=/input.52, inputs=[/64, /27, /28]): [(BoundRelu(name=/66, inputs=[/input.52]), 0)]
  BoundAdd(name=/input.12, inputs=[/35, /36]): [(BoundRelu(name=/input.16, inputs=[/input.12]), 0)]
Keeping slopes for these layers: ['/67']
Keeping slopes for these layers: ['/67']
Node /input.4 input 0: size torch.Size([16, 32, 32]) unstable 335
Node /input.8 input 0: size torch.Size([16, 32, 32]) unstable 0
Node /input.16 input 0: size torch.Size([16, 32, 32]) unstable 1938
Node /input.20 input 0: size torch.Size([16, 32, 32]) unstable 1
Node /input.28 input 0: size torch.Size([16, 32, 32]) unstable 292
Node /input.32 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /input.40 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /input.44 input 0: size torch.Size([64, 8, 8]) unstable 0
Node /56 input 0: size torch.Size([64, 8, 8]) unstable 4
Node /66 input 0: size torch.Size([1000]) unstable 96
-----------------
# of unstable neurons: 2666
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.52, 972] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 2 = 0.0
pruning-in-iteration extra time: 0.0003211498260498047
Time: prepare 0.0012    beta_bound 1.3360    bound 1.3362    transfer 0.0010    finalize 0.0018    func 1.3402    
Accumulated time: func 1.3402    prepare 0.0018    bound 1.3362    beta_bound 1.3360    transfer 0.0010    finalize 0.0018    
batch bounding time:  1.3402628898620605
Current worst splitting domains lb-rhs (depth):
-0.13782 (1), -0.07942 (1), 
length of domains: 2
Time: pickout 0.0036    decision 0.4998    set_bounds 0.0016    solve 1.3403    add 0.0036    
Accumulated time: pickout 0.0036    decision 0.4998    set_bounds 0.0016    solve 1.3403    add 0.0036    
Current (lb-rhs): -0.1378188133239746
2 domains visited
Cumulative time: 2.7527120113372803

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.52, 24] [/input.52, 24] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 4 = 0.0
pruning-in-iteration extra time: 0.0002446174621582031
Time: prepare 0.0017    beta_bound 0.9353    bound 0.9354    transfer 0.0008    finalize 0.0020    func 0.9400    
Accumulated time: func 2.2801    prepare 0.0043    bound 2.2715    beta_bound 2.2713    transfer 0.0018    finalize 0.0037    
batch bounding time:  0.9400193691253662
Current worst splitting domains lb-rhs (depth):
-0.11455 (2), -0.11059 (2), -0.05781 (2), -0.00545 (2), 
length of domains: 4
Time: pickout 0.0028    decision 0.1116    set_bounds 0.0012    solve 0.9400    add 0.0042    
Accumulated time: pickout 0.0064    decision 0.6114    set_bounds 0.0027    solve 2.2803    add 0.0077    
Current (lb-rhs): -0.11454582214355469
6 domains visited
Cumulative time: 3.8129990100860596

BaB round 3
batch: 4
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.52, 421] [/input.52, 421] [/input.52, 421] [/input.52, 514] 
pruning_in_iteration open status: True
ratio of positive domain = 2 / 8 = 0.25
pruning-in-iteration extra time: 0.020644664764404297
Time: prepare 0.0043    beta_bound 1.0133    bound 1.0134    transfer 0.0025    finalize 0.0046    func 1.0249    
Accumulated time: func 3.3050    prepare 0.0096    bound 3.2850    beta_bound 3.2847    transfer 0.0043    finalize 0.0083    
batch bounding time:  1.0250210762023926
Current worst splitting domains lb-rhs (depth):
-0.09441 (3), -0.09381 (3), -0.06419 (3), -0.03603 (3), -0.03171 (3), -0.02290 (3), 
length of domains: 6
Time: pickout 0.0028    decision 0.1235    set_bounds 0.0020    solve 1.0250    add 0.0058    
Accumulated time: pickout 0.0092    decision 0.7349    set_bounds 0.0047    solve 3.3054    add 0.0135    
Current (lb-rhs): -0.0944056510925293
12 domains visited
Cumulative time: 4.972895622253418

BaB round 4
batch: 6
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.52, 989] [/input.52, 989] [/input.52, 421] [/input.52, 989] [/input.52, 989] [/input.52, 633] 
pruning_in_iteration open status: True
ratio of positive domain = 3 / 12 = 0.25
pruning-in-iteration extra time: 0.02307438850402832
Time: prepare 0.0035    beta_bound 1.0483    bound 1.0484    transfer 0.0039    finalize 0.0074    func 1.0632    
Accumulated time: func 4.3682    prepare 0.0139    bound 4.3333    beta_bound 4.3330    transfer 0.0082    finalize 0.0157    
batch bounding time:  1.063439130783081
Current worst splitting domains lb-rhs (depth):
-0.07852 (4), -0.07732 (4), -0.04873 (4), -0.03266 (4), -0.03069 (4), -0.01850 (4), -0.01420 (4), -0.00772 (4), -0.00238 (4), 
length of domains: 9
Time: pickout 0.0024    decision 0.1076    set_bounds 0.0013    solve 1.0635    add 0.0081    
Accumulated time: pickout 0.0116    decision 0.8426    set_bounds 0.0060    solve 4.3688    add 0.0216    
Current (lb-rhs): -0.07851552963256836
21 domains visited
Cumulative time: 6.156433582305908

BaB round 5
batch: 8
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.52, 514] [/input.52, 989] [/input.52, 633] [/input.52, 633] [/input.52, 633] [/input.52, 514] [/input.52, 633] [/input.52, 989] 
pruning_in_iteration open status: True
ratio of positive domain = 7 / 16 = 0.4375
pruning-in-iteration extra time: 0.0434107780456543
Time: prepare 0.0045    beta_bound 1.0771    bound 1.0772    transfer 0.0032    finalize 0.0076    func 1.0926    
Accumulated time: func 5.4608    prepare 0.0191    bound 5.4105    beta_bound 5.4101    transfer 0.0114    finalize 0.0233    
batch bounding time:  1.0927002429962158
Current worst splitting domains lb-rhs (depth):
-0.07732 (4), -0.06406 (5), -0.04243 (5), -0.03247 (5), -0.02613 (5), -0.01752 (5), -0.01078 (5), -0.00898 (5), -0.00579 (5), -0.00060 (5), 
length of domains: 10
Time: pickout 0.0020    decision 0.0804    set_bounds 0.0014    solve 1.0927    add 0.0056    
Accumulated time: pickout 0.0137    decision 0.9230    set_bounds 0.0074    solve 5.4616    add 0.0273    
Current (lb-rhs): -0.07732057571411133
30 domains visited
Cumulative time: 7.33917498588562

BaB round 6
batch: 8
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.52, 236] [/input.52, 236] [/input.52, 236] [/input.52, 633] [/input.52, 633] [/input.52, 236] [/input.52, 236] [/input.52, 633] 
pruning_in_iteration open status: True
ratio of positive domain = 10 / 16 = 0.625
pruning-in-iteration extra time: 0.024153709411621094
Time: prepare 0.0063    beta_bound 1.0969    bound 1.0969    transfer 0.0031    finalize 0.0061    func 1.1125    
Accumulated time: func 6.5733    prepare 0.0260    bound 6.5075    beta_bound 6.5069    transfer 0.0145    finalize 0.0294    
batch bounding time:  1.1126792430877686
Current worst splitting domains lb-rhs (depth):
-0.07732 (4), -0.06406 (5), -0.02172 (6), -0.02091 (6), -0.01470 (6), -0.00620 (6), -0.00143 (6), -0.00118 (6), 
length of domains: 8
Time: pickout 0.0020    decision 0.0743    set_bounds 0.0017    solve 1.1127    add 0.0047    
Accumulated time: pickout 0.0156    decision 0.9973    set_bounds 0.0091    solve 6.5743    add 0.0319    
Current (lb-rhs): -0.07732057571411133
36 domains visited
Cumulative time: 8.53555154800415

BaB round 7
batch: 8
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.52, 633] [/input.52, 633] [/input.52, 62] [/input.52, 236] [/input.52, 514] [/input.52, 62] [/input.52, 236] [/input.52, 514] 
pruning_in_iteration open status: True
ratio of positive domain = 8 / 16 = 0.5
pruning-in-iteration extra time: 0.02138662338256836
Time: prepare 0.0063    beta_bound 1.0839    bound 1.0841    transfer 0.0031    finalize 0.0072    func 1.1007    
Accumulated time: func 7.6741    prepare 0.0329    bound 7.5915    beta_bound 7.5909    transfer 0.0176    finalize 0.0366    
batch bounding time:  1.1008305549621582
Current worst splitting domains lb-rhs (depth):
-0.06117 (5), -0.05529 (5), -0.05074 (6), -0.03740 (6), -0.01441 (7), -0.01227 (7), -0.00258 (7), -0.00047 (7), 
length of domains: 8
Time: pickout 0.0032    decision 0.0755    set_bounds 0.0014    solve 1.1008    add 0.0048    
Accumulated time: pickout 0.0188    decision 1.0728    set_bounds 0.0105    solve 7.6751    add 0.0368    
Current (lb-rhs): -0.0611729621887207
44 domains visited
Cumulative time: 9.721764326095581

BaB round 8
batch: 8
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input.52, 236] [/input.52, 236] [/input.52, 62] [/input.52, 236] [/input.52, 236] [/input.52, 514] [/input.52, 514] [/input.52, 62] 
pruning_in_iteration open status: True
ratio of positive domain = 6 / 16 = 0.375
pruning-in-iteration extra time: 0.02241373062133789
Time: prepare 0.0050    beta_bound 1.0713    bound 1.0714    transfer 0.0032    finalize 0.0081    func 1.0878    
Accumulated time: func 8.7619    prepare 0.0386    bound 8.6630    beta_bound 8.6622    transfer 0.0208    finalize 0.0447    
batch bounding time:  1.0879790782928467
Current worst splitting domains lb-rhs (depth):
-0.04849 (6), -0.04457 (6), -0.04004 (7), -0.02738 (7), -0.02311 (6), -0.02166 (6), -0.01331 (7), -0.00967 (8), -0.00344 (7), -0.00335 (8), 
length of domains: 10
Time: pickout 0.0018    decision 0.0772    set_bounds 0.0013    solve 1.0880    add 0.0076    
Accumulated time: pickout 0.0206    decision 1.1500    set_bounds 0.0118    solve 8.7631    add 0.0443    
Current (lb-rhs): -0.04848623275756836
54 domains visited
Cumulative time: 10.89845323562622

BaB round 9
batch: 8
Average branched neurons at iteration 9:  1.0000
splitting decisions: 
split level 0: [/input.52, 514] [/input.52, 62] [/input.52, 674] [/input.52, 62] [/input.52, 62] [/input.52, 514] [/input.52, 62] [/input.52, 674] 
pruning_in_iteration open status: True
ratio of positive domain = 10 / 16 = 0.625
pruning-in-iteration extra time: 0.023296356201171875
Time: prepare 0.0055    beta_bound 1.0192    bound 1.0192    transfer 0.0032    finalize 0.0063    func 1.0342    
Accumulated time: func 9.7961    prepare 0.0447    bound 9.6822    beta_bound 9.6814    transfer 0.0239    finalize 0.0510    
batch bounding time:  1.0343525409698486
Current worst splitting domains lb-rhs (depth):
-0.04061 (7), -0.03313 (7), -0.03283 (8), -0.02311 (6), -0.02081 (8), -0.01331 (7), -0.00951 (7), -0.00701 (9), 
length of domains: 8
Time: pickout 0.0028    decision 0.0996    set_bounds 0.0026    solve 1.0344    add 0.0057    
Accumulated time: pickout 0.0235    decision 1.2496    set_bounds 0.0144    solve 9.7975    add 0.0500    
Current (lb-rhs): -0.040607452392578125
60 domains visited
Cumulative time: 12.044461011886597

BaB round 10
batch: 8
Average branched neurons at iteration 10:  1.0000
splitting decisions: 
split level 0: [/input.52, 62] [/input.52, 62] [/input.52, 62] [/input.52, 62] [/input.52, 846] [/input.52, 514] [/input.52, 674] [/input.52, 674] 
pruning_in_iteration open status: True
ratio of positive domain = 8 / 16 = 0.5
pruning-in-iteration extra time: 0.0213773250579834
Time: prepare 0.0044    beta_bound 1.0890    bound 1.0891    transfer 0.0044    finalize 0.0084    func 1.1062    
Accumulated time: func 10.9023    prepare 0.0499    bound 10.7713    beta_bound 10.7703    transfer 0.0283    finalize 0.0594    
batch bounding time:  1.1063783168792725
Current worst splitting domains lb-rhs (depth):
-0.03430 (8), -0.02866 (9), -0.02677 (8), -0.01712 (9), -0.01684 (7), -0.00673 (8), -0.00434 (8), -0.00008 (10), 
length of domains: 8
Time: pickout 0.0020    decision 0.0788    set_bounds 0.0014    solve 1.1064    add 0.0047    
Accumulated time: pickout 0.0255    decision 1.3284    set_bounds 0.0158    solve 10.9039    add 0.0547    
Current (lb-rhs): -0.03429603576660156
68 domains visited
Cumulative time: 13.238273859024048

BaB round 11
batch: 8
Average branched neurons at iteration 11:  1.0000
splitting decisions: 
split level 0: [/input.52, 674] [/input.52, 514] [/input.52, 674] [/input.52, 674] [/input.52, 674] [/input.52, 409] [/input.52, 846] [/input.52, 846] 
pruning_in_iteration open status: True
ratio of positive domain = 9 / 16 = 0.5625
pruning-in-iteration extra time: 0.02734994888305664
Time: prepare 0.0043    beta_bound 1.0520    bound 1.0520    transfer 0.0031    finalize 0.0062    func 1.0657    
Accumulated time: func 11.9680    prepare 0.0550    bound 11.8233    beta_bound 11.8223    transfer 0.0314    finalize 0.0656    
batch bounding time:  1.0657942295074463
Current worst splitting domains lb-rhs (depth):
-0.03003 (9), -0.02355 (9), -0.02260 (10), -0.01177 (10), -0.01139 (8), -0.00260 (9), -0.00125 (9), 
length of domains: 7
Time: pickout 0.0018    decision 0.0758    set_bounds 0.0014    solve 1.0658    add 0.0044    
Accumulated time: pickout 0.0273    decision 1.4042    set_bounds 0.0172    solve 11.9697    add 0.0591    
Current (lb-rhs): -0.030025959014892578
75 domains visited
Cumulative time: 14.38800835609436

BaB round 12
batch: 7
Average branched neurons at iteration 12:  1.0000
splitting decisions: 
split level 0: [/input.52, 674] [/input.52, 846] [/input.52, 846] [/input.52, 846] [/input.52, 846] [/input.52, 409] [/input.52, 409] 
pruning_in_iteration open status: True
ratio of positive domain = 8 / 14 = 0.5714285714285714
pruning-in-iteration extra time: 0.021643400192260742
Time: prepare 0.0038    beta_bound 1.0603    bound 1.0604    transfer 0.0050    finalize 0.0083    func 1.0776    
Accumulated time: func 13.0456    prepare 0.0594    bound 12.8838    beta_bound 12.8826    transfer 0.0364    finalize 0.0739    
batch bounding time:  1.0777356624603271
Current worst splitting domains lb-rhs (depth):
-0.02349 (10), -0.01792 (10), -0.01780 (11), -0.00901 (10), -0.00741 (9), -0.00715 (11), 
length of domains: 6
Time: pickout 0.0019    decision 0.0725    set_bounds 0.0013    solve 1.0778    add 0.0043    
Accumulated time: pickout 0.0292    decision 1.4767    set_bounds 0.0185    solve 13.0475    add 0.0634    
Current (lb-rhs): -0.02348947525024414
81 domains visited
Cumulative time: 15.546507596969604

BaB round 13
batch: 6
Average branched neurons at iteration 13:  1.0000
splitting decisions: 
split level 0: [/input.52, 409] [/input.52, 846] [/input.52, 409] [/input.52, 409] [/input.52, 519] [/input.52, 519] 
pruning_in_iteration open status: True
ratio of positive domain = 7 / 12 = 0.5833333333333333
pruning-in-iteration extra time: 0.021645069122314453
Time: prepare 0.0035    beta_bound 1.0774    bound 1.0775    transfer 0.0032    finalize 0.0048    func 1.0890    
Accumulated time: func 14.1346    prepare 0.0637    bound 13.9613    beta_bound 13.9600    transfer 0.0395    finalize 0.0787    
batch bounding time:  1.0891656875610352
Current worst splitting domains lb-rhs (depth):
-0.01830 (11), -0.01301 (11), -0.01233 (12), -0.00203 (12), -0.00075 (10), 
length of domains: 5
Time: pickout 0.0019    decision 0.0772    set_bounds 0.0013    solve 1.0892    add 0.0035    
Accumulated time: pickout 0.0311    decision 1.5539    set_bounds 0.0198    solve 14.1366    add 0.0669    
Current (lb-rhs): -0.018303394317626953
86 domains visited
Cumulative time: 16.720195770263672

BaB round 14
batch: 5
Average branched neurons at iteration 14:  1.0000
splitting decisions: 
split level 0: [/input.52, 409] [/input.52, 519] [/input.52, 519] [/input.52, 132] [/input.52, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 7 / 10 = 0.7
pruning-in-iteration extra time: 0.020321369171142578
Time: prepare 0.0031    beta_bound 1.0657    bound 1.0659    transfer 0.0035    finalize 0.0048    func 1.0773    
Accumulated time: func 15.2119    prepare 0.0674    bound 15.0272    beta_bound 15.0257    transfer 0.0430    finalize 0.0835    
batch bounding time:  1.077439785003662
Current worst splitting domains lb-rhs (depth):
-0.01274 (12), -0.00792 (12), -0.00765 (13), 
length of domains: 3
Time: pickout 0.0018    decision 0.0828    set_bounds 0.0012    solve 1.0775    add 0.0044    
Accumulated time: pickout 0.0330    decision 1.6367    set_bounds 0.0210    solve 15.2141    add 0.0713    
Current (lb-rhs): -0.012738704681396484
89 domains visited
Cumulative time: 17.88850474357605

BaB round 15
batch: 3
Average branched neurons at iteration 15:  1.0000
splitting decisions: 
split level 0: [/input.52, 132] [/input.52, 132] [/input.52, 865] 
pruning_in_iteration open status: True
ratio of positive domain = 3 / 6 = 0.5
pruning-in-iteration extra time: 0.021445035934448242
Time: prepare 0.0022    beta_bound 1.0177    bound 1.0178    transfer 0.0026    finalize 0.0037    func 1.0265    
Accumulated time: func 16.2383    prepare 0.0703    bound 16.0450    beta_bound 16.0435    transfer 0.0456    finalize 0.0872    
batch bounding time:  1.0265824794769287
Current worst splitting domains lb-rhs (depth):
-0.00810 (13), -0.00308 (13), -0.00250 (14), 
length of domains: 3
Time: pickout 0.0019    decision 0.0876    set_bounds 0.0025    solve 1.0266    add 0.0026    
Accumulated time: pickout 0.0349    decision 1.7243    set_bounds 0.0235    solve 16.2407    add 0.0739    
Current (lb-rhs): -0.00810384750366211
92 domains visited
Cumulative time: 19.010220289230347

BaB round 16
batch: 3
Average branched neurons at iteration 16:  1.0000
splitting decisions: 
split level 0: [/input.52, 578] [/input.52, 865] [/input.52, 865] 
pruning_in_iteration open status: True
ratio of positive domain = 5 / 6 = 0.8333333333333334
pruning-in-iteration extra time: 0.013709783554077148
Time: prepare 0.0021    beta_bound 0.6463    bound 0.6464    transfer 0.0017    finalize 0.0026    func 0.6529    
Accumulated time: func 16.8913    prepare 0.0733    bound 16.6914    beta_bound 16.6898    transfer 0.0473    finalize 0.0899    
batch bounding time:  0.653012752532959
Current worst splitting domains lb-rhs (depth):
-0.00294 (14), 
length of domains: 1
Time: pickout 0.0025    decision 0.0829    set_bounds 0.0012    solve 0.6530    add 0.0032    
Accumulated time: pickout 0.0374    decision 1.8072    set_bounds 0.0247    solve 16.8938    add 0.0771    
Current (lb-rhs): -0.002944469451904297
93 domains visited
Cumulative time: 19.753856420516968

BaB round 17
batch: 1
Average branched neurons at iteration 17:  1.0000
splitting decisions: 
split level 0: [/input.52, 578] 
pruning_in_iteration open status: True
ratio of positive domain = 1 / 2 = 0.5
pruning-in-iteration extra time: 0.012344121932983398
Time: prepare 0.0020    beta_bound 0.6144    bound 0.6145    transfer 0.0010    finalize 0.0013    func 0.6188    
Accumulated time: func 17.5101    prepare 0.0759    bound 17.3059    beta_bound 17.3042    transfer 0.0483    finalize 0.0912    
batch bounding time:  0.6188924312591553
Current worst splitting domains lb-rhs (depth):
-0.00011 (15), 
length of domains: 1
Time: pickout 0.0023    decision 0.0804    set_bounds 0.0024    solve 0.6189    add 0.0017    
Accumulated time: pickout 0.0397    decision 1.8876    set_bounds 0.0271    solve 17.5127    add 0.0789    
Current (lb-rhs): -0.00011157989501953125
94 domains visited
Cumulative time: 20.45999765396118

BaB round 18
batch: 1
Average branched neurons at iteration 18:  1.0000
splitting decisions: 
split level 0: [/input.52, 704] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 2 / 2 = 1.0
pruning-in-iteration extra time: 0.00010156631469726562
Time: prepare 0.0013    beta_bound 0.0251    bound 0.0251    transfer 0.0006    finalize 0.0013    func 0.0284    
Accumulated time: func 17.5384    prepare 0.0782    bound 17.3310    beta_bound 17.3293    transfer 0.0489    finalize 0.0924    
batch bounding time:  0.028436660766601562
length of domains: 0
Time: pickout 0.0017    decision 0.0732    set_bounds 0.0012    solve 0.0285    add 0.0001    
Accumulated time: pickout 0.0414    decision 1.9608    set_bounds 0.0283    solve 17.5411    add 0.0790    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
94 domains visited
Cumulative time: 20.56501531600952


Properties batch 5, size 1
Remaining timeout: 113.45205211639404
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.34787988662719727.

Properties batch 6, size 1
Remaining timeout: 113.23788833618164
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.4135723114013672.

Properties batch 7, size 1
Remaining timeout: 113.17547750473022
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.22029423713684082.

Properties batch 8, size 1
Remaining timeout: 113.11506748199463
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.4756898880004883.
Result: safe in 66.9457 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):66.94500186994284, max time: 66.94567131996155
mean time for verified SAFE instances(total 1): 66.94567131996155, max time: 66.94567131996155
safe (total 1), index: [0]
