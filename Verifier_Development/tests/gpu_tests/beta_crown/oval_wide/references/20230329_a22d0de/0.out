Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: false
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: cifar_model_wide
  path: cifar_wide.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 0
  end: 1
  select_instance: null
  num_outputs: 10
  mean: [0.485, 0.456, 0.406]
  std: [0.225, 0.225, 0.225]
  pkl_path: wide_100.pkl
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: specify-target
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 30
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: fsb
    candidates: 1
    reduceop: min
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 13:31:22 2023 on zeratul
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
Files already downloaded and verified
Overwrite epsilon that saved in .pkl file, they should be after normalized!
Internal results will be saved to Verified_ret_[cifar_model_wide]_start=0_end=1_iter=20_b=1024_timeout=30_branching=fsb-min-1_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Total VNNLIB file length: 1, max property batch size: 1, total number of batches: 1

Properties batch 0, size 1
Remaining timeout: 25.678361177444458
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2])
  (/input.4): BoundRelu(name=/input.4, inputs=[/input])
  (/input.8): BoundConv(name=/input.8, inputs=[/input.4, /3, /4])
  (/12): BoundRelu(name=/12, inputs=[/input.8])
  (/13): BoundShape(name=/13, inputs=[/12])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundGather(name=/15, inputs=[/13, /14])
  (/16): BoundConstant(name=/16, inputs=[])
  (/17): BoundUnsqueeze(name=/17, inputs=[/15])
  (/18): BoundUnsqueeze(name=/18, inputs=[/16])
  (/19): BoundConcat(name=/19, inputs=[/17, /18])
  (/20): BoundReshape(name=/20, inputs=[/12, /19])
  (/input.12): BoundLinear(name=/input.12, inputs=[/20, /5, /6])
  (/22): BoundRelu(name=/22, inputs=[/input.12])
  (/23): BoundLinear(name=/23, inputs=[/22, /7, /8])
)
Model prediction is: tensor([-0.26283583, -1.79466081,  0.92987871,  0.43162197,  1.08514738,
        -0.04146595,  2.40101624,  0.07541321, -2.04133320, -0.78272486],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [1069]; unstable size 1069; total size 4096 (torch.Size([1, 16, 16, 16]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 385 total_size 2048 output_shape (32, 8, 8)
layer /input.4 start_node /input.12 using sparse-spec alpha with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /23 using full alpha with unstable size None total_size 1 output_shape 1
layer /12 using sparse-features alpha with shape [385]; unstable size 385; total size 2048 (torch.Size([1, 32, 8, 8]))
layer /12 start_node /input.12 using sparse-spec alpha with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /12 start_node /23 using full alpha with unstable size None total_size 1 output_shape 1
layer /22 using sparse-features alpha with shape [43]; unstable size 43; total size 100 (torch.Size([1, 100]))
layer /22 start_node /23 using full alpha with unstable size None total_size 1 output_shape 1
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.05921507]], device='cuda:0') None
best_l after optimization: -0.7609021663665771
alpha/beta optimization time: 6.775519132614136
initial alpha-CROWN bounds: tensor([[-0.76090217]], device='cuda:0')
Worst class: (+ rhs) -0.7609021663665771
Split layers:
  BoundConv(name=/input.8, inputs=[/input.4, /3, /4]): [(BoundRelu(name=/12, inputs=[/input.8]), 0)]
  BoundConv(name=/input, inputs=[/input.1, /1, /2]): [(BoundRelu(name=/input.4, inputs=[/input]), 0)]
  BoundLinear(name=/input.12, inputs=[/20, /5, /6]): [(BoundRelu(name=/22, inputs=[/input.12]), 0)]
Keeping slopes for these layers: ['/23']
Node /input.4 input 0: size torch.Size([16, 16, 16]) unstable 1069
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 369
Node /22 input 0: size torch.Size([100]) unstable 42
-----------------
# of unstable neurons: 1480
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.12, 31] 
split level 1: [/input.12, 6] 
split level 2: [/input.12, 83] 
split level 3: [/input.12, 58] 
split level 4: [/input.12, 10] 
split level 5: [/input.12, 45] 
best_l after optimization: 33.027984619140625
beta sum per layer: [0.0, 0.0, 2.229771375656128]
alpha/beta optimization time: 0.5837996006011963
pruning_in_iteration open status: True
ratio of positive domain = 59 / 64 = 0.921875
pruning-in-iteration extra time: 0.015654325485229492
Time: prepare 0.0038    beta_bound 0.5843    bound 0.5844    transfer 0.0011    finalize 0.0054    func 0.5947    
Accumulated time: func 0.5947    prepare 0.0058    bound 0.5844    beta_bound 0.5843    transfer 0.0011    finalize 0.0054    
batch bounding time:  0.5950987339019775
Current worst splitting domains lb-rhs (depth):
-0.30656 (6), -0.18728 (6), -0.13371 (6), -0.10896 (6), -0.08893 (6), 
length of domains: 5
Time: pickout 0.0009    decision 0.0993    set_bounds 0.0016    solve 0.5951    add 0.0021    
Accumulated time: pickout 0.0009    decision 0.0993    set_bounds 0.0016    solve 0.5951    add 0.0021    
Current (lb-rhs): -0.3065553903579712
5 domains visited
Cumulative time: 9.65818476676941

BaB round 2
batch: 5
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.12, 98] [/input.12, 98] [/input.12, 98] [/input.12, 98] [/input.12, 98] 
split level 1: [/input.12, 89] [/input.12, 89] [/input.12, 89] [/input.12, 89] [/input.12, 89] 
split level 2: [/input.12, 23] [/input.12, 23] [/input.12, 23] [/input.12, 23] [/input.12, 23] 
split level 3: [/input.12, 22] [/input.12, 22] [/input.12, 22] [/input.12, 22] [/input.12, 22] 
best_l after optimization: 12.125328063964844
beta sum per layer: [0.0, 0.0, 36.921844482421875]
alpha/beta optimization time: 0.3835773468017578
pruning_in_iteration open status: True
ratio of positive domain = 76 / 80 = 0.95
pruning-in-iteration extra time: 0.01530146598815918
Time: prepare 0.0114    beta_bound 0.3844    bound 0.3845    transfer 0.0012    finalize 0.0086    func 0.4058    
Accumulated time: func 1.0005    prepare 0.0187    bound 0.9690    beta_bound 0.9687    transfer 0.0023    finalize 0.0139    
batch bounding time:  0.40593838691711426
Current worst splitting domains lb-rhs (depth):
-0.07468 (10), -0.02490 (10), -0.01495 (10), -0.01434 (10), 
length of domains: 4
Time: pickout 0.0012    decision 0.0877    set_bounds 0.0024    solve 0.4060    add 0.0015    
Accumulated time: pickout 0.0022    decision 0.1870    set_bounds 0.0040    solve 1.0011    add 0.0036    
Current (lb-rhs): -0.07468068599700928
9 domains visited
Cumulative time: 10.15770697593689

BaB round 3
batch: 4
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.12, 40] [/input.12, 40] [/input.12, 40] [/input.12, 40] 
split level 1: [/input.12, 42] [/input.12, 42] [/input.12, 42] [/input.12, 42] 
split level 2: [/input.12, 92] [/input.12, 92] [/input.12, 92] [/input.12, 92] 
split level 3: [/input.12, 3] [/input.12, 3] [/input.12, 3] [/input.12, 3] 

all verified at 0th iter
best_l after optimization: 16.636560440063477
beta sum per layer: [0.0, 0.0, 19.92801284790039]
alpha/beta optimization time: 0.010880231857299805
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00010824203491210938
Time: prepare 0.0106    beta_bound 0.0113    bound 0.0114    transfer 0.0006    finalize 0.0062    func 0.0288    
Accumulated time: func 1.0293    prepare 0.0310    bound 0.9804    beta_bound 0.9801    transfer 0.0028    finalize 0.0201    
batch bounding time:  0.028970718383789062
length of domains: 0
Time: pickout 0.0012    decision 0.0881    set_bounds 0.0017    solve 0.0290    add 0.0003    
Accumulated time: pickout 0.0033    decision 0.2751    set_bounds 0.0057    solve 1.0301    add 0.0038    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
9 domains visited
Cumulative time: 10.278610467910767

Result: safe in 16.1891 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):16.18889116971257, max time: 16.189053058624268
mean time for verified SAFE instances(total 1): 16.189053058624268, max time: 16.189053058624268
safe (total 1), index: [0]
