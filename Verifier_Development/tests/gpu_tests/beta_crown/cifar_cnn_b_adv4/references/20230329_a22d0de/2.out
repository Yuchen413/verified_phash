Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: cnn_4layer_b4
  path: cifar_cnn_b_adv4.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 95
  end: 96
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 256
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 60
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 18:28:51 2023 on zeratul
Sequential(
  (0): ZeroPad2d((1, 2, 1, 2))
  (1): Conv2d(3, 32, kernel_size=(5, 5), stride=(2, 2))
  (2): ReLU()
  (3): Conv2d(32, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (4): ReLU()
  (5): Flatten()
  (6): Linear(in_features=8192, out_features=250, bias=True)
  (7): ReLU()
  (8): Linear(in_features=250, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308714)
############################
Internal results will be saved to Verified_ret_[cnn_4layer_b4]_start=95_end=96_iter=20_b=256_timeout=60_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-43.13674545, -41.65016556, -43.47764969, -43.35157394, -43.69926453,
         -43.12554169, -43.15471268, -45.77563477, -44.56752396, -44.63112640]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-43.91720200, -42.85686111, -44.15116882, -44.02992249, -44.41013336,
          -43.79665375, -43.59253693, -46.57741547, -45.34628296, -45.63048553],
         [-43.91720200, -42.85686111, -44.15116882, -44.02992249, -44.41013336,
          -43.79665375, -43.59253693, -46.57741547, -45.34628296, -45.63048553]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.06034088, 1.29430771, 1.17306137, 1.55327225, 0.93979263,
          0.73567581, 3.72055435, 2.48942184, 2.77362442]]], device='cuda:0')
number of violation:  0
Attack finished in 2.1138 seconds.
PGD attack failed
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundConstant(name=/9, inputs=[])
  (/10): BoundConcat(name=/10, inputs=[/9])
  (/11): BoundConstant(name=/11, inputs=[])
  (/12): BoundShape(name=/12, inputs=[/10])
  (/13): BoundGather(name=/13, inputs=[/12, /11])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundConstant(name=/15, inputs=[])
  (/16): BoundMul(name=/16, inputs=[/14, /15])
  (/17): BoundSub(name=/17, inputs=[/16, /13])
  (/18): BoundCast(name=/18, inputs=[/10])
  (/19): BoundConstantOfShape(name=/19, inputs=[/17])
  (/20): BoundConcat(name=/20, inputs=[/18, /19])
  (/21): BoundConstant(name=/21, inputs=[])
  (/22): BoundReshape(name=/22, inputs=[/20, /21])
  (/23): BoundConstant(name=/23, inputs=[])
  (/24): BoundConstant(name=/24, inputs=[])
  (/25): BoundConstant(name=/25, inputs=[])
  (/26): BoundConstant(name=/26, inputs=[])
  (/27): BoundSlice(name=/27, inputs=[/22, /24, /25, /23, /26])
  (/28): BoundTranspose(name=/28, inputs=[/27])
  (/29): BoundConstant(name=/29, inputs=[])
  (/30): BoundReshape(name=/30, inputs=[/28, /29])
  (/31): BoundCast(name=/31, inputs=[/30])
  (/32): BoundConstant(name=/32, inputs=[])
  (/input): BoundPad(name=/input, inputs=[/input.1, /31, /32])
  (/input.4): BoundConv(name=/input.4, inputs=[/input, /1, /2])
  (/input.8): BoundRelu(name=/input.8, inputs=[/input.4])
  (/input.12): BoundConv(name=/input.12, inputs=[/input.8, /3, /4])
  (/37): BoundRelu(name=/37, inputs=[/input.12])
  (/38): BoundShape(name=/38, inputs=[/37])
  (/39): BoundConstant(name=/39, inputs=[])
  (/40): BoundGather(name=/40, inputs=[/38, /39])
  (/41): BoundConstant(name=/41, inputs=[])
  (/42): BoundUnsqueeze(name=/42, inputs=[/40])
  (/43): BoundUnsqueeze(name=/43, inputs=[/41])
  (/44): BoundConcat(name=/44, inputs=[/42, /43])
  (/45): BoundReshape(name=/45, inputs=[/37, /44])
  (/input.16): BoundLinear(name=/input.16, inputs=[/45, /5, /6])
  (/47): BoundRelu(name=/47, inputs=[/input.16])
  (/48): BoundLinear(name=/48, inputs=[/47, /7, /8])
)
Model prediction is: tensor([[-43.13674545, -41.65016556, -43.47764969, -43.35157394, -43.69926453,
         -43.12554169, -43.15471268, -45.77563477, -44.56752396, -44.63112640]],
       device='cuda:0')
layer /input.8 using sparse-features alpha with shape [1206]; unstable size 1206; total size 8192 (torch.Size([1, 32, 16, 16]))
layer /input.8 start_node /input.12 using sparse-spec alpha with unstable size 84 total_size 128 output_shape 128
layer /input.8 start_node /input.16 using sparse-spec alpha with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input.8 start_node /48 using full alpha with unstable size None total_size 9 output_shape 9
layer /37 using sparse-features alpha with shape [573]; unstable size 573; total size 8192 (torch.Size([1, 128, 8, 8]))
layer /37 start_node /input.16 using sparse-spec alpha with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /37 start_node /48 using full alpha with unstable size None total_size 9 output_shape 9
layer /47 using sparse-features alpha with shape [34]; unstable size 34; total size 250 (torch.Size([1, 250]))
layer /47 start_node /48 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.30576611, -0.34399962, -0.05298138, -0.18811464, -0.33676577,
         -0.67952347,  1.76640630,  1.44419444,  1.76872373]], device='cuda:0') None
best_l after optimization: 4.0083537101745605
alpha/beta optimization time: 7.643445014953613
initial alpha-CROWN bounds: tensor([[-0.17642725, -0.22869802,  0.05145955, -0.05243778, -0.23268414,
         -0.57539797,  1.88312745,  1.52684200,  1.81257010]], device='cuda:0')
Worst class: (+ rhs) -0.5753979682922363
Split layers:
  BoundConv(name=/input.12, inputs=[/input.8, /3, /4]): [(BoundRelu(name=/37, inputs=[/input.12]), 0)]
  BoundConv(name=/input.4, inputs=[/input, /1, /2]): [(BoundRelu(name=/input.8, inputs=[/input.4]), 0)]
  BoundLinear(name=/input.16, inputs=[/45, /5, /6]): [(BoundRelu(name=/47, inputs=[/input.16]), 0)]
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 32, 16, 16]), torch.Size([1, 9, 128, 8, 8]), torch.Size([1, 9, 250])]

Properties batch 0, size 1
Remaining timeout: 44.07385015487671
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.17642725]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundConstant(name=/9, inputs=[])
  (/10): BoundConcat(name=/10, inputs=[/9])
  (/11): BoundConstant(name=/11, inputs=[])
  (/12): BoundShape(name=/12, inputs=[/10])
  (/13): BoundGather(name=/13, inputs=[/12, /11])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundConstant(name=/15, inputs=[])
  (/16): BoundMul(name=/16, inputs=[/14, /15])
  (/17): BoundSub(name=/17, inputs=[/16, /13])
  (/18): BoundCast(name=/18, inputs=[/10])
  (/19): BoundConstantOfShape(name=/19, inputs=[/17])
  (/20): BoundConcat(name=/20, inputs=[/18, /19])
  (/21): BoundConstant(name=/21, inputs=[])
  (/22): BoundReshape(name=/22, inputs=[/20, /21])
  (/23): BoundConstant(name=/23, inputs=[])
  (/24): BoundConstant(name=/24, inputs=[])
  (/25): BoundConstant(name=/25, inputs=[])
  (/26): BoundConstant(name=/26, inputs=[])
  (/27): BoundSlice(name=/27, inputs=[/22, /24, /25, /23, /26])
  (/28): BoundTranspose(name=/28, inputs=[/27])
  (/29): BoundConstant(name=/29, inputs=[])
  (/30): BoundReshape(name=/30, inputs=[/28, /29])
  (/31): BoundCast(name=/31, inputs=[/30])
  (/32): BoundConstant(name=/32, inputs=[])
  (/input): BoundPad(name=/input, inputs=[/input.1, /31, /32])
  (/input.4): BoundConv(name=/input.4, inputs=[/input, /1, /2])
  (/input.8): BoundRelu(name=/input.8, inputs=[/input.4])
  (/input.12): BoundConv(name=/input.12, inputs=[/input.8, /3, /4])
  (/37): BoundRelu(name=/37, inputs=[/input.12])
  (/38): BoundShape(name=/38, inputs=[/37])
  (/39): BoundConstant(name=/39, inputs=[])
  (/40): BoundGather(name=/40, inputs=[/38, /39])
  (/41): BoundConstant(name=/41, inputs=[])
  (/42): BoundUnsqueeze(name=/42, inputs=[/40])
  (/43): BoundUnsqueeze(name=/43, inputs=[/41])
  (/44): BoundConcat(name=/44, inputs=[/42, /43])
  (/45): BoundReshape(name=/45, inputs=[/37, /44])
  (/input.16): BoundLinear(name=/input.16, inputs=[/45, /5, /6])
  (/47): BoundRelu(name=/47, inputs=[/input.16])
  (/48): BoundLinear(name=/48, inputs=[/47, /7, /8])
)
Model prediction is: tensor([-43.13674545, -41.65016556, -43.47764969, -43.35157394, -43.69926453,
        -43.12554169, -43.15471268, -45.77563477, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.8 start_node /48 with alignment adjustment
setting alpha for layer /37 start_node /48 with alignment adjustment
setting alpha for layer /47 start_node /48 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.17642725]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.12,/input.4,/input.16,/48
Split layers:
  BoundConv(name=/input.4, inputs=[/input, /1, /2]): [(BoundRelu(name=/input.8, inputs=[/input.4]), 0)]
  BoundConv(name=/input.12, inputs=[/input.8, /3, /4]): [(BoundRelu(name=/37, inputs=[/input.12]), 0)]
  BoundLinear(name=/input.16, inputs=[/45, /5, /6]): [(BoundRelu(name=/47, inputs=[/input.16]), 0)]
Keeping slopes for these layers: ['/48']
Keeping slopes for these layers: ['/48']
Node /input.8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /37 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /47 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.16, 186] 
split level 1: [/input.16, 138] 
split level 2: [/input.16, 16] 
split level 3: [/input.16, 18] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 0.00011348724365234375
Time: prepare 0.0025    beta_bound 0.0255    bound 0.0256    transfer 0.0005    finalize 0.0020    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0032    bound 0.0256    beta_bound 0.0255    transfer 0.0005    finalize 0.0020    
batch bounding time:  0.03069019317626953
length of domains: 0
Time: pickout 0.0010    decision 0.4645    set_bounds 0.0019    solve 0.0307    add 0.0003    
Accumulated time: pickout 0.0010    decision 0.4645    set_bounds 0.0019    solve 0.0307    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.6650733947753906


Properties batch 1, size 1
Remaining timeout: 43.192588567733765
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.22869802]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundConstant(name=/9, inputs=[])
  (/10): BoundConcat(name=/10, inputs=[/9])
  (/11): BoundConstant(name=/11, inputs=[])
  (/12): BoundShape(name=/12, inputs=[/10])
  (/13): BoundGather(name=/13, inputs=[/12, /11])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundConstant(name=/15, inputs=[])
  (/16): BoundMul(name=/16, inputs=[/14, /15])
  (/17): BoundSub(name=/17, inputs=[/16, /13])
  (/18): BoundCast(name=/18, inputs=[/10])
  (/19): BoundConstantOfShape(name=/19, inputs=[/17])
  (/20): BoundConcat(name=/20, inputs=[/18, /19])
  (/21): BoundConstant(name=/21, inputs=[])
  (/22): BoundReshape(name=/22, inputs=[/20, /21])
  (/23): BoundConstant(name=/23, inputs=[])
  (/24): BoundConstant(name=/24, inputs=[])
  (/25): BoundConstant(name=/25, inputs=[])
  (/26): BoundConstant(name=/26, inputs=[])
  (/27): BoundSlice(name=/27, inputs=[/22, /24, /25, /23, /26])
  (/28): BoundTranspose(name=/28, inputs=[/27])
  (/29): BoundConstant(name=/29, inputs=[])
  (/30): BoundReshape(name=/30, inputs=[/28, /29])
  (/31): BoundCast(name=/31, inputs=[/30])
  (/32): BoundConstant(name=/32, inputs=[])
  (/input): BoundPad(name=/input, inputs=[/input.1, /31, /32])
  (/input.4): BoundConv(name=/input.4, inputs=[/input, /1, /2])
  (/input.8): BoundRelu(name=/input.8, inputs=[/input.4])
  (/input.12): BoundConv(name=/input.12, inputs=[/input.8, /3, /4])
  (/37): BoundRelu(name=/37, inputs=[/input.12])
  (/38): BoundShape(name=/38, inputs=[/37])
  (/39): BoundConstant(name=/39, inputs=[])
  (/40): BoundGather(name=/40, inputs=[/38, /39])
  (/41): BoundConstant(name=/41, inputs=[])
  (/42): BoundUnsqueeze(name=/42, inputs=[/40])
  (/43): BoundUnsqueeze(name=/43, inputs=[/41])
  (/44): BoundConcat(name=/44, inputs=[/42, /43])
  (/45): BoundReshape(name=/45, inputs=[/37, /44])
  (/input.16): BoundLinear(name=/input.16, inputs=[/45, /5, /6])
  (/47): BoundRelu(name=/47, inputs=[/input.16])
  (/48): BoundLinear(name=/48, inputs=[/47, /7, /8])
)
Model prediction is: tensor([-43.13674545, -41.65016556, -43.47764969, -43.35157394, -43.69926453,
        -43.12554169, -43.15471268, -45.77563477, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.8 start_node /48 with alignment adjustment
setting alpha for layer /37 start_node /48 with alignment adjustment
setting alpha for layer /47 start_node /48 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.22869802]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.12,/input.4,/input.16,/48
Split layers:
  BoundConv(name=/input.12, inputs=[/input.8, /3, /4]): [(BoundRelu(name=/37, inputs=[/input.12]), 0)]
  BoundLinear(name=/input.16, inputs=[/45, /5, /6]): [(BoundRelu(name=/47, inputs=[/input.16]), 0)]
  BoundConv(name=/input.4, inputs=[/input, /1, /2]): [(BoundRelu(name=/input.8, inputs=[/input.4]), 0)]
Keeping slopes for these layers: ['/48']
Keeping slopes for these layers: ['/48']
Node /input.8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /37 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /47 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.16, 186] 
split level 1: [/input.16, 72] 
split level 2: [/input.16, 227] 
split level 3: [/input.16, 138] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 8.845329284667969e-05
Time: prepare 0.0014    beta_bound 0.0280    bound 0.0281    transfer 0.0005    finalize 0.0015    func 0.0315    
Accumulated time: func 0.0315    prepare 0.0022    bound 0.0281    beta_bound 0.0280    transfer 0.0005    finalize 0.0015    
batch bounding time:  0.03156614303588867
length of domains: 0
Time: pickout 0.0011    decision 0.0599    set_bounds 0.0010    solve 0.0316    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0599    set_bounds 0.0010    solve 0.0316    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.11332178115844727


Properties batch 2, size 1
Remaining timeout: 42.89334511756897
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.051459550857543945.

Properties batch 3, size 1
Remaining timeout: 42.825937032699585
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.05243778]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundConstant(name=/9, inputs=[])
  (/10): BoundConcat(name=/10, inputs=[/9])
  (/11): BoundConstant(name=/11, inputs=[])
  (/12): BoundShape(name=/12, inputs=[/10])
  (/13): BoundGather(name=/13, inputs=[/12, /11])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundConstant(name=/15, inputs=[])
  (/16): BoundMul(name=/16, inputs=[/14, /15])
  (/17): BoundSub(name=/17, inputs=[/16, /13])
  (/18): BoundCast(name=/18, inputs=[/10])
  (/19): BoundConstantOfShape(name=/19, inputs=[/17])
  (/20): BoundConcat(name=/20, inputs=[/18, /19])
  (/21): BoundConstant(name=/21, inputs=[])
  (/22): BoundReshape(name=/22, inputs=[/20, /21])
  (/23): BoundConstant(name=/23, inputs=[])
  (/24): BoundConstant(name=/24, inputs=[])
  (/25): BoundConstant(name=/25, inputs=[])
  (/26): BoundConstant(name=/26, inputs=[])
  (/27): BoundSlice(name=/27, inputs=[/22, /24, /25, /23, /26])
  (/28): BoundTranspose(name=/28, inputs=[/27])
  (/29): BoundConstant(name=/29, inputs=[])
  (/30): BoundReshape(name=/30, inputs=[/28, /29])
  (/31): BoundCast(name=/31, inputs=[/30])
  (/32): BoundConstant(name=/32, inputs=[])
  (/input): BoundPad(name=/input, inputs=[/input.1, /31, /32])
  (/input.4): BoundConv(name=/input.4, inputs=[/input, /1, /2])
  (/input.8): BoundRelu(name=/input.8, inputs=[/input.4])
  (/input.12): BoundConv(name=/input.12, inputs=[/input.8, /3, /4])
  (/37): BoundRelu(name=/37, inputs=[/input.12])
  (/38): BoundShape(name=/38, inputs=[/37])
  (/39): BoundConstant(name=/39, inputs=[])
  (/40): BoundGather(name=/40, inputs=[/38, /39])
  (/41): BoundConstant(name=/41, inputs=[])
  (/42): BoundUnsqueeze(name=/42, inputs=[/40])
  (/43): BoundUnsqueeze(name=/43, inputs=[/41])
  (/44): BoundConcat(name=/44, inputs=[/42, /43])
  (/45): BoundReshape(name=/45, inputs=[/37, /44])
  (/input.16): BoundLinear(name=/input.16, inputs=[/45, /5, /6])
  (/47): BoundRelu(name=/47, inputs=[/input.16])
  (/48): BoundLinear(name=/48, inputs=[/47, /7, /8])
)
Model prediction is: tensor([-43.13674545, -41.65016556, -43.47764969, -43.35157394, -43.69926453,
        -43.12554169, -43.15471268, -45.77563477, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.8 start_node /48 with alignment adjustment
setting alpha for layer /37 start_node /48 with alignment adjustment
setting alpha for layer /47 start_node /48 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.05243778]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.12,/input.4,/input.16,/48
Split layers:
  BoundConv(name=/input.4, inputs=[/input, /1, /2]): [(BoundRelu(name=/input.8, inputs=[/input.4]), 0)]
  BoundLinear(name=/input.16, inputs=[/45, /5, /6]): [(BoundRelu(name=/47, inputs=[/input.16]), 0)]
  BoundConv(name=/input.12, inputs=[/input.8, /3, /4]): [(BoundRelu(name=/37, inputs=[/input.12]), 0)]
Keeping slopes for these layers: ['/48']
Keeping slopes for these layers: ['/48']
Node /input.8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /37 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /47 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.16, 230] 
split level 1: [/input.16, 115] 
split level 2: [/input.16, 186] 
split level 3: [/input.16, 10] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 0.00011682510375976562
Time: prepare 0.0012    beta_bound 0.0250    bound 0.0251    transfer 0.0006    finalize 0.0021    func 0.0290    
Accumulated time: func 0.0290    prepare 0.0021    bound 0.0251    beta_bound 0.0250    transfer 0.0006    finalize 0.0021    
batch bounding time:  0.02911376953125
length of domains: 0
Time: pickout 0.0007    decision 0.0608    set_bounds 0.0011    solve 0.0291    add 0.0002    
Accumulated time: pickout 0.0007    decision 0.0608    set_bounds 0.0011    solve 0.0291    add 0.0002    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.11207246780395508


Properties batch 4, size 1
Remaining timeout: 42.529767751693726
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.23268414]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundConstant(name=/9, inputs=[])
  (/10): BoundConcat(name=/10, inputs=[/9])
  (/11): BoundConstant(name=/11, inputs=[])
  (/12): BoundShape(name=/12, inputs=[/10])
  (/13): BoundGather(name=/13, inputs=[/12, /11])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundConstant(name=/15, inputs=[])
  (/16): BoundMul(name=/16, inputs=[/14, /15])
  (/17): BoundSub(name=/17, inputs=[/16, /13])
  (/18): BoundCast(name=/18, inputs=[/10])
  (/19): BoundConstantOfShape(name=/19, inputs=[/17])
  (/20): BoundConcat(name=/20, inputs=[/18, /19])
  (/21): BoundConstant(name=/21, inputs=[])
  (/22): BoundReshape(name=/22, inputs=[/20, /21])
  (/23): BoundConstant(name=/23, inputs=[])
  (/24): BoundConstant(name=/24, inputs=[])
  (/25): BoundConstant(name=/25, inputs=[])
  (/26): BoundConstant(name=/26, inputs=[])
  (/27): BoundSlice(name=/27, inputs=[/22, /24, /25, /23, /26])
  (/28): BoundTranspose(name=/28, inputs=[/27])
  (/29): BoundConstant(name=/29, inputs=[])
  (/30): BoundReshape(name=/30, inputs=[/28, /29])
  (/31): BoundCast(name=/31, inputs=[/30])
  (/32): BoundConstant(name=/32, inputs=[])
  (/input): BoundPad(name=/input, inputs=[/input.1, /31, /32])
  (/input.4): BoundConv(name=/input.4, inputs=[/input, /1, /2])
  (/input.8): BoundRelu(name=/input.8, inputs=[/input.4])
  (/input.12): BoundConv(name=/input.12, inputs=[/input.8, /3, /4])
  (/37): BoundRelu(name=/37, inputs=[/input.12])
  (/38): BoundShape(name=/38, inputs=[/37])
  (/39): BoundConstant(name=/39, inputs=[])
  (/40): BoundGather(name=/40, inputs=[/38, /39])
  (/41): BoundConstant(name=/41, inputs=[])
  (/42): BoundUnsqueeze(name=/42, inputs=[/40])
  (/43): BoundUnsqueeze(name=/43, inputs=[/41])
  (/44): BoundConcat(name=/44, inputs=[/42, /43])
  (/45): BoundReshape(name=/45, inputs=[/37, /44])
  (/input.16): BoundLinear(name=/input.16, inputs=[/45, /5, /6])
  (/47): BoundRelu(name=/47, inputs=[/input.16])
  (/48): BoundLinear(name=/48, inputs=[/47, /7, /8])
)
Model prediction is: tensor([-43.13674545, -41.65016556, -43.47764969, -43.35157394, -43.69926453,
        -43.12554169, -43.15471268, -45.77563477, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.8 start_node /48 with alignment adjustment
setting alpha for layer /37 start_node /48 with alignment adjustment
setting alpha for layer /47 start_node /48 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.23268414]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.12,/input.4,/input.16,/48
Split layers:
  BoundConv(name=/input.12, inputs=[/input.8, /3, /4]): [(BoundRelu(name=/37, inputs=[/input.12]), 0)]
  BoundLinear(name=/input.16, inputs=[/45, /5, /6]): [(BoundRelu(name=/47, inputs=[/input.16]), 0)]
  BoundConv(name=/input.4, inputs=[/input, /1, /2]): [(BoundRelu(name=/input.8, inputs=[/input.4]), 0)]
Keeping slopes for these layers: ['/48']
Keeping slopes for these layers: ['/48']
Node /input.8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /37 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /47 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.16, 186] 
split level 1: [/input.16, 248] 
split level 2: [/input.16, 115] 
split level 3: [/input.16, 157] 
pruning_in_iteration open status: True
ratio of positive domain = 14 / 16 = 0.875
pruning-in-iteration extra time: 0.014290809631347656
Time: prepare 0.0012    beta_bound 0.8980    bound 0.8981    transfer 0.0010    finalize 0.0017    func 0.9021    
Accumulated time: func 0.9021    prepare 0.0019    bound 0.8981    beta_bound 0.8980    transfer 0.0010    finalize 0.0017    
batch bounding time:  0.9022073745727539
Current worst splitting domains lb-rhs (depth):
-0.00897 (4), -0.00479 (4), 
length of domains: 2
Time: pickout 0.0008    decision 0.0430    set_bounds 0.0010    solve 0.9022    add 0.0019    
Accumulated time: pickout 0.0008    decision 0.0430    set_bounds 0.0010    solve 0.9022    add 0.0019    
Current (lb-rhs): -0.008974790573120117
2 domains visited
Cumulative time: 0.9637603759765625

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.16, 230] [/input.16, 230] 
split level 1: [/input.16, 7] [/input.16, 7] 
split level 2: [/input.16, 18] [/input.16, 18] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 0.00019311904907226562
Time: prepare 0.0014    beta_bound 0.0126    bound 0.0127    transfer 0.0007    finalize 0.0016    func 0.0165    
Accumulated time: func 0.9186    prepare 0.0038    bound 0.9108    beta_bound 0.9106    transfer 0.0017    finalize 0.0033    
batch bounding time:  0.016536474227905273
length of domains: 0
Time: pickout 0.0015    decision 0.0398    set_bounds 0.0008    solve 0.0166    add 0.0001    
Accumulated time: pickout 0.0023    decision 0.0827    set_bounds 0.0018    solve 0.9188    add 0.0020    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.0228912830352783


Properties batch 5, size 1
Remaining timeout: 41.32680130004883
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.57539797]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundConstant(name=/9, inputs=[])
  (/10): BoundConcat(name=/10, inputs=[/9])
  (/11): BoundConstant(name=/11, inputs=[])
  (/12): BoundShape(name=/12, inputs=[/10])
  (/13): BoundGather(name=/13, inputs=[/12, /11])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundConstant(name=/15, inputs=[])
  (/16): BoundMul(name=/16, inputs=[/14, /15])
  (/17): BoundSub(name=/17, inputs=[/16, /13])
  (/18): BoundCast(name=/18, inputs=[/10])
  (/19): BoundConstantOfShape(name=/19, inputs=[/17])
  (/20): BoundConcat(name=/20, inputs=[/18, /19])
  (/21): BoundConstant(name=/21, inputs=[])
  (/22): BoundReshape(name=/22, inputs=[/20, /21])
  (/23): BoundConstant(name=/23, inputs=[])
  (/24): BoundConstant(name=/24, inputs=[])
  (/25): BoundConstant(name=/25, inputs=[])
  (/26): BoundConstant(name=/26, inputs=[])
  (/27): BoundSlice(name=/27, inputs=[/22, /24, /25, /23, /26])
  (/28): BoundTranspose(name=/28, inputs=[/27])
  (/29): BoundConstant(name=/29, inputs=[])
  (/30): BoundReshape(name=/30, inputs=[/28, /29])
  (/31): BoundCast(name=/31, inputs=[/30])
  (/32): BoundConstant(name=/32, inputs=[])
  (/input): BoundPad(name=/input, inputs=[/input.1, /31, /32])
  (/input.4): BoundConv(name=/input.4, inputs=[/input, /1, /2])
  (/input.8): BoundRelu(name=/input.8, inputs=[/input.4])
  (/input.12): BoundConv(name=/input.12, inputs=[/input.8, /3, /4])
  (/37): BoundRelu(name=/37, inputs=[/input.12])
  (/38): BoundShape(name=/38, inputs=[/37])
  (/39): BoundConstant(name=/39, inputs=[])
  (/40): BoundGather(name=/40, inputs=[/38, /39])
  (/41): BoundConstant(name=/41, inputs=[])
  (/42): BoundUnsqueeze(name=/42, inputs=[/40])
  (/43): BoundUnsqueeze(name=/43, inputs=[/41])
  (/44): BoundConcat(name=/44, inputs=[/42, /43])
  (/45): BoundReshape(name=/45, inputs=[/37, /44])
  (/input.16): BoundLinear(name=/input.16, inputs=[/45, /5, /6])
  (/47): BoundRelu(name=/47, inputs=[/input.16])
  (/48): BoundLinear(name=/48, inputs=[/47, /7, /8])
)
Model prediction is: tensor([-43.13674545, -41.65016556, -43.47764969, -43.35157394, -43.69926453,
        -43.12554169, -43.15471268, -45.77563477, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.8 start_node /48 with alignment adjustment
setting alpha for layer /37 start_node /48 with alignment adjustment
setting alpha for layer /47 start_node /48 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.57539797]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.12,/input.4,/input.16,/48
Split layers:
  BoundConv(name=/input.12, inputs=[/input.8, /3, /4]): [(BoundRelu(name=/37, inputs=[/input.12]), 0)]
  BoundLinear(name=/input.16, inputs=[/45, /5, /6]): [(BoundRelu(name=/47, inputs=[/input.16]), 0)]
  BoundConv(name=/input.4, inputs=[/input, /1, /2]): [(BoundRelu(name=/input.8, inputs=[/input.4]), 0)]
Keeping slopes for these layers: ['/48']
Keeping slopes for these layers: ['/48']
Node /input.8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /37 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /47 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.16, 140] 
split level 1: [/input.16, 103] 
split level 2: [/input.16, 186] 
split level 3: [/input.16, 115] 
pruning_in_iteration open status: True
ratio of positive domain = 7 / 16 = 0.4375
pruning-in-iteration extra time: 0.016184091567993164
Time: prepare 0.0013    beta_bound 0.5105    bound 0.5106    transfer 0.0007    finalize 0.0015    func 0.5141    
Accumulated time: func 0.5141    prepare 0.0022    bound 0.5106    beta_bound 0.5105    transfer 0.0007    finalize 0.0015    
batch bounding time:  0.5141558647155762
Current worst splitting domains lb-rhs (depth):
-0.22366 (4), -0.19535 (4), -0.15074 (4), -0.10956 (4), -0.09591 (4), -0.06163 (4), -0.04021 (4), -0.01374 (4), -0.01216 (4), 
length of domains: 9
Time: pickout 0.0007    decision 0.0646    set_bounds 0.0010    solve 0.5142    add 0.0023    
Accumulated time: pickout 0.0007    decision 0.0646    set_bounds 0.0010    solve 0.5142    add 0.0023    
Current (lb-rhs): -0.22365760803222656
9 domains visited
Cumulative time: 0.6048891544342041

BaB round 2
batch: 9
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.16, 138] [/input.16, 138] [/input.16, 138] [/input.16, 138] [/input.16, 138] [/input.16, 138] [/input.16, 138] [/input.16, 138] [/input.16, 138] 
pruning_in_iteration open status: True
ratio of positive domain = 6 / 18 = 0.33333333333333337
pruning-in-iteration extra time: 0.01770329475402832
Time: prepare 0.0016    beta_bound 0.5110    bound 0.5111    transfer 0.0012    finalize 0.0027    func 0.5166    
Accumulated time: func 1.0307    prepare 0.0044    bound 1.0217    beta_bound 1.0215    transfer 0.0019    finalize 0.0042    
batch bounding time:  0.5167148113250732
Current worst splitting domains lb-rhs (depth):
-0.17524 (5), -0.15916 (5), -0.14695 (5), -0.12693 (5), -0.10017 (5), -0.09371 (5), -0.05610 (5), -0.05067 (5), -0.04489 (5), -0.03648 (5), -0.00646 (5), -0.00644 (5), 
length of domains: 12
Time: pickout 0.0016    decision 0.0412    set_bounds 0.0007    solve 0.5167    add 0.0023    
Accumulated time: pickout 0.0023    decision 0.1058    set_bounds 0.0017    solve 1.0309    add 0.0045    
Current (lb-rhs): -0.17524313926696777
21 domains visited
Cumulative time: 1.1680619716644287

BaB round 3
batch: 12
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.16, 230] [/input.16, 230] [/input.16, 230] [/input.16, 230] [/input.16, 230] [/input.16, 230] [/input.16, 230] [/input.16, 230] [/input.16, 230] [/input.16, 230] 
pruning_in_iteration open status: False
ratio of positive domain = 4 / 24 = 0.16666666666666663
pruning-in-iteration extra time: 0.00015997886657714844
Time: prepare 0.0059    beta_bound 0.4486    bound 0.4487    transfer 0.0009    finalize 0.0027    func 0.4583    
Accumulated time: func 1.4890    prepare 0.0111    bound 1.4704    beta_bound 1.4701    transfer 0.0028    finalize 0.0068    
batch bounding time:  0.4587748050689697
Current worst splitting domains lb-rhs (depth):
-0.14270 (6), -0.13916 (6), -0.12576 (6), -0.12469 (6), -0.11401 (6), -0.11063 (6), -0.09351 (6), -0.09152 (6), -0.06710 (6), -0.06424 (6), -0.06050 (6), -0.05827 (6), -0.02126 (6), -0.01864 (6), -0.01521 (6), -0.01392 (6), -0.01182 (6), -0.00942 (6), -0.00328 (6), -0.00130 (6), 
length of domains: 20
Time: pickout 0.0015    decision 0.0661    set_bounds 0.0018    solve 0.4588    add 0.0043    
Accumulated time: pickout 0.0039    decision 0.1719    set_bounds 0.0035    solve 1.4897    add 0.0088    
Current (lb-rhs): -0.14269566535949707
41 domains visited
Cumulative time: 1.7010929584503174

BaB round 4
batch: 20
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.16, 7] [/input.16, 7] [/input.16, 7] [/input.16, 7] [/input.16, 7] [/input.16, 7] [/input.16, 7] [/input.16, 7] [/input.16, 7] [/input.16, 7] 
pruning_in_iteration open status: True
ratio of positive domain = 16 / 40 = 0.4
pruning-in-iteration extra time: 0.018149614334106445
Time: prepare 0.0030    beta_bound 0.4725    bound 0.4726    transfer 0.0015    finalize 0.0047    func 0.4818    
Accumulated time: func 1.9708    prepare 0.0146    bound 1.9430    beta_bound 1.9426    transfer 0.0043    finalize 0.0115    
batch bounding time:  0.48195648193359375
Current worst splitting domains lb-rhs (depth):
-0.11131 (7), -0.11121 (7), -0.10830 (7), -0.10765 (7), -0.09454 (7), -0.09425 (7), -0.09347 (7), -0.09316 (7), -0.08323 (7), -0.08095 (7), -0.07943 (7), -0.07842 (7), -0.06243 (7), -0.06075 (7), -0.06052 (7), -0.05928 (7), -0.03567 (7), -0.03562 (7), -0.03295 (7), -0.03230 (7), 
length of domains: 24
Time: pickout 0.0010    decision 0.0456    set_bounds 0.0008    solve 0.4820    add 0.0032    
Accumulated time: pickout 0.0048    decision 0.2175    set_bounds 0.0043    solve 1.9717    add 0.0120    
Current (lb-rhs): -0.11131453514099121
65 domains visited
Cumulative time: 2.234037160873413

BaB round 5
batch: 24
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.16, 227] [/input.16, 227] [/input.16, 227] [/input.16, 227] [/input.16, 227] [/input.16, 227] [/input.16, 227] [/input.16, 227] [/input.16, 227] [/input.16, 227] 
pruning_in_iteration open status: True
ratio of positive domain = 24 / 48 = 0.5
pruning-in-iteration extra time: 0.014404296875
Time: prepare 0.0039    beta_bound 0.4771    bound 0.4772    transfer 0.0013    finalize 0.0037    func 0.4862    
Accumulated time: func 2.4570    prepare 0.0192    bound 2.4201    beta_bound 2.4197    transfer 0.0056    finalize 0.0152    
batch bounding time:  0.48633384704589844
Current worst splitting domains lb-rhs (depth):
-0.08673 (8), -0.08644 (8), -0.08421 (8), -0.08338 (8), -0.07046 (8), -0.07021 (8), -0.06958 (8), -0.06941 (8), -0.05745 (8), -0.05532 (8), -0.05409 (8), -0.05321 (8), -0.03720 (8), -0.03536 (8), -0.03533 (8), -0.03440 (8), -0.01170 (8), -0.01162 (8), -0.00905 (8), -0.00846 (8), 
length of domains: 24
Time: pickout 0.0010    decision 0.0640    set_bounds 0.0009    solve 0.4864    add 0.0036    
Accumulated time: pickout 0.0058    decision 0.2814    set_bounds 0.0052    solve 2.4580    add 0.0156    
Current (lb-rhs): -0.08672857284545898
89 domains visited
Cumulative time: 2.7905666828155518

BaB round 6
batch: 24
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.16, 248] [/input.16, 248] [/input.16, 248] [/input.16, 248] [/input.16, 248] [/input.16, 248] [/input.16, 248] [/input.16, 248] [/input.16, 248] [/input.16, 248] 
pruning_in_iteration open status: True
ratio of positive domain = 32 / 48 = 0.6666666666666667
pruning-in-iteration extra time: 0.012712478637695312
Time: prepare 0.0036    beta_bound 0.4576    bound 0.4577    transfer 0.0017    finalize 0.0037    func 0.4666    
Accumulated time: func 2.9236    prepare 0.0234    bound 2.8778    beta_bound 2.8772    transfer 0.0073    finalize 0.0189    
batch bounding time:  0.4667487144470215
Current worst splitting domains lb-rhs (depth):
-0.06363 (9), -0.06320 (9), -0.06153 (9), -0.06054 (9), -0.04813 (9), -0.04762 (9), -0.04751 (9), -0.04743 (9), -0.03327 (9), -0.03102 (9), -0.03016 (9), -0.02920 (9), -0.01339 (9), -0.01220 (9), -0.01185 (9), -0.01141 (9), 
length of domains: 16
Time: pickout 0.0018    decision 0.0493    set_bounds 0.0009    solve 0.4668    add 0.0022    
Accumulated time: pickout 0.0076    decision 0.3307    set_bounds 0.0061    solve 2.9248    add 0.0178    
Current (lb-rhs): -0.06362724304199219
105 domains visited
Cumulative time: 3.311945915222168

BaB round 7
batch: 16
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] 
pruning_in_iteration open status: True
ratio of positive domain = 20 / 32 = 0.625
pruning-in-iteration extra time: 0.013396739959716797
Time: prepare 0.0025    beta_bound 0.4364    bound 0.4365    transfer 0.0010    finalize 0.0027    func 0.4427    
Accumulated time: func 3.3663    prepare 0.0265    bound 3.3143    beta_bound 3.3137    transfer 0.0082    finalize 0.0216    
batch bounding time:  0.44303011894226074
Current worst splitting domains lb-rhs (depth):
-0.04375 (10), -0.04331 (10), -0.04173 (10), -0.04072 (10), -0.02847 (10), -0.02785 (10), -0.02775 (10), -0.02772 (10), -0.01264 (10), -0.01037 (10), -0.00951 (10), -0.00847 (10), 
length of domains: 12
Time: pickout 0.0010    decision 0.0371    set_bounds 0.0008    solve 0.4430    add 0.0018    
Accumulated time: pickout 0.0086    decision 0.3678    set_bounds 0.0069    solve 3.3679    add 0.0196    
Current (lb-rhs): -0.04374551773071289
117 domains visited
Cumulative time: 3.795992851257324

BaB round 8
batch: 12
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] 
pruning_in_iteration open status: True
ratio of positive domain = 16 / 24 = 0.6666666666666667
pruning-in-iteration extra time: 0.013074636459350586
Time: prepare 0.0020    beta_bound 0.4472    bound 0.4473    transfer 0.0008    finalize 0.0021    func 0.4523    
Accumulated time: func 3.8186    prepare 0.0290    bound 3.7615    beta_bound 3.7608    transfer 0.0091    finalize 0.0238    
batch bounding time:  0.4523470401763916
Current worst splitting domains lb-rhs (depth):
-0.02514 (11), -0.02483 (11), -0.02299 (11), -0.02209 (11), -0.00994 (11), -0.00933 (11), -0.00908 (11), -0.00904 (11), 
length of domains: 8
Time: pickout 0.0009    decision 0.0325    set_bounds 0.0007    solve 0.4524    add 0.0015    
Accumulated time: pickout 0.0095    decision 0.4002    set_bounds 0.0076    solve 3.8202    add 0.0211    
Current (lb-rhs): -0.025135040283203125
125 domains visited
Cumulative time: 4.284333944320679

BaB round 9
batch: 8
Average branched neurons at iteration 9:  1.0000
splitting decisions: 
split level 0: [/input.16, 10] [/input.16, 10] [/input.16, 10] [/input.16, 10] [/input.16, 10] [/input.16, 10] [/input.16, 10] [/input.16, 10] 
pruning_in_iteration open status: True
ratio of positive domain = 12 / 16 = 0.75
pruning-in-iteration extra time: 0.014158964157104492
Time: prepare 0.0022    beta_bound 0.4857    bound 0.4858    transfer 0.0015    finalize 0.0028    func 0.4924    
Accumulated time: func 4.3109    prepare 0.0317    bound 4.2474    beta_bound 4.2465    transfer 0.0105    finalize 0.0265    
batch bounding time:  0.4924654960632324
Current worst splitting domains lb-rhs (depth):
-0.00949 (12), -0.00917 (12), -0.00724 (12), -0.00633 (12), 
length of domains: 4
Time: pickout 0.0015    decision 0.0396    set_bounds 0.0013    solve 0.4925    add 0.0013    
Accumulated time: pickout 0.0110    decision 0.4399    set_bounds 0.0089    solve 4.3127    add 0.0224    
Current (lb-rhs): -0.009486675262451172
129 domains visited
Cumulative time: 4.821054935455322

BaB round 10
batch: 4
Average branched neurons at iteration 10:  1.0000
splitting decisions: 
split level 0: [/input.16, 154] [/input.16, 154] [/input.16, 154] [/input.16, 154] 
split level 1: [/input.16, 16] [/input.16, 16] [/input.16, 16] [/input.16, 16] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 0.000164031982421875
Time: prepare 0.0015    beta_bound 0.0127    bound 0.0128    transfer 0.0007    finalize 0.0026    func 0.0177    
Accumulated time: func 4.3286    prepare 0.0338    bound 4.2602    beta_bound 4.2593    transfer 0.0112    finalize 0.0292    
batch bounding time:  0.017786502838134766
length of domains: 0
Time: pickout 0.0009    decision 0.0362    set_bounds 0.0008    solve 0.0178    add 0.0002    
Accumulated time: pickout 0.0119    decision 0.4760    set_bounds 0.0097    solve 4.3305    add 0.0225    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
129 domains visited
Cumulative time: 4.877370357513428


Properties batch 6, size 1
Remaining timeout: 36.26035118103027
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.8831274509429932.

Properties batch 7, size 1
Remaining timeout: 36.14038586616516
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.5268419981002808.

Properties batch 8, size 1
Remaining timeout: 36.082170248031616
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.8125700950622559.
Result: safe in 23.9758 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):23.97553691699411, max time: 23.97577667236328
mean time for verified SAFE instances(total 1): 23.97577667236328, max time: 23.97577667236328
safe (total 1), index: [0]
