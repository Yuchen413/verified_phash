Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: cnn_4layer
  path: cifar_cnn_a_mix.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 18
  end: 19
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 4096
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 16:30:51 2023 on zeratul
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308714)
############################
Internal results will be saved to Verified_ret_[cnn_4layer]_start=18_end=19_iter=20_b=4096_timeout=200_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.12141800, -44.19668961, -34.08209610, -36.71353149, -34.07798767,
         -36.54197693, -31.82049751, -38.26199341, -42.62282562, -43.62261200]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.86997223, -44.19873810, -34.09436417, -36.61195755, -33.37387085,
          -36.42044830, -32.48025894, -37.70191574, -42.50881958, -43.53197479],
         [-39.86997223, -44.19873810, -34.09436417, -36.61195755, -33.37387085,
          -36.42044830, -32.48025894, -37.70191574, -42.50881958, -43.53197479]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.38971329, 11.71847916,  1.61410522,  4.13169861,  0.89361191,
           3.94018936,  5.22165680, 10.02856064, 11.05171585]]],
       device='cuda:0')
number of violation:  0
Attack finished in 2.0733 seconds.
PGD attack failed
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2])
  (/input.4): BoundRelu(name=/input.4, inputs=[/input])
  (/input.8): BoundConv(name=/input.8, inputs=[/input.4, /3, /4])
  (/12): BoundRelu(name=/12, inputs=[/input.8])
  (/13): BoundShape(name=/13, inputs=[/12])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundGather(name=/15, inputs=[/13, /14])
  (/16): BoundConstant(name=/16, inputs=[])
  (/17): BoundUnsqueeze(name=/17, inputs=[/15])
  (/18): BoundUnsqueeze(name=/18, inputs=[/16])
  (/19): BoundConcat(name=/19, inputs=[/17, /18])
  (/20): BoundReshape(name=/20, inputs=[/12, /19])
  (/input.12): BoundLinear(name=/input.12, inputs=[/20, /5, /6])
  (/22): BoundRelu(name=/22, inputs=[/input.12])
  (/23): BoundLinear(name=/23, inputs=[/22, /7, /8])
)
Model prediction is: tensor([[-40.12141800, -44.19668961, -34.08209610, -36.71353149, -34.07798767,
         -36.54197693, -31.82049751, -38.26199341, -42.62282562, -43.62261200]],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [580]; unstable size 580; total size 4096 (torch.Size([1, 16, 16, 16]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 363 total_size 2048 output_shape (32, 8, 8)
layer /input.4 start_node /input.12 using sparse-spec alpha with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [363]; unstable size 363; total size 2048 (torch.Size([1, 32, 8, 8]))
layer /12 start_node /input.12 using sparse-spec alpha with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /12 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /22 using sparse-features alpha with shape [46]; unstable size 46; total size 100 (torch.Size([1, 100]))
layer /22 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.88499951,  7.10897160, -1.46649551,  1.92010164, -1.19054222,
          0.98264575,  1.80729961,  6.63542938,  6.82364464]], device='cuda:0') None
best_l after optimization: 28.40273666381836
alpha/beta optimization time: 6.925329208374023
initial alpha-CROWN bounds: tensor([[ 4.13616514,  7.34356499, -1.23391104,  2.08684993, -1.01583672,
          1.18213463,  2.06692934,  6.82820177,  7.00863838]], device='cuda:0')
Worst class: (+ rhs) -1.2339110374450684
Split layers:
  BoundConv(name=/input, inputs=[/input.1, /1, /2]): [(BoundRelu(name=/input.4, inputs=[/input]), 0)]
  BoundConv(name=/input.8, inputs=[/input.4, /3, /4]): [(BoundRelu(name=/12, inputs=[/input.8]), 0)]
  BoundLinear(name=/input.12, inputs=[/20, /5, /6]): [(BoundRelu(name=/22, inputs=[/input.12]), 0)]
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 16, 16, 16]), torch.Size([1, 9, 32, 8, 8]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 184.5007779598236
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 4.136165142059326.

Properties batch 1, size 1
Remaining timeout: 184.30195832252502
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 7.343564987182617.

Properties batch 2, size 1
Remaining timeout: 184.24389481544495
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-1.23391104]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2])
  (/input.4): BoundRelu(name=/input.4, inputs=[/input])
  (/input.8): BoundConv(name=/input.8, inputs=[/input.4, /3, /4])
  (/12): BoundRelu(name=/12, inputs=[/input.8])
  (/13): BoundShape(name=/13, inputs=[/12])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundGather(name=/15, inputs=[/13, /14])
  (/16): BoundConstant(name=/16, inputs=[])
  (/17): BoundUnsqueeze(name=/17, inputs=[/15])
  (/18): BoundUnsqueeze(name=/18, inputs=[/16])
  (/19): BoundConcat(name=/19, inputs=[/17, /18])
  (/20): BoundReshape(name=/20, inputs=[/12, /19])
  (/input.12): BoundLinear(name=/input.12, inputs=[/20, /5, /6])
  (/22): BoundRelu(name=/22, inputs=[/input.12])
  (/23): BoundLinear(name=/23, inputs=[/22, /7, /8])
)
Model prediction is: tensor([-40.12141800, -44.19668961, -34.08209610, -36.71353149, -34.07798767,
        -36.54197693, -31.82049751, -38.26199341, -42.62282562, -43.62261200],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /23 with alignment adjustment
setting alpha for layer /12 start_node /23 with alignment adjustment
setting alpha for layer /22 start_node /23 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.23391104]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.8,/input.12,/23
Split layers:
  BoundLinear(name=/input.12, inputs=[/20, /5, /6]): [(BoundRelu(name=/22, inputs=[/input.12]), 0)]
  BoundConv(name=/input.8, inputs=[/input.4, /3, /4]): [(BoundRelu(name=/12, inputs=[/input.8]), 0)]
  BoundConv(name=/input, inputs=[/input.1, /1, /2]): [(BoundRelu(name=/input.4, inputs=[/input]), 0)]
Keeping slopes for these layers: ['/23']
Keeping slopes for these layers: ['/23']
Node /input.4 input 0: size torch.Size([16, 16, 16]) unstable 580
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 359
Node /22 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 984
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.12, 66] 
split level 1: [/input.12, 28] 
split level 2: [/input.12, 61] 
split level 3: [/input.12, 71] 
split level 4: [/input.12, 8] 
split level 5: [/input.12, 7] 
split level 6: [/input.12, 83] 
split level 7: [/input.12, 46] 
pruning_in_iteration open status: True
ratio of positive domain = 224 / 256 = 0.875
pruning-in-iteration extra time: 0.020955801010131836
Time: prepare 0.0128    beta_bound 0.8486    bound 0.8487    transfer 0.0019    finalize 0.0256    func 0.8892    
Accumulated time: func 0.8892    prepare 0.0140    bound 0.8487    beta_bound 0.8486    transfer 0.0019    finalize 0.0256    
batch bounding time:  0.8896174430847168
Current worst splitting domains lb-rhs (depth):
-0.22513 (8), -0.20722 (8), -0.19722 (8), -0.17411 (8), -0.17311 (8), -0.17065 (8), -0.15908 (8), -0.14530 (8), -0.13689 (8), -0.13286 (8), -0.13273 (8), -0.11286 (8), -0.10765 (8), -0.10727 (8), -0.09438 (8), -0.08957 (8), -0.06263 (8), -0.06172 (8), -0.06025 (8), -0.05857 (8), 
length of domains: 32
Time: pickout 0.0009    decision 0.4603    set_bounds 0.0044    solve 0.8896    add 0.0028    
Accumulated time: pickout 0.0009    decision 0.4603    set_bounds 0.0044    solve 0.8896    add 0.0028    
Current (lb-rhs): -0.2251286506652832
32 domains visited
Cumulative time: 1.4193789958953857

BaB round 2
batch: 32
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.12, 16] [/input.12, 14] [/input.12, 16] [/input.12, 14] [/input.12, 16] [/input.12, 14] [/input.12, 16] [/input.12, 14] [/input.12, 16] [/input.12, 14] 
split level 1: [/input.12, 14] [/input.12, 16] [/input.12, 14] [/input.12, 16] [/input.12, 14] [/input.12, 16] [/input.12, 14] [/input.12, 16] [/input.12, 14] [/input.12, 16] 
split level 2: [/input.12, 40] [/input.12, 40] [/input.12, 40] [/input.12, 40] [/input.12, 40] [/input.12, 40] [/input.12, 40] [/input.12, 40] [/input.12, 40] [/input.12, 40] 
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.014979124069213867
Time: prepare 0.0166    beta_bound 0.3728    bound 0.3729    transfer 0.0026    finalize 0.0148    func 0.4072    
Accumulated time: func 1.2964    prepare 0.0312    bound 1.2216    beta_bound 1.2214    transfer 0.0045    finalize 0.0404    
batch bounding time:  0.40749096870422363
Current worst splitting domains lb-rhs (depth):
-0.08912 (11), -0.07549 (11), -0.05862 (11), -0.04190 (11), -0.04033 (11), -0.03344 (11), -0.02875 (11), -0.00601 (11), 
length of domains: 8
Time: pickout 0.0011    decision 0.0505    set_bounds 0.0030    solve 0.4075    add 0.0019    
Accumulated time: pickout 0.0020    decision 0.5107    set_bounds 0.0074    solve 1.2972    add 0.0046    
Current (lb-rhs): -0.08912038803100586
40 domains visited
Cumulative time: 1.8845410346984863

BaB round 3
batch: 8
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.12, 95] [/input.12, 95] [/input.12, 95] [/input.12, 95] [/input.12, 95] [/input.12, 95] [/input.12, 95] [/input.12, 95] 
split level 1: [/input.12, 19] [/input.12, 19] [/input.12, 19] [/input.12, 19] [/input.12, 19] [/input.12, 19] [/input.12, 19] [/input.12, 19] 
split level 2: [/input.12, 10] [/input.12, 10] [/input.12, 10] [/input.12, 10] [/input.12, 10] [/input.12, 10] [/input.12, 10] [/input.12, 10] 
split level 3: [/input.12, 30] [/input.12, 30] [/input.12, 30] [/input.12, 30] [/input.12, 30] [/input.12, 30] [/input.12, 30] [/input.12, 30] 
split level 4: [/input.12, 50] [/input.12, 50] [/input.12, 50] [/input.12, 50] [/input.12, 50] [/input.12, 50] [/input.12, 50] [/input.12, 50] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 9.775161743164062e-05
Time: prepare 0.0238    beta_bound 0.0148    bound 0.0149    transfer 0.0017    finalize 0.0151    func 0.0557    
Accumulated time: func 1.3521    prepare 0.0563    bound 1.2365    beta_bound 1.2362    transfer 0.0062    finalize 0.0556    
batch bounding time:  0.05606651306152344
length of domains: 0
Time: pickout 0.0013    decision 0.0654    set_bounds 0.0033    solve 0.0561    add 0.0003    
Accumulated time: pickout 0.0032    decision 0.5762    set_bounds 0.0107    solve 1.3533    add 0.0049    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
40 domains visited
Cumulative time: 2.01257061958313


Properties batch 3, size 1
Remaining timeout: 182.10408067703247
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.0868499279022217.

Properties batch 4, size 1
Remaining timeout: 182.02119326591492
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-1.01583672]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2])
  (/input.4): BoundRelu(name=/input.4, inputs=[/input])
  (/input.8): BoundConv(name=/input.8, inputs=[/input.4, /3, /4])
  (/12): BoundRelu(name=/12, inputs=[/input.8])
  (/13): BoundShape(name=/13, inputs=[/12])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundGather(name=/15, inputs=[/13, /14])
  (/16): BoundConstant(name=/16, inputs=[])
  (/17): BoundUnsqueeze(name=/17, inputs=[/15])
  (/18): BoundUnsqueeze(name=/18, inputs=[/16])
  (/19): BoundConcat(name=/19, inputs=[/17, /18])
  (/20): BoundReshape(name=/20, inputs=[/12, /19])
  (/input.12): BoundLinear(name=/input.12, inputs=[/20, /5, /6])
  (/22): BoundRelu(name=/22, inputs=[/input.12])
  (/23): BoundLinear(name=/23, inputs=[/22, /7, /8])
)
Model prediction is: tensor([-40.12141800, -44.19668961, -34.08209610, -36.71353149, -34.07798767,
        -36.54197693, -31.82049751, -38.26199341, -42.62282562, -43.62261200],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /23 with alignment adjustment
setting alpha for layer /12 start_node /23 with alignment adjustment
setting alpha for layer /22 start_node /23 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.01583672]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.8,/input.12,/23
Split layers:
  BoundConv(name=/input.8, inputs=[/input.4, /3, /4]): [(BoundRelu(name=/12, inputs=[/input.8]), 0)]
  BoundConv(name=/input, inputs=[/input.1, /1, /2]): [(BoundRelu(name=/input.4, inputs=[/input]), 0)]
  BoundLinear(name=/input.12, inputs=[/20, /5, /6]): [(BoundRelu(name=/22, inputs=[/input.12]), 0)]
Keeping slopes for these layers: ['/23']
Keeping slopes for these layers: ['/23']
Node /input.4 input 0: size torch.Size([16, 16, 16]) unstable 580
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 359
Node /22 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 984
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.12, 71] 
split level 1: [/input.12, 61] 
split level 2: [/input.12, 8] 
split level 3: [/input.12, 95] 
split level 4: [/input.12, 40] 
split level 5: [/input.12, 78] 
split level 6: [/input.12, 58] 
split level 7: [/input.12, 67] 
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.013352155685424805
Time: prepare 0.0132    beta_bound 0.3826    bound 0.3827    transfer 0.0022    finalize 0.0163    func 0.4145    
Accumulated time: func 0.4145    prepare 0.0147    bound 0.3827    beta_bound 0.3826    transfer 0.0022    finalize 0.0163    
batch bounding time:  0.4147183895111084
Current worst splitting domains lb-rhs (depth):
-0.06943 (8), -0.04401 (8), 
length of domains: 2
Time: pickout 0.0008    decision 0.0691    set_bounds 0.0043    solve 0.4147    add 0.0010    
Accumulated time: pickout 0.0008    decision 0.0691    set_bounds 0.0043    solve 0.4147    add 0.0010    
Current (lb-rhs): -0.06943225860595703
2 domains visited
Cumulative time: 0.5063304901123047

BaB round 2
batch: 2
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.12, 19] [/input.12, 19] 
split level 1: [/input.12, 16] [/input.12, 16] 
split level 2: [/input.12, 29] [/input.12, 29] 
split level 3: [/input.8, 1124] [/input.8, 1124] 
split level 4: [/input.12, 82] [/input.12, 82] 
split level 5: [/input.12, 46] [/input.12, 46] 
split level 6: [/input.12, 94] [/input.12, 94] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 0.00017523765563964844
Time: prepare 0.0270    beta_bound 0.0128    bound 0.0129    transfer 0.0022    finalize 0.0218    func 0.0641    
Accumulated time: func 0.4786    prepare 0.0433    bound 0.3956    beta_bound 0.3954    transfer 0.0044    finalize 0.0382    
batch bounding time:  0.06437802314758301
length of domains: 0
Time: pickout 0.0009    decision 0.0726    set_bounds 0.0078    solve 0.0644    add 0.0002    
Accumulated time: pickout 0.0017    decision 0.1416    set_bounds 0.0121    solve 0.4791    add 0.0012    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.6534128189086914


Properties batch 5, size 1
Remaining timeout: 181.23514246940613
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.1821346282958984.

Properties batch 6, size 1
Remaining timeout: 181.15393114089966
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.066929340362549.

Properties batch 7, size 1
Remaining timeout: 181.08915972709656
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 6.828201770782471.

Properties batch 8, size 1
Remaining timeout: 181.031085729599
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 7.008638381958008.
Result: safe in 19.0278 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):19.0276205357911, max time: 19.02781081199646
mean time for verified SAFE instances(total 1): 19.02781081199646, max time: 19.02781081199646
safe (total 1), index: [0]
