Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: cnn_4layer_adv4
  path: cifar_cnn_a_adv4.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 128
  end: 129
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 4096
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 30
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 13:29:39 2023 on zeratul
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308714)
############################
Internal results will be saved to Verified_ret_[cnn_4layer_adv4]_start=128_end=129_iter=20_b=4096_timeout=30_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.41261101, -10.11622715,  -6.97528791,  -7.70427608,  -6.80372047,
          -7.77790880,  -6.57194042,  -8.02606201,  -9.93407059,  -9.15845585]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.12646580, -9.92115021, -6.60886908, -7.37644768, -6.42958832,
          -7.44371653, -6.38417530, -7.65633202, -9.62471294, -8.92958069],
         [-8.12646580, -9.92115021, -6.60886908, -7.37644768, -6.42958832,
          -7.44371653, -6.38417530, -7.65633202, -9.62471294, -8.92958069]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.74229050, 3.53697491, 0.22469378, 0.99227238, 0.04541302,
          1.05954123, 1.27215672, 3.24053764, 2.54540539]]], device='cuda:0')
number of violation:  0
Attack finished in 2.2674 seconds.
PGD attack failed
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2])
  (/input.4): BoundRelu(name=/input.4, inputs=[/input])
  (/input.8): BoundConv(name=/input.8, inputs=[/input.4, /3, /4])
  (/12): BoundRelu(name=/12, inputs=[/input.8])
  (/13): BoundShape(name=/13, inputs=[/12])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundGather(name=/15, inputs=[/13, /14])
  (/16): BoundConstant(name=/16, inputs=[])
  (/17): BoundUnsqueeze(name=/17, inputs=[/15])
  (/18): BoundUnsqueeze(name=/18, inputs=[/16])
  (/19): BoundConcat(name=/19, inputs=[/17, /18])
  (/20): BoundReshape(name=/20, inputs=[/12, /19])
  (/input.12): BoundLinear(name=/input.12, inputs=[/20, /5, /6])
  (/22): BoundRelu(name=/22, inputs=[/input.12])
  (/23): BoundLinear(name=/23, inputs=[/22, /7, /8])
)
Model prediction is: tensor([[ -8.41261101, -10.11622715,  -6.97528791,  -7.70427608,  -6.80372047,
          -7.77790880,  -6.57194042,  -8.02606201,  -9.93407059,  -9.15845585]],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [471]; unstable size 471; total size 4096 (torch.Size([1, 16, 16, 16]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 209 total_size 2048 output_shape (32, 8, 8)
layer /input.4 start_node /input.12 using sparse-spec alpha with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [209]; unstable size 209; total size 2048 (torch.Size([1, 32, 8, 8]))
layer /12 start_node /input.12 using sparse-spec alpha with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /12 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /22 using sparse-features alpha with shape [5]; unstable size 5; total size 100 (torch.Size([1, 100]))
layer /22 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.17617619,  2.53004336,  0.03650117,  0.78286934, -0.09084654,
          0.84507591,  0.92964923,  2.50925612,  1.68634701]], device='cuda:0') None
best_l after optimization: 10.553863525390625
alpha/beta optimization time: 7.2599639892578125
initial alpha-CROWN bounds: tensor([[ 1.19834626,  2.55369902,  0.05347341,  0.79098117, -0.08158374,
          0.85337114,  0.94275898,  2.53685737,  1.70596027]], device='cuda:0')
Worst class: (+ rhs) -0.08158373832702637
Split layers:
  BoundConv(name=/input.8, inputs=[/input.4, /3, /4]): [(BoundRelu(name=/12, inputs=[/input.8]), 0)]
  BoundLinear(name=/input.12, inputs=[/20, /5, /6]): [(BoundRelu(name=/22, inputs=[/input.12]), 0)]
  BoundConv(name=/input, inputs=[/input.1, /1, /2]): [(BoundRelu(name=/input.4, inputs=[/input]), 0)]
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 16, 16, 16]), torch.Size([1, 9, 32, 8, 8]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 13.83281922340393
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.1983462572097778.

Properties batch 1, size 1
Remaining timeout: 13.711372137069702
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.553699016571045.

Properties batch 2, size 1
Remaining timeout: 13.634771823883057
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.05347341299057007.

Properties batch 3, size 1
Remaining timeout: 13.56020188331604
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.7909811735153198.

Properties batch 4, size 1
Remaining timeout: 13.480512619018555
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.08158374]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2])
  (/input.4): BoundRelu(name=/input.4, inputs=[/input])
  (/input.8): BoundConv(name=/input.8, inputs=[/input.4, /3, /4])
  (/12): BoundRelu(name=/12, inputs=[/input.8])
  (/13): BoundShape(name=/13, inputs=[/12])
  (/14): BoundConstant(name=/14, inputs=[])
  (/15): BoundGather(name=/15, inputs=[/13, /14])
  (/16): BoundConstant(name=/16, inputs=[])
  (/17): BoundUnsqueeze(name=/17, inputs=[/15])
  (/18): BoundUnsqueeze(name=/18, inputs=[/16])
  (/19): BoundConcat(name=/19, inputs=[/17, /18])
  (/20): BoundReshape(name=/20, inputs=[/12, /19])
  (/input.12): BoundLinear(name=/input.12, inputs=[/20, /5, /6])
  (/22): BoundRelu(name=/22, inputs=[/input.12])
  (/23): BoundLinear(name=/23, inputs=[/22, /7, /8])
)
Model prediction is: tensor([ -8.41261101, -10.11622715,  -6.97528791,  -7.70427608,  -6.80372047,
         -7.77790880,  -6.57194042,  -8.02606201,  -9.93407059,  -9.15845585],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /23 with alignment adjustment
setting alpha for layer /12 start_node /23 with alignment adjustment
setting alpha for layer /22 start_node /23 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.08158374]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.8,/input.12,/input,/23
Split layers:
  BoundConv(name=/input, inputs=[/input.1, /1, /2]): [(BoundRelu(name=/input.4, inputs=[/input]), 0)]
  BoundLinear(name=/input.12, inputs=[/20, /5, /6]): [(BoundRelu(name=/22, inputs=[/input.12]), 0)]
  BoundConv(name=/input.8, inputs=[/input.4, /3, /4]): [(BoundRelu(name=/12, inputs=[/input.8]), 0)]
Keeping slopes for these layers: ['/23']
Keeping slopes for these layers: ['/23']
Node /input.4 input 0: size torch.Size([16, 16, 16]) unstable 471
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 206
Node /22 input 0: size torch.Size([100]) unstable 4
-----------------
# of unstable neurons: 681
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.12, 50] 
split level 1: [/input.12, 5] 
split level 2: [/input.8, 1437] 
split level 3: [/input.8, 28] 
split level 4: [/input.8, 555] 
split level 5: [/input.8, 1451] 
split level 6: [/input.8, 313] 
split level 7: [/input.8, 1457] 
pruning_in_iteration open status: True
ratio of positive domain = 160 / 256 = 0.625
pruning-in-iteration extra time: 0.039870500564575195
Time: prepare 0.0211    beta_bound 1.1555    bound 1.1556    transfer 0.0029    finalize 0.0313    func 1.2112    
Accumulated time: func 1.2112    prepare 0.0230    bound 1.1556    beta_bound 1.1555    transfer 0.0029    finalize 0.0313    
batch bounding time:  1.2115700244903564
Current worst splitting domains lb-rhs (depth):
-0.00925 (8), -0.00844 (8), -0.00824 (8), -0.00799 (8), -0.00783 (8), -0.00760 (8), -0.00757 (8), -0.00744 (8), -0.00742 (8), -0.00717 (8), -0.00697 (8), -0.00692 (8), -0.00671 (8), -0.00665 (8), -0.00653 (8), -0.00618 (8), -0.00596 (8), -0.00577 (8), -0.00562 (8), -0.00558 (8), 
length of domains: 96
Time: pickout 0.0012    decision 0.5353    set_bounds 0.0084    solve 1.2116    add 0.0051    
Accumulated time: pickout 0.0012    decision 0.5353    set_bounds 0.0084    solve 1.2116    add 0.0051    
Current (lb-rhs): -0.009252309799194336
96 domains visited
Cumulative time: 1.8567659854888916

BaB round 2
batch: 96
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.8, 19] [/input.8, 1195] [/input.8, 1134] [/input.8, 1458] [/input.8, 19] [/input.8, 1195] [/input.8, 1134] [/input.8, 1458] [/input.8, 19] [/input.8, 1195] 
split level 1: [/input.8, 1134] [/input.8, 1458] [/input.8, 19] [/input.8, 19] [/input.8, 1134] [/input.8, 1458] [/input.8, 1674] [/input.8, 19] [/input.8, 1628] [/input.8, 1458] 
pruning_in_iteration open status: True
ratio of positive domain = 268 / 384 = 0.6979166666666667
pruning-in-iteration extra time: 0.015292882919311523
Time: prepare 0.0424    beta_bound 0.4152    bound 0.4154    transfer 0.0034    finalize 0.0361    func 0.4975    
Accumulated time: func 1.7086    prepare 0.0662    bound 1.5710    beta_bound 1.5707    transfer 0.0063    finalize 0.0674    
batch bounding time:  0.49785494804382324
Current worst splitting domains lb-rhs (depth):
-0.00607 (10), -0.00527 (10), -0.00526 (10), -0.00495 (10), -0.00487 (10), -0.00448 (10), -0.00435 (10), -0.00409 (10), -0.00407 (10), -0.00406 (10), -0.00375 (10), -0.00373 (10), -0.00371 (10), -0.00359 (10), -0.00356 (10), -0.00354 (10), -0.00351 (10), -0.00332 (10), -0.00331 (10), -0.00327 (10), 
length of domains: 116
Time: pickout 0.0016    decision 0.0647    set_bounds 0.0066    solve 0.4979    add 0.0069    
Accumulated time: pickout 0.0028    decision 0.6000    set_bounds 0.0151    solve 1.7095    add 0.0120    
Current (lb-rhs): -0.006069183349609375
212 domains visited
Cumulative time: 2.436086893081665

BaB round 3
batch: 116
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.8, 52] [/input.8, 148] [/input.8, 757] [/input.8, 52] [/input.8, 148] [/input.8, 52] [/input.8, 757] [/input.8, 52] [/input.8, 1628] [/input.8, 52] 
pruning_in_iteration open status: True
ratio of positive domain = 152 / 232 = 0.6551724137931034
pruning-in-iteration extra time: 0.015480518341064453
Time: prepare 0.0193    beta_bound 0.4567    bound 0.4568    transfer 0.0018    finalize 0.0145    func 0.4927    
Accumulated time: func 2.2013    prepare 0.0862    bound 2.0278    beta_bound 2.0274    transfer 0.0081    finalize 0.0819    
batch bounding time:  0.4929370880126953
Current worst splitting domains lb-rhs (depth):
-0.00426 (11), -0.00393 (11), -0.00350 (11), -0.00344 (11), -0.00315 (11), -0.00314 (11), -0.00311 (11), -0.00310 (11), -0.00282 (11), -0.00277 (11), -0.00271 (11), -0.00250 (11), -0.00236 (11), -0.00233 (11), -0.00228 (11), -0.00218 (11), -0.00217 (11), -0.00199 (11), -0.00198 (11), -0.00195 (11), 
length of domains: 80
Time: pickout 0.0018    decision 0.0519    set_bounds 0.0021    solve 0.4930    add 0.0045    
Accumulated time: pickout 0.0045    decision 0.6519    set_bounds 0.0172    solve 2.2025    add 0.0165    
Current (lb-rhs): -0.0042580366134643555
292 domains visited
Cumulative time: 2.9902758598327637

BaB round 4
batch: 80
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.8, 1458] [/input.8, 1628] [/input.8, 1458] [/input.8, 1628] [/input.8, 1458] [/input.8, 1628] [/input.8, 1458] [/input.8, 1628] [/input.8, 1458] [/input.8, 1628] 
split level 1: [/input.8, 1674] [/input.8, 19] [/input.8, 1674] [/input.8, 19] [/input.8, 1674] [/input.8, 19] [/input.8, 1674] [/input.8, 19] [/input.8, 1674] [/input.8, 19] 
pruning_in_iteration open status: True
ratio of positive domain = 303 / 320 = 0.946875
pruning-in-iteration extra time: 0.013847589492797852
Time: prepare 0.0248    beta_bound 0.3617    bound 0.3618    transfer 0.0029    finalize 0.0238    func 0.4136    
Accumulated time: func 2.6149    prepare 0.1116    bound 2.3896    beta_bound 2.3892    transfer 0.0110    finalize 0.1057    
batch bounding time:  0.4139375686645508
Current worst splitting domains lb-rhs (depth):
-0.00107 (13), -0.00099 (13), -0.00094 (13), -0.00086 (13), -0.00078 (13), -0.00070 (13), -0.00058 (13), -0.00050 (13), -0.00034 (13), -0.00025 (13), -0.00024 (13), -0.00021 (13), -0.00017 (13), -0.00012 (13), -0.00011 (13), -0.00004 (13), -0.00003 (13), 
length of domains: 17
Time: pickout 0.0012    decision 0.0507    set_bounds 0.0030    solve 0.4140    add 0.0025    
Accumulated time: pickout 0.0057    decision 0.7025    set_bounds 0.0202    solve 2.6164    add 0.0190    
Current (lb-rhs): -0.001070857048034668
309 domains visited
Cumulative time: 3.4629268646240234

BaB round 5
batch: 17
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.8, 148] [/input.8, 148] [/input.8, 148] [/input.8, 148] [/input.8, 148] [/input.8, 148] [/input.8, 148] [/input.8, 148] [/input.8, 148] [/input.8, 148] 
split level 1: [/input.8, 1628] [/input.8, 1195] [/input.8, 1195] [/input.8, 1195] [/input.8, 1628] [/input.8, 1195] [/input.8, 1195] [/input.8, 1195] [/input.8, 1628] [/input.8, 1628] 
split level 2: [/input.8, 1195] [/input.8, 1628] [/input.8, 1628] [/input.8, 1628] [/input.8, 1195] [/input.8, 1628] [/input.8, 1628] [/input.8, 1628] [/input.8, 1195] [/input.8, 1195] 
split level 3: [/input.8, 1443] [/input.8, 1443] [/input.8, 1443] [/input.8, 1443] [/input.8, 1443] [/input.8, 1443] [/input.8, 1443] [/input.8, 1443] [/input.8, 1443] [/input.8, 1443] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 272 / 272 = 1.0
pruning-in-iteration extra time: 0.00010251998901367188
Time: prepare 0.0262    beta_bound 0.0119    bound 0.0121    transfer 0.0018    finalize 0.0205    func 0.0609    
Accumulated time: func 2.6757    prepare 0.1385    bound 2.4017    beta_bound 2.4011    transfer 0.0127    finalize 0.1262    
batch bounding time:  0.061158180236816406
length of domains: 0
Time: pickout 0.0009    decision 0.0444    set_bounds 0.0057    solve 0.0612    add 0.0003    
Accumulated time: pickout 0.0066    decision 0.7469    set_bounds 0.0259    solve 2.6776    add 0.0193    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
309 domains visited
Cumulative time: 3.577239751815796


Properties batch 5, size 1
Remaining timeout: 9.759584903717041
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.8533711433410645.

Properties batch 6, size 1
Remaining timeout: 9.576460838317871
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.9427589774131775.

Properties batch 7, size 1
Remaining timeout: 9.504746437072754
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.5368573665618896.

Properties batch 8, size 1
Remaining timeout: 9.439894199371338
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.7059602737426758.
Result: safe in 20.6253 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):20.625100116872975, max time: 20.625306367874146
mean time for verified SAFE instances(total 1): 20.625306367874146, max time: 20.625306367874146
safe (total 1), index: [0]
