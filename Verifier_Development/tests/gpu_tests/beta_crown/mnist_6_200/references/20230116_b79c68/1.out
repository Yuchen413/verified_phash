Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_6_200
  path: mnist_6_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 43
  end: 44
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Sun Jan 15 23:45:48 2023 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_6_200]_start=43_end=44_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-2.63355017,  1.25981891,  7.96646786,  0.80176717, -0.23677126,
         -2.51228809,  0.08354785,  1.64332783, -0.40803486, -2.71555471]],
       device='cuda:0')
layer /22 using sparse-features alpha with shape [55]; unstable size 55; total size 200 (torch.Size([1, 200]))
layer /22 start_node /input.3 using sparse-spec alpha with unstable size 94 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 200 (torch.Size([1, 200]))
layer /24 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /26 using sparse-features alpha with shape [141]; unstable size 141; total size 200 (torch.Size([1, 200]))
layer /26 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /28 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /30 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-42.90721130, -53.32341766, -49.96341324, -53.90112305, -52.48913193,
         -44.01448441, -57.07033539, -57.98386765, -60.98963928]],
       device='cuda:0') None
best_l after optimization: -358.883056640625 with beta sum per layer: []
alpha/beta optimization time: 6.1058549880981445
initial alpha-CROWN bounds: tensor([[-30.06584740, -39.78733444, -39.30331039, -39.73000336, -40.51801682,
         -34.00349808, -44.91165543, -44.81174088, -45.75164032]],
       device='cuda:0')
Worst class: (+ rhs) -45.75164031982422
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.63355017,  1.25981891,  7.96646786,  0.80176717, -0.23677126,
         -2.51228809,  0.08354785,  1.64332783, -0.40803486, -2.71555471]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.63940144,  1.80271673,  7.01665401,  0.65871990, -0.22974387,
          -2.23512220, -0.08393250,  1.53723502, -0.39483923, -2.36826992],
         [-2.63940144,  1.80271673,  7.01665401,  0.65871990, -0.22974387,
          -2.23512220, -0.08393250,  1.53723502, -0.39483923, -2.36826992]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[9.65605545, 5.21393728, 6.35793400, 7.24639797, 9.25177574,
          7.10058641, 5.47941875, 7.41149330, 9.38492393]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6643 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /22 using sparse-features alpha with shape [55]; unstable size 55; total size 200 (torch.Size([1, 200]))
layer /22 start_node /input.3 using sparse-spec alpha with unstable size 94 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 200 (torch.Size([1, 200]))
layer /24 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /26 using sparse-features alpha with shape [141]; unstable size 141; total size 200 (torch.Size([1, 200]))
layer /26 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /28 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /30 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_53', 'lay4_43', 'lay4_40', 'lay4_165', 'lay4_58', 'lay4_77', 'lay4_144', 'lay4_91', 'lay4_141', 'lay4_121', 'lay4_166', 'lay4_185', 'lay4_174', 'lay4_189', 'lay4_85', 'lay4_14', 'lay4_142', 'lay4_112', 'lay4_116', 'lay4_65', 'lay4_52', 'lay4_137', 'lay4_86', 'lay4_47', 'lay4_38', 'lay4_7', 'lay4_123', 'lay4_0', 'lay4_115', 'lay4_180', 'lay4_67', 'lay4_131', 'lay4_107', 'lay4_101', 'lay4_130', 'lay4_78', 'lay4_134', 'lay4_83', 'lay4_95', 'lay4_22', 'lay4_182', 'lay4_9', 'lay4_125', 'lay4_187', 'lay4_178', 'lay4_13', 'lay4_127', 'lay4_147', 'lay4_191', 'lay4_49', 'lay4_11', 'lay4_109', 'lay4_76', 'lay4_126', 'lay4_16', 'lay4_73', 'lay4_160', 'lay4_74', 'lay4_150', 'lay4_79', 'lay4_70', 'lay4_183', 'lay4_103', 'lay4_3', 'lay4_161', 'lay4_75', 'lay4_62', 'lay4_162', 'lay4_186', 'lay4_192', 'lay4_98', 'lay4_113', 'lay4_170', 'lay4_61', 'lay4_156', 'lay4_39', 'lay4_154', 'lay4_89', 'lay4_80', 'lay4_69', 'lay4_129', 'lay4_146', 'lay4_81', 'lay4_145', 'lay4_31', 'lay4_190', 'lay4_87', 'lay4_188', 'lay4_138', 'lay4_63', 'lay4_2', 'lay4_4', 'lay4_128'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/data_utils.py:255: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_121, [-inf,inf]=>[-0.6628096062064036,0.10043466105768366] (2,-1; 2,-1), time: 2.0771s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-0.3501480264948014,0.29813998383907914] (2,-1; 2,-1), time: 4.2536s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_185, [-inf,inf]=>[-0.3872397633341028,0.26511094317611456] (2,-1; 2,-1), time: 4.4592s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_189, [-inf,inf]=>[-0.3188711664786961,0.4017046443144505] (2,-1; 2,-1), time: 5.0133s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_144, [-inf,inf]=>[-0.36672780754648243,0.3538674359230122] (2,-1; 2,-1), time: 5.1246s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-0.3717372780592025,0.3265590333334793] (2,-1; 2,-1), time: 5.5508s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-0.43430723209406535,0.2761077109710255] (2,-1; 2,-1), time: 5.9651s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_14, [-inf,inf]=>[-0.6727912906493133,0.04688451613398673] (2,-1; 2,-1), time: 6.0493s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_91, [-inf,inf]=>[-0.28489697720721624,0.4316842387878231] (2,-1; 2,-1), time: 6.1090s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_174, [-inf,inf]=>[-0.6782204913979616,0.13550232133464463] (2,-1; 2,-1), time: 6.2093s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4459s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_141, [-inf,inf]=>[-0.3259965996059029,0.38474534192846305] (2,-1; 2,-1), time: 6.4232s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-0.1965543869368042,0.5018044703400648] (2,-1; 2,-1), time: 6.6180s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_165, [-inf,inf]=>[-0.46327630328394037,0.39114351874857833] (2,-1; 2,-1), time: 6.7375s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.2900085992966971,0.32788307278526274] (2,-1; 2,-1), time: 4.9836s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_166, [-inf,inf]=>[1e-05,0.6706048759991233] (15,-1; 2,-1), time: 7.6397s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-0.46314549969765884,0.3007826386237902] (2,-1; 2,-1), time: 7.8700s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_107, [-inf,inf]=>[-inf,-0.004086047123982087] (-1,-1; 2,-1), time: 0.3642s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_116, [-inf,inf]=>[-0.5527841328418935,0.09997713919494387] (2,-1; 2,-1), time: 4.2404s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-0.5147360299536183,0.2157174289390761] (2,-1; 2,-1), time: 5.1443s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-0.14321991663287842,0.6297895085729547] (2,-1; 2,-1), time: 4.8098s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3860s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_0, [-inf,inf]=>[-0.33265324296354204,0.36383241542725064] (2,-1; 2,-1), time: 4.5114s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-0.2668093639323954,0.3336202606050185] (2,-1; 2,-1), time: 4.7139s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_47, [-inf,inf]=>[-0.44228755238044537,0.1392260429716157] (2,-1; 2,-1), time: 5.7516s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.4788303066113676,0.16250178766128312] (2,-1; 2,-1), time: 5.7465s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_131, [-inf,inf]=>[-0.28429291832975984,0.4236117982875949] (2,-1; 2,-1), time: 4.2355s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_130, [-inf,inf]=>[-0.6815271334444969,0.057541581177719] (2,-1; 2,-1), time: 3.3766s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.2288476241140025,0.5173550335490977] (2,-1; 2,-1), time: 5.8886s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3165s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[1e-05,0.6190913322004487] (15,-1; 2,-1), time: 4.0358s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2957s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_123, [-inf,inf]=>[-0.1452058889856503,0.5064887862651806] (2,-1; 2,-1), time: 6.1787s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.31276885689725953,0.23787104923238447] (2,-1; 2,-1), time: 8.5378s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3499s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[-0.4473125303595776,0.22144101322583054] (2,-1; 2,-1), time: 5.8884s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2557s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2634s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[1e-05,0.7872748898888382] (15,-1; 2,-1), time: 3.7544s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_78, [-inf,inf]=>[-0.2650983091941671,0.4501121899197976] (2,-1; 2,-1), time: 5.0852s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.4183007554405509,0.20654822383158167] (2,-1; 2,-1), time: 15.5209s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.04419449843141671,0.5444415060135972] (2,-1; 2,-1), time: 5.3411s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_22, [-inf,inf]=>[-0.113844771382567,0.7381571181622617] (2,-1; 2,-1), time: 5.3275s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-0.38455935024889526,0.2372412449821032] (2,-1; 2,-1), time: 4.3138s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_109, [-inf,inf]=>[1e-05,0.8334357895545093] (15,-1; 2,-1), time: 4.3115s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.6038s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5002s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.5785147185353038,0.25539546468122176] (2,-1; 2,-1), time: 5.9471s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_191, [-inf,inf]=>[-0.09193680319155903,0.4176537259336889] (2,-1; 2,-1), time: 5.3734s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.3733996479659203,0.33976581272487394] (2,-1; 2,-1), time: 5.9051s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3370s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.3072390457775232,0.5167452462210397] (2,-1; 2,-1), time: 6.1369s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.43494262072741435,0.19173050291751148] (2,-1; 2,-1), time: 12.6574s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_126, [-inf,inf]=>[-0.48083265533280584,0.2237143794010355] (2,-1; 2,-1), time: 5.5070s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3649s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-0.10019033656136528,0.6008096608349326] (2,-1; 2,-1), time: 6.1654s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_16, [-inf,inf]=>[-0.258951922616182,0.44719077285013253] (2,-1; 2,-1), time: 5.2157s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3428s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_73, [-inf,inf]=>[-0.507904674424578,0.18149376213826757] (2,-1; 2,-1), time: 4.7853s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4008s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.1368763942426052,0.43925009792559794] (9,-1; 2,-1), time: 15.5147s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_150, [-inf,inf]=>[-0.608362210196786,0.1372265631634488] (2,-1; 2,-1), time: 4.5507s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3208s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-0.11347197622966962,0.6434394805671841] (2,-1; 2,-1), time: 5.6937s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.5844827875888896,0.18538391271862903] (2,-1; 2,-1), time: 4.6970s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.08970103197695431,0.5903807761708776] (2,-1; 2,-1), time: 4.5937s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_161, [-inf,inf]=>[-0.5539393682620973,0.07828327006998013] (2,-1; 2,-1), time: 5.4888s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_183, [-inf,inf]=>[-0.41722398356653917,0.19935492828105383] (2,-1; 2,-1), time: 6.3065s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3210s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_62, [-inf,inf]=>[-0.71002964377072,0.026163378971916444] (2,-1; 2,-1), time: 5.9430s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_160, [-inf,inf]=>[-0.5594997515877348,0.15122446047541155] (2,-1; 2,-1), time: 8.4865s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3409s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_113, [-inf,inf]=>[-0.5932548273805719,0.07565635554945714] (2,-1; 2,-1), time: 4.4113s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2571s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_170, [-inf,inf]=>[-0.5173984859572365,0.10341986669071743] (2,-1; 2,-1), time: 4.8180s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-0.2832994652930669,0.3357014504292885] (2,-1; 2,-1), time: 7.4251s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3841s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-0.17109124354861202,0.5704896046284164] (2,-1; 2,-1), time: 3.4241s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-0.2680744994148015,0.4173927183375113] (2,-1; 2,-1), time: 5.6983s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.4380015546965305,0.46553408837770816] (2,-1; 2,-1), time: 5.4753s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.4489191917842867,0.21249199886581427] (2,-1; 2,-1), time: 4.2721s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.3867099171439929,0.29320097723154315] (2,-1; 2,-1), time: 5.8901s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_146, [-inf,inf]=>[1e-05,0.8718313707069968] (15,-1; 2,-1), time: 3.6905s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_154, [-inf,inf]=>[-0.1698304931888312,0.4588622612856302] (2,-1; 2,-1), time: 5.9063s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[1e-05,0.8767264561542946] (15,-1; 2,-1), time: 2.8223s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[1e-05,0.7120976564268149] (15,-1; 2,-1), time: 3.8413s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_188, [-inf,inf]=>[1e-05,0.6664628459898603] (15,-1; 2,-1), time: 4.0645s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.09112713601044253,0.6858573889012827] (2,-1; 2,-1), time: 3.9939s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.16379769589179066,0.47416579980360385] (2,-1; 2,-1), time: 5.7627s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_31, [-inf,inf]=>[-0.5780595321532245,0.052395616823170205] (2,-1; 2,-1), time: 5.3812s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_2, [-inf,inf]=>[-0.010714938102084053,0.7801718248019396] (2,-1; 2,-1), time: 5.4080s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-0.07592355077025145,0.6339288361862246] (2,-1; 2,-1), time: 6.6539s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-0.660686611110786,0.044825397277639775] (9,-1; 2,-1), time: 16.1554s, #vars: 1295, #constrs: 565, improved: True
PGD done for relu layer 2
MIP improved 93 nodes out of 93 unstable nodes, lb improved 21.34918975830078, ub improved 17.867347717285156, time 35.2460
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_28', 'lay6_139', 'lay6_93', 'lay6_170', 'lay6_152', 'lay6_191', 'lay6_168', 'lay6_67', 'lay6_33', 'lay6_181', 'lay6_24', 'lay6_123', 'lay6_188', 'lay6_32', 'lay6_177', 'lay6_195', 'lay6_133', 'lay6_18', 'lay6_106', 'lay6_159', 'lay6_110', 'lay6_3', 'lay6_15', 'lay6_107', 'lay6_26', 'lay6_122', 'lay6_30', 'lay6_50', 'lay6_49', 'lay6_141', 'lay6_112', 'lay6_192', 'lay6_87', 'lay6_29', 'lay6_70', 'lay6_69', 'lay6_101', 'lay6_136', 'lay6_183', 'lay6_151', 'lay6_175', 'lay6_196', 'lay6_113', 'lay6_169', 'lay6_153', 'lay6_162', 'lay6_197', 'lay6_72', 'lay6_7', 'lay6_108', 'lay6_174', 'lay6_9', 'lay6_117', 'lay6_148', 'lay6_98', 'lay6_77', 'lay6_128', 'lay6_21', 'lay6_2', 'lay6_166', 'lay6_80', 'lay6_48', 'lay6_64', 'lay6_103', 'lay6_124', 'lay6_39', 'lay6_73', 'lay6_186', 'lay6_86', 'lay6_37', 'lay6_92', 'lay6_88', 'lay6_163', 'lay6_173', 'lay6_53', 'lay6_189', 'lay6_150', 'lay6_142', 'lay6_99', 'lay6_10', 'lay6_105', 'lay6_11', 'lay6_55', 'lay6_59', 'lay6_193', 'lay6_75', 'lay6_171', 'lay6_96', 'lay6_129', 'lay6_91', 'lay6_165', 'lay6_194', 'lay6_180', 'lay6_138', 'lay6_42', 'lay6_178', 'lay6_60', 'lay6_65', 'lay6_6', 'lay6_118', 'lay6_76', 'lay6_102', 'lay6_54', 'lay6_16', 'lay6_12', 'lay6_61', 'lay6_111', 'lay6_43', 'lay6_146', 'lay6_132', 'lay6_120', 'lay6_78', 'lay6_121', 'lay6_36', 'lay6_187', 'lay6_135', 'lay6_131', 'lay6_167', 'lay6_68', 'lay6_160', 'lay6_51', 'lay6_35', 'lay6_27', 'lay6_176', 'lay6_74', 'lay6_8', 'lay6_172', 'lay6_94', 'lay6_58', 'lay6_140', 'lay6_134', 'lay6_119', 'lay6_157', 'lay6_144', 'lay6_46'] filter: 1.0
Solving MIP for lay6_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3771s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4035s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4854s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5135s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5257s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6095s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3542s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5209s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1980s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4160s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4837s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2780s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4318s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8501s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3295s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3264s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2611s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.8852s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.3147s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.2004s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3721s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3672s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[1e-05,1.5148046817226253] (15,-1; 9,-1), time: 15.7533s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.7120s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-0.5899955795786275,0.33097570677327276] (9,-1; 9,-1), time: 30.0313s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_177, [-inf,inf]=>[-0.9060549818360212,0.17531156795654146] (9,-1; 9,-1), time: 30.0321s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_24, [-inf,inf]=>[-0.6974096863685803,0.19230383176074922] (9,-1; 9,-1), time: 30.0457s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-0.8167846742020165,0.0762465932160182] (9,-1; 9,-1), time: 30.2509s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_188, [-inf,inf]=>[-0.9201386062890835,0.11529030559335483] (9,-1; 9,-1), time: 30.2895s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3672s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-0.06467264422582766,0.8688100339763463] (9,-1; 9,-1), time: 30.0231s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4289s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3210s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-0.8444514915826259,0.011515936232733831] (9,-1; 9,-1), time: 30.0454s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0753s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-0.282469470085585,0.7107261378097186] (9,-1; 9,-1), time: 30.5223s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.8894678059593376,0.10981258453570733] (9,-1; 9,-1), time: 30.0147s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3403s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2019s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_49, [-inf,inf]=>[-0.8452327369895681,0.009496184177180894] (9,-1; 9,-1), time: 30.3542s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.6963596800154106,0.21007886634825848] (9,-1; 9,-1), time: 30.7304s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3869s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5075560594107934,0.34657909919725444] (9,-1; 9,-1), time: 30.0115s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.8388222883538091,0.060777634670470385] (9,-1; 9,-1), time: 30.2756s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0220s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3356s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3416s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3333s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9328s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4136s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-0.8745318551961601,0.04583954516981889] (9,-1; 9,-1), time: 30.0226s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-0.779710956707695,0.26113442148037497] (9,-1; 9,-1), time: 30.2290s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.0766s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_175, [-inf,inf]=>[1e-05,1.048575651607781] (15,-1; 9,-1), time: 16.2595s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3329s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[1e-05,1.160950267398455] (15,-1; 2,-1), time: 14.6301s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6790s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.9509s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4117s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2409s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3678s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_169, [-inf,inf]=>[-0.3543277343119685,0.4960895531948957] (9,-1; 9,-1), time: 30.0219s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_153, [-inf,inf]=>[-0.6576210094886468,0.29350974383464207] (9,-1; 9,-1), time: 30.2060s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_151, [-inf,inf]=>[-0.7980207933785888,0.017492107073305896] (9,-1; 9,-1), time: 31.0280s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_174, [-inf,inf]=>[-0.3416246593308611,0.4211936821325903] (9,-1; 9,-1), time: 30.0229s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.857707723585222,0.1813254435792756] (9,-1; 9,-1), time: 30.3900s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3323s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1306s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-0.7758378002311818,0.23710222906466974] (9,-1; 9,-1), time: 30.0141s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-0.7183096155642876,0.16121132425361842] (9,-1; 9,-1), time: 30.6857s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-0.4162236942922807,0.41619528847807874] (9,-1; 9,-1), time: 30.0210s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3581s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_128, [-inf,inf]=>[-0.340303291504772,0.435362677993649] (9,-1; 9,-1), time: 30.6253s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-0.6035159620696973,0.1890885797477591] (9,-1; 9,-1), time: 30.0215s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3167s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-0.8856086688467075,0.21352034286744784] (9,-1; 9,-1), time: 30.0191s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9570s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3910s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[-0.5714127798210773,0.3388733561709984] (9,-1; 9,-1), time: 30.5004s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.24332864225632578,0.4841805825685367] (9,-1; 9,-1), time: 30.0157s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4431s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[1e-05,1.4756049353395324] (15,-1; 9,-1), time: 15.3635s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_171, [-inf,inf]=>[1e-05,0.8424320500465386] (15,-1; 9,-1), time: 16.1507s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-0.7289955695130722,0.05937677970523336] (9,-1; 9,-1), time: 30.1726s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_59, [-inf,inf]=>[1e-05,1.0670420339648377] (15,-1; 9,-1), time: 17.3199s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[-0.6832811050121824,0.3181701763786409] (9,-1; 9,-1), time: 30.8264s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_193, [-inf,inf]=>[1e-05,1.0779301960139283] (15,-1; 9,-1), time: 21.4720s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.9335s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[1e-05,0.9970899849900058] (15,-1; 9,-1), time: 21.1478s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1840s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.40741672379893784,0.41004121380716724] (9,-1; 9,-1), time: 30.0186s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[1e-05,0.8418244352073759] (15,-1; 9,-1), time: 25.0105s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3485s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_142, [-inf,inf]=>[-0.612422575299235,0.3517486903230926] (9,-1; 9,-1), time: 30.4188s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.3471775515316135,0.5604873950860797] (9,-1; 9,-1), time: 30.3985s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3566s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-0.07004246167812825,0.7496496291084505] (9,-1; 9,-1), time: 30.5939s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_165, [-inf,inf]=>[-0.8220333995899565,0.2206804380343335] (9,-1; 9,-1), time: 30.1094s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[1e-05,1.1947292593804144] (15,-1; 9,-1), time: 15.8670s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3156s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.4947276228433451,0.36591605770518776] (9,-1; 9,-1), time: 30.0174s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.4489709775267848,0.3563391209535855] (9,-1; 9,-1), time: 30.0164s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[1e-05,0.8413660921002606] (15,-1; 9,-1), time: 21.4531s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.4418862676517814,0.39798453891712493] (9,-1; 9,-1), time: 30.0417s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[1e-05,1.2063917979780305] (15,-1; 9,-1), time: 16.1197s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_146, [-inf,inf]=>[1e-05,1.5274615968970164] (15,-1; 9,-1), time: 15.4319s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4267s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3469s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9638s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[1e-05,1.163032221074405] (15,-1; 9,-1), time: 15.3530s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4099s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-0.21856456410007574,0.5669603177084361] (9,-1; 9,-1), time: 30.1261s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_121, [-inf,inf]=>[1e-05,1.2619389908110255] (15,-1; 9,-1), time: 17.3702s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[1e-05,1.5876224847152485] (15,-1; 9,-1), time: 15.6122s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.89914006637339,0.05997810157618199] (9,-1; 9,-1), time: 30.2663s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[1e-05,1.1997027697336502] (15,-1; 9,-1), time: 15.3974s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.14059352163216624,0.7344535906985727] (9,-1; 9,-1), time: 30.5136s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4109s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9546s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-0.31733113510215455,0.5897229802544365] (9,-1; 9,-1), time: 30.0686s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4193s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.5477430942144969,0.23611078203999028] (9,-1; 9,-1), time: 30.2668s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[1e-05,1.0909418907958528] (15,-1; 9,-1), time: 15.3511s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[1e-05,0.915801034656066] (15,-1; 9,-1), time: 17.2439s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-0.47526715249876983,0.42348117129017165] (9,-1; 9,-1), time: 30.0247s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_134, [-inf,inf]=>[1e-05,0.901213265452055] (15,-1; 9,-1), time: 15.8937s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.8449545262516609] (15,-1; 9,-1), time: 16.0192s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-0.0701685272186861,0.7086873964351352] (9,-1; 9,-1), time: 30.4530s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.3209443066338529,0.5185976826501845] (9,-1; 9,-1), time: 30.0141s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.714107237954916] (15,-1; 9,-1), time: 15.3139s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.6734765661982983,0.23076262483389234] (9,-1; 9,-1), time: 30.0167s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-0.11038693138630064,0.7121011693745456] (9,-1; 9,-1), time: 30.0203s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.657823652206599,0.2724060527386264] (9,-1; 9,-1), time: 30.1957s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_140, [-inf,inf]=>[-0.8650517935653161,0.08095983101199833] (9,-1; 9,-1), time: 30.4011s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-0.10325935550140253,0.9319754930021001] (9,-1; 9,-1), time: 30.4221s, #vars: 1627, #constrs: 963, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(166, 1), (86, -1), (107, -1), (101, 1), (134, -1), (83, 1), (182, -1), (125, -1), (13, -1), (127, -1), (147, -1), (49, -1), (109, 1), (79, -1), (103, -1), (186, -1), (192, -1), (156, -1), (89, -1), (146, 1), (81, -1), (145, -1), (190, -1), (188, 1), (138, 1), (4, -1), (128, 1)]
best_l after optimization: -56.68806457519531 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 4.656338691711426
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.87871981, -8.59268284, -6.20066357, -6.79138279, -4.34124756,
         -5.72594404, -8.61728096, -6.59837341, -5.94177246]], device='cuda:0') None
MIP improved 135 nodes out of 135 unstable nodes, lb improved 39.836692810058594, ub improved 56.82780838012695, time 141.9133
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_45', 'lay8_0', 'lay8_65', 'lay8_85', 'lay8_98', 'lay8_130', 'lay8_183', 'lay8_180', 'lay8_49', 'lay8_119', 'lay8_86', 'lay8_175', 'lay8_112', 'lay8_128', 'lay8_188', 'lay8_16', 'lay8_185', 'lay8_167', 'lay8_156', 'lay8_184', 'lay8_187', 'lay8_140', 'lay8_57', 'lay8_7', 'lay8_127', 'lay8_174', 'lay8_55', 'lay8_181', 'lay8_83', 'lay8_158', 'lay8_19', 'lay8_159', 'lay8_171', 'lay8_97', 'lay8_58', 'lay8_77', 'lay8_43', 'lay8_24', 'lay8_20', 'lay8_62', 'lay8_149', 'lay8_195', 'lay8_133', 'lay8_22', 'lay8_59', 'lay8_48', 'lay8_121', 'lay8_92', 'lay8_178', 'lay8_25', 'lay8_73', 'lay8_111', 'lay8_104', 'lay8_179', 'lay8_69', 'lay8_27', 'lay8_196', 'lay8_165', 'lay8_144', 'lay8_94', 'lay8_146', 'lay8_8', 'lay8_54', 'lay8_154', 'lay8_84', 'lay8_33', 'lay8_37', 'lay8_56', 'lay8_150', 'lay8_145', 'lay8_17', 'lay8_23', 'lay8_36', 'lay8_78', 'lay8_60', 'lay8_101', 'lay8_6', 'lay8_134', 'lay8_90', 'lay8_157', 'lay8_1', 'lay8_147', 'lay8_67', 'lay8_88', 'lay8_26', 'lay8_192', 'lay8_162', 'lay8_42', 'lay8_61', 'lay8_31', 'lay8_155', 'lay8_63', 'lay8_129', 'lay8_115', 'lay8_81', 'lay8_70', 'lay8_64', 'lay8_74', 'lay8_169', 'lay8_172', 'lay8_95', 'lay8_47', 'lay8_39', 'lay8_138', 'lay8_139', 'lay8_82', 'lay8_2', 'lay8_118', 'lay8_160', 'lay8_199', 'lay8_173', 'lay8_89', 'lay8_21', 'lay8_194', 'lay8_186', 'lay8_35', 'lay8_163', 'lay8_72', 'lay8_52', 'lay8_120', 'lay8_117', 'lay8_110', 'lay8_107', 'lay8_53', 'lay8_13', 'lay8_143', 'lay8_109', 'lay8_168', 'lay8_11', 'lay8_161', 'lay8_75', 'lay8_93', 'lay8_68', 'lay8_80', 'lay8_113', 'lay8_151', 'lay8_9', 'lay8_152', 'lay8_38', 'lay8_50', 'lay8_190', 'lay8_15', 'lay8_148', 'lay8_79', 'lay8_137', 'lay8_182', 'lay8_100', 'lay8_142', 'lay8_132', 'lay8_96', 'lay8_76', 'lay8_108', 'lay8_164', 'lay8_176', 'lay8_177', 'lay8_5', 'lay8_126', 'lay8_123', 'lay8_153', 'lay8_189', 'lay8_105', 'lay8_198', 'lay8_191', 'lay8_4', 'lay8_18', 'lay8_41', 'lay8_91', 'lay8_12', 'lay8_87', 'lay8_166', 'lay8_3', 'lay8_46', 'lay8_66', 'lay8_122', 'lay8_102', 'lay8_125', 'lay8_114', 'lay8_44', 'lay8_170', 'lay8_34', 'lay8_14', 'lay8_32', 'lay8_51', 'lay8_193', 'lay8_103', 'lay8_99', 'lay8_71', 'lay8_28', 'lay8_116', 'lay8_141', 'lay8_30', 'lay8_40', 'lay8_124', 'lay8_197', 'lay8_106', 'lay8_136', 'lay8_10', 'lay8_29', 'lay8_131', 'lay8_135'] filter: 1.0
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6004s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6424s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6290s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6347s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6472s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6635s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6621s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6672s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6702s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4844s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5731s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5872s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6587s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4402s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5193s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9556s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5210s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7485s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4138s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9448s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.3791s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.5336s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4816s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4517s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4170s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4209s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.7526s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[1e-05,0.9972995071964414] (15,-1; 9,-1), time: 27.9040s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-0.7778720347601248,0.3842083353688313] (9,-1; 9,-1), time: 30.0150s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-1.0465067787876499,0.1342648961545645] (9,-1; 9,-1), time: 30.0133s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[-0.9533696783388143,0.25594945722831614] (9,-1; 9,-1), time: 30.0195s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-0.7740982461570294,0.17644758669252306] (9,-1; 9,-1), time: 30.0343s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-0.7939589538549424,0.28110531039350184] (9,-1; 9,-1), time: 30.0401s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4559s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[-0.8005557918648616,0.08175717370811686] (9,-1; 9,-1), time: 30.0178s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-0.8206788389881995,0.24141372223690682] (9,-1; 9,-1), time: 30.0200s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.7292993134142296,0.2552248034308523] (9,-1; 9,-1), time: 30.0147s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6190s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5189s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5731s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4653s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-0.5879022066792172,0.7343237814426334] (9,-1; 9,-1), time: 30.0221s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4352s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4771s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-1.3160441023942557,0.048966708675053414] (9,-1; 9,-1), time: 30.0136s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6810s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[-0.3365749427898751,0.9208157709999533] (9,-1; 9,-1), time: 30.0137s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4628s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-0.6667067878231833,0.21067302602901256] (9,-1; 9,-1), time: 30.0126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6859s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_77, [-inf,inf]=>[-0.2245990405681517,0.7776329738637162] (9,-1; 9,-1), time: 30.0142s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4624s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4382s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4487s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-0.5384203317989982,0.23921126045493743] (9,-1; 9,-1), time: 30.0131s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.9041s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.0004s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[1e-05,1.2981791745367006] (15,-1; 9,-1), time: 15.4106s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[1e-05,1.4059354090024878] (15,-1; 9,-1), time: 15.4814s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-0.6927746048433184,0.5061300830027275] (9,-1; 9,-1), time: 30.0119s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.036880425803209] (15,-1; 9,-1), time: 15.4112s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3903s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5100s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.7804711665214192,0.13013659075986025] (9,-1; 9,-1), time: 30.0116s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-0.40301667722546664,0.687924136099313] (9,-1; 9,-1), time: 30.0100s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-0.7241818478563141,0.4714852627514895] (9,-1; 9,-1), time: 30.0175s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[-0.7660676992081453,0.09000477369615399] (9,-1; 9,-1), time: 30.0125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4617s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-0.5527405420035387,0.43214214603420525] (9,-1; 9,-1), time: 30.0138s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.24752080507344115,1.1988200030340177] (9,-1; 9,-1), time: 30.0146s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5272s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.5336559198361133,0.6111551267548528] (9,-1; 9,-1), time: 30.0117s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4817s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-0.20231722190622725,1.094750335989589] (9,-1; 9,-1), time: 30.0177s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.27107059276522805,0.9240474372216024] (9,-1; 9,-1), time: 30.0133s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-0.8457530582912932,0.03971585925921559] (9,-1; 9,-1), time: 30.0145s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-0.4708727560760693,0.4662913308881026] (9,-1; 9,-1), time: 30.0178s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7861s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.46155910099333225,0.37411913178076195] (9,-1; 9,-1), time: 30.0105s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.6461s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[-0.597412749655746,0.22530227229626204] (9,-1; 9,-1), time: 30.0103s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.8275896759898794,0.033067423918578656] (9,-1; 9,-1), time: 30.0153s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[1e-05,1.2691698570386798] (15,-1; 9,-1), time: 17.6573s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-0.6383542744610223,0.32798280261231305] (9,-1; 9,-1), time: 30.0112s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6019s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4354s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4402s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[-0.9266796387676717,0.21105349729290004] (9,-1; 9,-1), time: 30.0126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5182s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-0.8263420088662673,0.2737320873331892] (9,-1; 9,-1), time: 30.0118s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-0.8247175688872318,0.17563449096675082] (9,-1; 9,-1), time: 30.0192s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-0.003069250065472049,1.0494618753871514] (9,-1; 9,-1), time: 30.0270s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.8303s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.6410568561097647,0.27958767169542165] (9,-1; 9,-1), time: 30.0111s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[-0.2847313570172011,0.8807206665389378] (9,-1; 9,-1), time: 30.0101s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-0.952599561686876,0.2086579288030664] (9,-1; 9,-1), time: 30.0100s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4224s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[1e-05,1.216294741944597] (15,-1; 9,-1), time: 15.4160s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[-0.23800676713672492,0.7871192780318229] (9,-1; 9,-1), time: 30.0145s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-0.6764530407640209,0.43858850738826893] (9,-1; 9,-1), time: 30.0102s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4351s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[-0.4123311246905821,0.5201940342322129] (9,-1; 9,-1), time: 30.0120s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4373s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4430s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-0.701002028809612,0.28799039639516066] (9,-1; 9,-1), time: 30.0097s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4177s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.6512206047989787,0.19590819939136603] (9,-1; 9,-1), time: 30.0105s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-0.9083659163362535,0.11751636420501854] (9,-1; 9,-1), time: 30.0255s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.5089550570291228,0.5106978343894226] (9,-1; 9,-1), time: 30.0194s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.32256137475814384,0.449942575128964] (9,-1; 9,-1), time: 30.0127s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.4299986166703083,0.4873881867990122] (9,-1; 9,-1), time: 30.0129s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_160, [-inf,inf]=>[-0.2887986124980981,0.6215332605194445] (9,-1; 9,-1), time: 30.0099s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.13912668615314536,0.6566223969715077] (9,-1; 9,-1), time: 30.0200s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.7210783662640449,0.33345707471589836] (9,-1; 9,-1), time: 30.0148s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.8376137192911202,0.07141881731597309] (9,-1; 9,-1), time: 30.0140s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5446s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-0.7421387796590233,0.2840762308863465] (9,-1; 9,-1), time: 30.0128s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5097s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5669s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4436s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_186, [-inf,inf]=>[-0.47985547575556686,0.2400954961003268] (9,-1; 9,-1), time: 30.0114s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4147s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-0.0357854498233553,0.9988302283301665] (9,-1; 9,-1), time: 30.0110s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[-0.37383247291020566,0.4821264970809482] (9,-1; 9,-1), time: 30.0208s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5171s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[-0.32845536071176357,0.6433919869557041] (9,-1; 9,-1), time: 30.0307s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-0.19730974284866581,0.884508992844207] (9,-1; 9,-1), time: 30.0221s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4283s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4363s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3912s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4668s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4111s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9874s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.010620187549425966,1.0100108694896635] (9,-1; 9,-1), time: 30.0113s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5100s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,2.3117403990484533] (15,-1; 9,-1), time: 15.4307s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.0905515889801163] (15,-1; 9,-1), time: 19.1563s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[1e-05,1.3091739804915998] (15,-1; 9,-1), time: 15.4317s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-0.4219288107191804,0.6022363456611532] (9,-1; 9,-1), time: 30.0118s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4756s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[1e-05,1.5201140084438505] (15,-1; 9,-1), time: 15.5255s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4383s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4214s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[1e-05,1.5316905806291736] (15,-1; 9,-1), time: 15.4286s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4354s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4944s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[1e-05,1.3956195353555474] (15,-1; 9,-1), time: 15.4433s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-0.7978075178527018,0.24537143300769712] (9,-1; 9,-1), time: 30.0119s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[1e-05,1.028809070296077] (15,-1; 9,-1), time: 15.4917s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4646s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.1771s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_176, [-inf,inf]=>[1e-05,2.7479334696733724] (15,-1; 9,-1), time: 15.4195s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.7761572878054016,0.18593570710711657] (9,-1; 9,-1), time: 30.0211s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-0.12549075502044393,1.1648486197907528] (9,-1; 9,-1), time: 30.0123s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4668s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4629s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-0.5826552020144032,0.25372490225383915] (9,-1; 9,-1), time: 30.0172s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5230s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5390s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[1e-05,2.018174204333179] (15,-1; 9,-1), time: 15.4289s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[-0.07295595523283682,0.8699842805108797] (9,-1; 9,-1), time: 30.0100s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[1e-05,1.0353904728563663] (15,-1; 9,-1), time: 15.4660s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.1449694171176436,0.8546512317133461] (9,-1; 9,-1), time: 30.0154s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4095s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-0.617400106803701,0.5550339373179003] (9,-1; 9,-1), time: 30.0158s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,1.0136898112133688] (15,-1; 9,-1), time: 17.8532s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4550s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-0.5033313518033942,0.2910908286713637] (9,-1; 9,-1), time: 30.0121s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2489s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5348s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[-0.6257532934929237,0.31556460397957997] (9,-1; 9,-1), time: 30.0118s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5537s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.7991444891767387,0.02371237545651366] (9,-1; 9,-1), time: 30.0136s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_114, [-inf,inf]=>[1e-05,2.548346436968438] (15,-1; 9,-1), time: 15.4616s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4360s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[1e-05,2.661780103898106] (15,-1; 9,-1), time: 15.4869s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4110s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[1e-05,2.7799214211696106] (15,-1; 9,-1), time: 15.4401s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-0.46119375950469205,0.6317958693481213] (9,-1; 9,-1), time: 30.0136s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,2.9127391726182448] (15,-1; 9,-1), time: 15.5057s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-0.8057481045927521,0.20005397567525593] (9,-1; 9,-1), time: 30.0179s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[1e-05,1.8750228534362248] (15,-1; 9,-1), time: 15.4435s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,1.640798518032335] (15,-1; 9,-1), time: 15.5148s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.5022948957358555,0.43381787123227417] (9,-1; 9,-1), time: 30.0143s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.5976281899460745,0.5113435878271927] (9,-1; 9,-1), time: 30.0139s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-0.2755809431324148,0.974799267711443] (9,-1; 9,-1), time: 30.0121s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.1024773378175094,0.6739127823964273] (9,-1; 9,-1), time: 30.0136s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.9675249565682453,0.12315914628041058] (9,-1; 9,-1), time: 30.0106s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[1e-05,0.9273594545981174] (15,-1; 9,-1), time: 16.6405s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-0.3221062558944758,0.4357735985188537] (9,-1; 9,-1), time: 30.0300s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[1e-05,1.7860316311183453] (15,-1; 9,-1), time: 15.4070s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[1e-05,1.5142177792572153] (15,-1; 9,-1), time: 15.4991s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-0.3482591005869225,0.6834365301393156] (9,-1; 9,-1), time: 30.0149s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_124, [-inf,inf]=>[-0.06539579851711648,1.0621348410803537] (9,-1; 9,-1), time: 30.0120s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.8588830845046899,0.23624640228588129] (9,-1; 9,-1), time: 30.0250s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_136, [-inf,inf]=>[-0.4515467713382794,0.5269331405671493] (9,-1; 9,-1), time: 30.0129s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-0.1270631937047758,0.7719718942335703] (9,-1; 9,-1), time: 30.0195s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.3364778394908994,0.6211811951740888] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(139, -1), (93, -1), (170, -1), (152, -1), (191, -1), (168, -1), (67, -1), (33, -1), (123, -1), (32, -1), (195, -1), (133, -1), (18, -1), (106, -1), (159, -1), (110, -1), (26, -1), (122, -1), (141, -1), (112, -1), (70, 1), (69, -1), (101, -1), (183, -1), (175, 1), (196, -1), (113, -1), (162, -1), (197, -1), (7, -1), (108, -1), (117, -1), (98, -1), (21, -1), (2, -1), (166, -1), (80, -1), (64, -1), (103, -1), (124, 1), (86, -1), (37, -1), (92, -1), (173, -1), (53, -1), (189, -1), (99, -1), (105, -1), (55, 1), (59, 1), (193, 1), (75, -1), (171, 1), (96, 1), (129, -1), (91, 1), (194, -1), (180, -1), (178, -1), (65, 1), (6, -1), (76, 1), (16, -1), (111, 1), (43, -1), (146, 1), (120, -1), (78, 1), (121, 1), (36, 1), (187, -1), (135, 1), (68, -1), (51, -1), (35, 1), (27, -1), (176, 1), (8, -1), (172, -1), (58, 1), (134, 1), (157, -1), (144, 1), (46, -1)]
best_l after optimization: 3.514050006866455 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 4.821969032287598
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.02322960, -1.72935772,  0.08853960,  0.03632402,  2.45946789,
          0.15319395, -1.80691481,  0.71257448,  1.57699299]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 144.26568603515625, ub improved 225.87594604492188, time 202.4530
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_135', 'lay10_11', 'lay10_154', 'lay10_137', 'lay10_164', 'lay10_90', 'lay10_189', 'lay10_57', 'lay10_157', 'lay10_33', 'lay10_82', 'lay10_198', 'lay10_49', 'lay10_138', 'lay10_146', 'lay10_151', 'lay10_25', 'lay10_192', 'lay10_91', 'lay10_143', 'lay10_186', 'lay10_18', 'lay10_141', 'lay10_31', 'lay10_14', 'lay10_51', 'lay10_199', 'lay10_62', 'lay10_24', 'lay10_167', 'lay10_195', 'lay10_153', 'lay10_73', 'lay10_114', 'lay10_19', 'lay10_180', 'lay10_94', 'lay10_70', 'lay10_109', 'lay10_29', 'lay10_179', 'lay10_37', 'lay10_140', 'lay10_87', 'lay10_30', 'lay10_7', 'lay10_80', 'lay10_42', 'lay10_185', 'lay10_188', 'lay10_81', 'lay10_78', 'lay10_161', 'lay10_163', 'lay10_17', 'lay10_93', 'lay10_43', 'lay10_172', 'lay10_107', 'lay10_47', 'lay10_131', 'lay10_184', 'lay10_130', 'lay10_194', 'lay10_142', 'lay10_175', 'lay10_124', 'lay10_168', 'lay10_191', 'lay10_4', 'lay10_144', 'lay10_52', 'lay10_152', 'lay10_99', 'lay10_86', 'lay10_20', 'lay10_39', 'lay10_26', 'lay10_98', 'lay10_58', 'lay10_35', 'lay10_41', 'lay10_16', 'lay10_55', 'lay10_139', 'lay10_6', 'lay10_149', 'lay10_110', 'lay10_118', 'lay10_115', 'lay10_67', 'lay10_126', 'lay10_0', 'lay10_54', 'lay10_156', 'lay10_116', 'lay10_8', 'lay10_197', 'lay10_72', 'lay10_64', 'lay10_9', 'lay10_165', 'lay10_187', 'lay10_13', 'lay10_166', 'lay10_104', 'lay10_61', 'lay10_120', 'lay10_125', 'lay10_10', 'lay10_176', 'lay10_50', 'lay10_69', 'lay10_48', 'lay10_174', 'lay10_133', 'lay10_36', 'lay10_65', 'lay10_12', 'lay10_46', 'lay10_150', 'lay10_129', 'lay10_1', 'lay10_127', 'lay10_3', 'lay10_162', 'lay10_177', 'lay10_53', 'lay10_159', 'lay10_27', 'lay10_71', 'lay10_97', 'lay10_190', 'lay10_196', 'lay10_134', 'lay10_158', 'lay10_2', 'lay10_23', 'lay10_160', 'lay10_169', 'lay10_40', 'lay10_117', 'lay10_155', 'lay10_108', 'lay10_173', 'lay10_45', 'lay10_105', 'lay10_79', 'lay10_183', 'lay10_32', 'lay10_102', 'lay10_60', 'lay10_34', 'lay10_136', 'lay10_103', 'lay10_128', 'lay10_74', 'lay10_83', 'lay10_59', 'lay10_44', 'lay10_181', 'lay10_148', 'lay10_66', 'lay10_96', 'lay10_76', 'lay10_123', 'lay10_22', 'lay10_121', 'lay10_84', 'lay10_145', 'lay10_88', 'lay10_92', 'lay10_85', 'lay10_28', 'lay10_95', 'lay10_119', 'lay10_56', 'lay10_68', 'lay10_101', 'lay10_89', 'lay10_170', 'lay10_38', 'lay10_193', 'lay10_132', 'lay10_182', 'lay10_106', 'lay10_5', 'lay10_75', 'lay10_15', 'lay10_113', 'lay10_100', 'lay10_147', 'lay10_111', 'lay10_171', 'lay10_77', 'lay10_63', 'lay10_178', 'lay10_122', 'lay10_112', 'lay10_21'] filter: 1.0
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0609s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0842s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1174s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1261s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1332s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9140s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9923s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-1.4521109326389743,0.01393401743441565] (9,-1; 9,-1), time: 30.0217s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-0.7703350610791597,1.43327202613352] (9,-1; 9,-1), time: 30.0352s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-1.796283722423565,0.06507248460102426] (9,-1; 9,-1), time: 30.0569s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-1.1080359273093685,0.5038811527097609] (9,-1; 9,-1), time: 30.0637s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-1.5419599025547472,0.17329008251884334] (9,-1; 9,-1), time: 30.0603s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-0.8510408299946508,1.1440816753869403] (9,-1; 9,-1), time: 30.0639s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-1.44852670530871,0.23242918562195466] (9,-1; 9,-1), time: 30.0650s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-1.6122175019852685,0.21833293080258817] (9,-1; 9,-1), time: 30.1021s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-1.84526782531231,0.26042053170139057] (9,-1; 9,-1), time: 30.1306s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-1.7241715644997195,0.07179086303325909] (9,-1; 9,-1), time: 30.2475s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7407s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8828s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-1.3033064398001253,0.2930582451409069] (9,-1; 9,-1), time: 30.0512s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-1.062276971135576,0.604974468052058] (9,-1; 9,-1), time: 30.1178s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.5228896717477558,1.5354980005309449] (9,-1; 9,-1), time: 30.0546s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-0.8576724418676065,0.6269210544110267] (9,-1; 9,-1), time: 30.2385s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7245s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6901s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.9708511182738875,0.7294740750863993] (9,-1; 9,-1), time: 30.1799s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7298s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7916s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-1.6048053658515222,0.22390734692569728] (9,-1; 9,-1), time: 30.0160s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8255s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8421s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8381s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6094s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7190s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2924s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-1.418686138225185,0.0729747091276231] (9,-1; 9,-1), time: 30.0140s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-1.1417392368052017,0.44711966117736285] (9,-1; 9,-1), time: 30.0380s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-1.2883169048953003,0.45989473255501123] (9,-1; 9,-1), time: 30.0376s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.827050448169923,0.7142179943706686] (9,-1; 9,-1), time: 30.0913s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-0.6688345792929291,0.9716563993607268] (9,-1; 9,-1), time: 30.0259s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.9280570632192309,0.8660727272475245] (9,-1; 9,-1), time: 30.1250s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-1.0449574922141918,0.5002925815262468] (9,-1; 9,-1), time: 30.2055s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7790s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-0.0005396404158922951,1.8235065123484282] (9,-1; 9,-1), time: 30.0110s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8376s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9388s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-1.5078432859386466,0.1488609236365886] (9,-1; 9,-1), time: 30.0552s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-1.2785836703113238,0.190254318686226] (9,-1; 9,-1), time: 30.1552s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8333s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8519s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3299s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-0.2160019004706375,1.3230393936095814] (9,-1; 9,-1), time: 30.0929s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-1.3552816388487958,0.3547458279840048] (9,-1; 9,-1), time: 30.1493s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6924s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-1.3421013245328353,0.34466701751537576] (9,-1; 9,-1), time: 30.0615s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-1.5665018856772193,0.22971863923916708] (9,-1; 9,-1), time: 30.0455s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-1.4009058622372064,0.47940654480134287] (9,-1; 9,-1), time: 30.0760s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7722s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8352s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-1.104606435937706,0.371516167792165] (9,-1; 9,-1), time: 30.4238s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[1e-05,1.8265580653246223] (15,-1; 9,-1), time: 15.7969s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[1e-05,1.835253947539102] (15,-1; 9,-1), time: 17.4260s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-1.182801040522108,0.7231037609960284] (9,-1; 9,-1), time: 30.0109s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-1.4332223717378452,0.12981238445399151] (9,-1; 9,-1), time: 30.1139s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7447s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-1.2586971364756856,0.1895561596058622] (9,-1; 9,-1), time: 30.0171s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-1.8221506594312016,0.012035817094306503] (9,-1; 9,-1), time: 30.0315s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8123s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-0.5812754897442014,0.5566958884158973] (9,-1; 9,-1), time: 30.0135s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-1.3278863925253734,0.3080993826161014] (9,-1; 9,-1), time: 30.1073s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7470s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.792659623354463,0.6602561676119797] (9,-1; 9,-1), time: 30.0670s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.9210081124165361,0.609891673690294] (9,-1; 9,-1), time: 30.0307s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7122s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7100s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8512s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-1.1467711152611215,0.40533241015914084] (9,-1; 9,-1), time: 30.0912s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-0.3959209454488958,1.2797986896232136] (9,-1; 9,-1), time: 30.0568s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7832s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7628s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-1.2999810691464513,0.2731232307479443] (9,-1; 9,-1), time: 30.0151s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-0.8235797765097239,0.700490834195316] (9,-1; 9,-1), time: 30.0295s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-1.389337571271949,0.13586012390813806] (9,-1; 9,-1), time: 30.1503s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8561s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9552s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-0.0796948517159648,1.4647631278919575] (9,-1; 9,-1), time: 30.1138s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6185s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.1131s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-1.119919940158502,0.3380169910630151] (9,-1; 9,-1), time: 30.0182s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8374s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-0.6232099795048986,1.0534484173904888] (9,-1; 9,-1), time: 30.1464s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[1e-05,2.809705734775145] (15,-1; 9,-1), time: 15.7387s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[1e-05,2.0752529405068865] (15,-1; 9,-1), time: 17.6072s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8336s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-1.3105821433036664,0.43560898995059777] (9,-1; 9,-1), time: 30.0157s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-1.3285286795482452,0.27223099338975354] (9,-1; 9,-1), time: 30.0128s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.9340903847952073,0.34874079602020924] (9,-1; 9,-1), time: 30.0121s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-0.33776635176386494,1.120207139516354] (9,-1; 9,-1), time: 30.1298s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-1.2141522014870048,0.31115186811471046] (9,-1; 9,-1), time: 30.0625s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8976s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-1.0820338691442561,0.4610278948327681] (9,-1; 9,-1), time: 30.0597s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-1.271561905872087,0.2628111241519623] (9,-1; 9,-1), time: 30.0423s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-1.461012371116792,0.1509070511691311] (9,-1; 9,-1), time: 30.0806s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.6824354502686822,1.253540969642978] (9,-1; 9,-1), time: 30.0464s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7373s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[-0.8993071973197693,0.5645416114426242] (9,-1; 9,-1), time: 30.1321s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-1.043356900244388,0.46895436808233104] (9,-1; 9,-1), time: 30.2280s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7953s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-1.2933441697916002,0.1033508741588969] (9,-1; 9,-1), time: 30.0179s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-0.9237782732909746,0.4061639923930665] (9,-1; 9,-1), time: 30.1514s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,2.3928079747198714] (15,-1; 9,-1), time: 15.8835s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9171s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7953s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-1.3752732463110175,0.026818219982744505] (9,-1; 9,-1), time: 30.2124s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.7981433167136767,0.8644565976034441] (9,-1; 9,-1), time: 30.0583s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-1.2636703137431344,0.3924868408509689] (9,-1; 9,-1), time: 30.1762s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-0.6291278547519229,1.0803749087510044] (9,-1; 9,-1), time: 30.0464s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[-1.816497478400621,0.07561643544352693] (9,-1; 9,-1), time: 30.0128s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-0.9139175657170082,0.6497172534021888] (9,-1; 9,-1), time: 30.1523s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-0.9300953646337773,0.8639058271772107] (9,-1; 9,-1), time: 30.0541s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-1.645316933921566,0.2973116980897535] (9,-1; 9,-1), time: 30.0521s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[1e-05,4.265138016824427] (15,-1; 9,-1), time: 15.7625s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8366s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-0.023401165222714987,1.6776711252288397] (9,-1; 9,-1), time: 30.0186s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.7884419858928672,0.6938280730211516] (9,-1; 9,-1), time: 30.0710s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-0.9788491956094466,0.5880339524579208] (9,-1; 9,-1), time: 30.0246s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8904s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[-1.3152480133257645,0.11218369441437913] (9,-1; 9,-1), time: 30.0651s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[-1.0745141672944127,0.3413342934652475] (9,-1; 9,-1), time: 30.1748s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-1.4125157578533518,0.1109537009944308] (9,-1; 9,-1), time: 30.0121s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8492s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8380s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-0.3665076138631133,1.6272663212412486] (9,-1; 9,-1), time: 30.0671s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[1e-05,2.0064447396967733] (15,-1; 9,-1), time: 15.8385s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7681s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-1.2306791065891003,0.23604738632280392] (9,-1; 9,-1), time: 30.2580s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-1.439496808847149,0.42482065437897426] (9,-1; 9,-1), time: 30.1311s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.288933171829874,1.4835770595673257] (9,-1; 9,-1), time: 30.1358s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8973s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9447s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7730s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9709s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-0.1755586383110195,1.7788498081773412] (9,-1; 9,-1), time: 30.0659s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-1.5653599080497824,0.05967707134124133] (9,-1; 9,-1), time: 30.1711s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-0.35243508162216747,0.9726998191138719] (9,-1; 9,-1), time: 30.0912s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-1.1209293385408259,0.6416787640227035] (9,-1; 9,-1), time: 30.1545s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-1.2389630750838818,0.4685307446712171] (9,-1; 9,-1), time: 30.0196s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-1.0107098754910107,0.3438163559056322] (9,-1; 9,-1), time: 30.0922s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-0.8022233099963727,0.6194902804085836] (9,-1; 9,-1), time: 30.0957s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8403s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-0.8633798864452091,1.0182492903084004] (9,-1; 9,-1), time: 30.0323s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8215s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-1.2361157767191842,0.28925133638547335] (9,-1; 9,-1), time: 30.0266s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-1.6500982461531783,0.3522576717870936] (9,-1; 9,-1), time: 30.1066s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[1e-05,2.0752720577278643] (15,-1; 9,-1), time: 15.7500s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-1.5539860332205706,0.07919036269429185] (9,-1; 9,-1), time: 30.0943s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8518s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-1.3329660322758976,0.08121018243530553] (9,-1; 9,-1), time: 30.0384s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[1e-05,2.0432835391449333] (15,-1; 9,-1), time: 17.5860s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[1e-05,2.190087844552736] (15,-1; 9,-1), time: 15.8122s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[1e-05,2.6149006927723693] (15,-1; 9,-1), time: 16.0615s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0639s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[-0.30166364712911437,1.5527203484772825] (9,-1; 9,-1), time: 30.0170s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[1e-05,3.2500706523066283] (15,-1; 9,-1), time: 16.0152s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.251839711536846,1.4425898961740953] (9,-1; 9,-1), time: 30.0811s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-1.2066895092236272,0.23065896917758189] (9,-1; 9,-1), time: 30.1068s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-1.1069291043676086,0.444275365189211] (9,-1; 9,-1), time: 30.0258s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-1.6230777226179034,0.14489047624421908] (9,-1; 9,-1), time: 30.0684s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[1e-05,2.7045963691126786] (15,-1; 9,-1), time: 15.8577s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[-0.4060215635457163,0.9641296072543544] (9,-1; 9,-1), time: 30.0914s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[1e-05,3.9876293519170862] (15,-1; 9,-1), time: 15.8739s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-1.3851845639696636,0.09051813026711063] (9,-1; 9,-1), time: 30.2592s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-0.4260050804664458,1.0133571879966932] (9,-1; 9,-1), time: 30.0462s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[1e-05,3.2119784598043437] (15,-1; 9,-1), time: 15.7108s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-1.4101667312289947,0.31926281770992726] (9,-1; 9,-1), time: 30.1518s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7614s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7977s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7591s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7895s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7385s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-1.221363203384822,0.278540979289951] (9,-1; 9,-1), time: 30.0287s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7408s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7273s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-0.11902571917857893,1.4151209252860897] (9,-1; 9,-1), time: 30.1064s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.2261805178021525] (15,-1; 9,-1), time: 15.8573s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-1.4711397303385239,0.05037868428583481] (9,-1; 9,-1), time: 30.0447s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[-0.006930910739912699,1.647558137241722] (9,-1; 9,-1), time: 30.1980s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-0.7904966974300083,0.5165785260616862] (9,-1; 9,-1), time: 30.0184s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.13880524816953657,2.1105498949979657] (9,-1; 9,-1), time: 30.0409s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-1.0169390952691069,0.2871309287437677] (9,-1; 9,-1), time: 30.0465s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[1e-05,1.6451459236862613] (15,-1; 9,-1), time: 20.5892s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[-0.747992828379026,0.8151749994715963] (9,-1; 9,-1), time: 30.1450s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-1.0401779733783068,0.39374663505416324] (9,-1; 9,-1), time: 30.0476s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-0.7607424981298903,0.5416375123425121] (9,-1; 9,-1), time: 30.0209s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-0.7867385816317144,0.8950184869240975] (9,-1; 9,-1), time: 30.2274s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-0.7874521814140206,1.013055512919113] (9,-1; 9,-1), time: 30.0155s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-1.0702268153209586,0.37753944995789807] (9,-1; 9,-1), time: 30.2533s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[-0.9396144263726413,0.4584710504767621] (9,-1; 9,-1), time: 30.0788s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-1.0114684037124246,0.38282833892665585] (9,-1; 9,-1), time: 30.0621s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-1.050722342506671,0.36107452861126677] (9,-1; 9,-1), time: 30.1698s, #vars: 2293, #constrs: 1762, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(45, -1), (0, -1), (65, -1), (85, -1), (98, -1), (130, -1), (49, -1), (119, -1), (175, -1), (128, -1), (16, -1), (185, -1), (156, -1), (140, -1), (57, -1), (7, -1), (127, -1), (174, -1), (181, 1), (83, -1), (158, -1), (171, -1), (58, -1), (24, -1), (20, -1), (62, -1), (149, -1), (195, -1), (22, -1), (178, -1), (111, -1), (104, -1), (179, -1), (69, 1), (27, -1), (196, -1), (165, -1), (94, -1), (146, 1), (8, -1), (54, -1), (154, -1), (84, -1), (37, -1), (56, -1), (36, 1), (101, -1), (134, -1), (90, -1), (67, -1), (192, -1), (61, -1), (31, -1), (129, 1), (81, -1), (74, 1), (169, -1), (95, -1), (47, -1), (39, -1), (138, -1), (139, -1), (194, -1), (72, -1), (52, -1), (120, -1), (107, -1), (109, 1), (168, 1), (11, -1), (161, 1), (93, -1), (68, -1), (113, -1), (151, 1), (152, -1), (38, -1), (50, 1), (148, -1), (79, -1), (137, -1), (182, -1), (100, 1), (142, -1), (132, -1), (96, 1), (108, -1), (176, 1), (126, -1), (123, -1), (153, -1), (189, 1), (105, 1), (198, -1), (191, -1), (4, 1), (18, -1), (41, -1), (3, -1), (46, -1), (66, -1), (102, -1), (125, -1), (114, 1), (34, 1), (32, 1), (51, -1), (193, 1), (103, -1), (99, 1), (71, -1), (28, 1), (116, -1), (30, 1), (40, -1), (197, -1), (131, 1), (135, 1)]
best_l after optimization: 19.096019744873047 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 4.639697074890137
alpha-CROWN with intermediate bounds by MIP: tensor([[ 3.71266460,  0.16450310,  1.66361523,  1.79749107,  4.09651279,
          1.78179145, -0.01659131,  2.52725697,  3.36877537]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 752.9716796875, ub improved 895.2185668945312, time 258.7761
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=10, bias=True) 5 12 torch.Size([9, 1])
MIP finished with 642.4448025226593s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 22.691570281982422 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.028603076934814453
alpha-CROWN with intermediate bounds improved by MIP: tensor([[3.99884319, 0.58149624, 2.06118822, 2.21969724, 4.45877647, 2.16890907,
         0.41728735, 3.00122070, 3.78415012]], device='cuda:0') None
refined global lb: tensor([[3.99884319],
        [0.58149624],
        [2.06118822],
        [2.21969724],
        [4.45877647],
        [2.16890907],
        [0.41728735],
        [3.00122070],
        [3.78415012]], device='cuda:0') min: tensor(0.41728735, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 652.4484 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):652.441860581623, max time: 652.4483850002289
mean time for verified SAFE instances(total 1): 652.4483850002289, max time: 652.4483850002289
safe-incomplete-refine (total 1), index: [0]
