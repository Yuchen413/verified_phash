Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_100
  path: mnist_9_100_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 759
  end: 760
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.026
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 14:37:51 2023 on zeratul
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226457)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_100]_start=759_end=760_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 759 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundParams(name=/9, inputs=[])
  (/10): BoundParams(name=/10, inputs=[])
  (/11): BoundParams(name=/11, inputs=[])
  (/12): BoundParams(name=/12, inputs=[])
  (/13): BoundParams(name=/13, inputs=[])
  (/14): BoundParams(name=/14, inputs=[])
  (/15): BoundParams(name=/15, inputs=[])
  (/16): BoundParams(name=/16, inputs=[])
  (/17): BoundParams(name=/17, inputs=[])
  (/18): BoundParams(name=/18, inputs=[])
  (/19): BoundShape(name=/19, inputs=[/0])
  (/20): BoundConstant(name=/20, inputs=[])
  (/21): BoundGather(name=/21, inputs=[/19, /20])
  (/22): BoundConstant(name=/22, inputs=[])
  (/23): BoundUnsqueeze(name=/23, inputs=[/21])
  (/24): BoundUnsqueeze(name=/24, inputs=[/22])
  (/25): BoundConcat(name=/25, inputs=[/23, /24])
  (/26): BoundReshape(name=/26, inputs=[/0, /25])
  (/input): BoundLinear(name=/input, inputs=[/26, /1, /2])
  (/28): BoundRelu(name=/28, inputs=[/input])
  (/input.3): BoundLinear(name=/input.3, inputs=[/28, /3, /4])
  (/30): BoundRelu(name=/30, inputs=[/input.3])
  (/input.7): BoundLinear(name=/input.7, inputs=[/30, /5, /6])
  (/32): BoundRelu(name=/32, inputs=[/input.7])
  (/input.11): BoundLinear(name=/input.11, inputs=[/32, /7, /8])
  (/34): BoundRelu(name=/34, inputs=[/input.11])
  (/input.15): BoundLinear(name=/input.15, inputs=[/34, /9, /10])
  (/36): BoundRelu(name=/36, inputs=[/input.15])
  (/input.19): BoundLinear(name=/input.19, inputs=[/36, /11, /12])
  (/38): BoundRelu(name=/38, inputs=[/input.19])
  (/input.23): BoundLinear(name=/input.23, inputs=[/38, /13, /14])
  (/40): BoundRelu(name=/40, inputs=[/input.23])
  (/input.27): BoundLinear(name=/input.27, inputs=[/40, /15, /16])
  (/42): BoundRelu(name=/42, inputs=[/input.27])
  (/43): BoundLinear(name=/43, inputs=[/42, /17, /18])
)
Model prediction is: tensor([[-3.56774306, -2.49215603, -2.09614182,  0.89472836,  1.83690476,
          0.54328573, -4.33675575,  1.86856914,  1.38485718,  7.56602383]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [31]; unstable size 31; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 55 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 84 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [55]; unstable size 55; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 84 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [84]; unstable size 84; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-260.06884766, -266.61032104, -317.12698364, -290.31356812,
         -228.95268250, -264.07080078, -340.32992554, -267.43838501,
         -310.43157959]], device='cuda:0') None
best_l after optimization: -1156.508056640625
alpha/beta optimization time: 13.520721197128296
initial alpha-CROWN bounds: tensor([[-109.20370483, -122.96379852, -150.28373718, -136.52481079,
         -101.66331482, -118.53816223, -153.50105286, -121.61531830,
         -142.21418762]], device='cuda:0')
Worst class: (+ rhs) -153.5010528564453
Split layers:
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [31]; unstable size 31; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 55 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 84 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [55]; unstable size 55; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 84 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [84]; unstable size 84; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2024-02-29
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_94', 'lay4_64', 'lay4_16', 'lay4_68', 'lay4_93', 'lay4_46', 'lay4_33', 'lay4_60', 'lay4_52', 'lay4_38', 'lay4_8', 'lay4_26', 'lay4_90', 'lay4_18', 'lay4_61', 'lay4_41', 'lay4_55', 'lay4_23', 'lay4_92', 'lay4_97', 'lay4_72', 'lay4_98', 'lay4_63', 'lay4_7', 'lay4_11', 'lay4_30', 'lay4_91', 'lay4_39', 'lay4_54', 'lay4_40', 'lay4_36', 'lay4_89', 'lay4_85', 'lay4_99', 'lay4_34', 'lay4_86', 'lay4_3', 'lay4_80', 'lay4_22', 'lay4_69', 'lay4_87', 'lay4_27', 'lay4_48', 'lay4_75', 'lay4_88', 'lay4_25', 'lay4_44', 'lay4_5', 'lay4_83', 'lay4_12', 'lay4_10', 'lay4_53', 'lay4_74', 'lay4_58'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/Verifier_Development/complete_verifier/data_utils.py:257: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_90, [-inf,inf]=>[-0.6413640358048394,1.114178054653152] (2,-1; 2,-1), time: 0.8856s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_94, [-inf,inf]=>[-1.1388351923019147,0.31364996490150254] (2,-1; 2,-1), time: 1.1328s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-0.3917236027508079,0.8566154254315954] (2,-1; 2,-1), time: 1.1594s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[-0.30177985498865123,0.5571348930776858] (2,-1; 2,-1), time: 1.1767s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_46, [-inf,inf]=>[-0.4301893049175282,0.7596463242573481] (2,-1; 2,-1), time: 1.3405s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.7198007920450414,0.45797760648927827] (2,-1; 2,-1), time: 1.4017s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5798s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-1.1355678183042115,0.2844131075479509] (2,-1; 2,-1), time: 1.7498s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_18, [-inf,inf]=>[-0.6986271176619863,0.01552396615663211] (2,-1; 2,-1), time: 2.0325s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_64, [-inf,inf]=>[-0.6240698772918764,0.2901919575936624] (2,-1; 2,-1), time: 2.1456s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_16, [-inf,inf]=>[-0.9513927809947946,0.03491648285306275] (2,-1; 2,-1), time: 2.1916s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_72, [-inf,inf]=>[-0.5622564659970586,0.5504978402159028] (2,-1; 2,-1), time: 0.9374s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_60, [-inf,inf]=>[-0.49533566915441335,0.4441727946000265] (2,-1; 2,-1), time: 2.3282s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2783s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_97, [-inf,inf]=>[-0.34701070871727924,0.7164074730027157] (2,-1; 2,-1), time: 1.2964s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2817s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-0.27676541265518234,0.9257234431714635] (2,-1; 2,-1), time: 1.3365s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-0.8505004389065964,0.044568436533935184] (2,-1; 2,-1), time: 2.7756s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.28731944748040705,0.4141292363396245] (2,-1; 2,-1), time: 2.8419s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.3667795538194239,0.20902866096624467] (2,-1; 2,-1), time: 3.0055s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2945s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_68, [-inf,inf]=>[-0.5299964045037215,0.33754252266022083] (2,-1; 2,-1), time: 3.2282s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_55, [-inf,inf]=>[-0.11041565307345293,1.014996756111267] (2,-1; 2,-1), time: 2.4280s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[1e-05,1.1832869926330218] (15,-1; 2,-1), time: 0.5742s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2766s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_89, [-inf,inf]=>[-0.7319218086957385,0.5130452574000461] (2,-1; 2,-1), time: 1.0574s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.681003746477221,0.003498035030287283] (2,-1; 2,-1), time: 3.6797s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_92, [-inf,inf]=>[-0.21203177017857336,0.47524076633533396] (2,-1; 2,-1), time: 2.6086s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.9359817671704533,0.026469017641021907] (2,-1; 2,-1), time: 2.1029s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-1.0501126008541208,0.05586684253805181] (2,-1; 2,-1), time: 1.7805s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2630s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-0.8359727505355373,0.07093455733288431] (2,-1; 2,-1), time: 1.4883s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[1e-05,0.7059686851320941] (15,-1; 2,-1), time: 1.1673s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2713s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.2681896200713754,0.4802496731906111] (2,-1; 2,-1), time: 2.5239s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_91, [-inf,inf]=>[-0.3047110332669663,0.6990041916437472] (2,-1; 2,-1), time: 2.3528s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_54, [-inf,inf]=>[-0.31743546694707075,0.7619939059936591] (2,-1; 2,-1), time: 2.6874s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-0.2827008107669655,0.44367446516774073] (2,-1; 2,-1), time: 1.9480s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3434s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2791s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-0.11629802722162834,0.7902224940729684] (2,-1; 2,-1), time: 2.0808s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_36, [-inf,inf]=>[-0.9939711692787107,0.13617556705067263] (2,-1; 2,-1), time: 3.0397s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.26886963363443434,0.5674391758304002] (2,-1; 2,-1), time: 2.2044s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[1e-05,1.1197317109328153] (15,-1; 2,-1), time: 1.1556s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_10, [-inf,inf]=>[-0.46430465692584355,0.9017356130223146] (2,-1; 2,-1), time: 1.8943s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[1e-05,0.8862728121892616] (15,-1; 2,-1), time: 2.0905s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-0.1261551935127346,0.5356746099764721] (2,-1; 2,-1), time: 2.7230s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.6095694058953879,0.05861085687374586] (2,-1; 2,-1), time: 3.5898s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_25, [-inf,inf]=>[1e-05,0.8038287581276056] (15,-1; 2,-1), time: 2.5925s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_12, [-inf,inf]=>[-0.3076518838046683,0.511821937768914] (2,-1; 2,-1), time: 2.3669s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-0.668852190186663,0.1500566232869279] (2,-1; 2,-1), time: 2.8094s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-0.549600159141776,0.026695617176525216] (2,-1; 2,-1), time: 3.2645s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[1e-05,0.7350639771903414] (15,-1; 2,-1), time: 2.0492s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.43525561635847143,0.06780090488952153] (2,-1; 2,-1), time: 3.5993s, #vars: 1047, #constrs: 293, improved: True
PGD done for relu layer 2
MIP improved 54 nodes out of 54 unstable nodes, lb improved 13.114739418029785, ub improved 10.266728401184082, time 9.7057
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_39', 'lay6_55', 'lay6_34', 'lay6_30', 'lay6_64', 'lay6_60', 'lay6_89', 'lay6_91', 'lay6_74', 'lay6_36', 'lay6_71', 'lay6_42', 'lay6_28', 'lay6_4', 'lay6_93', 'lay6_85', 'lay6_31', 'lay6_8', 'lay6_56', 'lay6_61', 'lay6_77', 'lay6_72', 'lay6_75', 'lay6_97', 'lay6_43', 'lay6_15', 'lay6_88', 'lay6_65', 'lay6_33', 'lay6_17', 'lay6_51', 'lay6_83', 'lay6_32', 'lay6_96', 'lay6_0', 'lay6_68', 'lay6_11', 'lay6_50', 'lay6_99', 'lay6_73', 'lay6_69', 'lay6_81', 'lay6_7', 'lay6_57', 'lay6_13', 'lay6_78', 'lay6_94', 'lay6_37', 'lay6_62', 'lay6_63', 'lay6_98', 'lay6_16', 'lay6_76', 'lay6_84', 'lay6_35', 'lay6_40', 'lay6_1', 'lay6_38', 'lay6_26', 'lay6_41', 'lay6_95', 'lay6_82', 'lay6_66', 'lay6_70', 'lay6_46', 'lay6_14', 'lay6_79', 'lay6_54', 'lay6_27', 'lay6_58', 'lay6_48', 'lay6_29', 'lay6_5', 'lay6_86', 'lay6_20', 'lay6_92', 'lay6_49'] filter: 1.0
Solving MIP for lay6_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2925s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3007s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3186s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2853s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_89, [-inf,inf]=>[1e-05,0.9231044680099866] (15,-1; 2,-1), time: 4.8698s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5504s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.9277168518437472,1.163557319440006] (2,-1; 2,-1), time: 5.9071s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.45041886827529726,0.9018121808455405] (2,-1; 2,-1), time: 5.6161s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.7020s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-0.19012703319456178,0.939649837284441] (2,-1; 2,-1), time: 6.9385s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.30913771500812454,0.2566227872098592] (2,-1; 2,-1), time: 7.4233s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6439s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-0.4170992350706705,0.5684979297339077] (2,-1; 2,-1), time: 8.0011s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-0.7424977246754196,0.4662934186146054] (2,-1; 2,-1), time: 8.0598s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0394s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2937s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3131s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2474s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_56, [-inf,inf]=>[-0.4246354636970292,0.3825061698088511] (2,-1; 2,-1), time: 8.2788s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3043s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5173s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-0.10600433970784198,0.5397598477570671] (2,-1; 2,-1), time: 9.7897s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[-0.6090833389453039,0.067552313787671] (2,-1; 2,-1), time: 10.0383s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0043s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-0.058449395182395635,1.1078924604872842] (2,-1; 2,-1), time: 5.7086s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-0.3966010058344648,0.2611960696829833] (2,-1; 2,-1), time: 12.4606s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0798s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.0202s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.8939s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2937s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2109s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5444s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.7475157189798085,0.100935103410491] (2,-1; 2,-1), time: 13.8919s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6182s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[-0.3611577126783655,0.4709276012424087] (2,-1; 2,-1), time: 7.5697s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-0.02150903259788502,0.36296686859670907] (2,-1; 2,-1), time: 9.2130s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.05163423337169322,1.2280081746332732] (2,-1; 2,-1), time: 8.0814s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.27466192662919775,0.2729294080115924] (2,-1; 9,-1), time: 17.9026s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[-0.45027379459756206,0.47376098693384927] (2,-1; 2,-1), time: 10.6438s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3133s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1730s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[1e-05,1.2863802193221532] (15,-1; 2,-1), time: 5.5979s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[-0.43517604529552906,0.15621885414100548] (2,-1; 2,-1), time: 9.5653s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-0.30690279511516805,0.11977002359934082] (2,-1; 2,-1), time: 20.2830s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[1e-05,2.5093597926706876] (15,-1; 2,-1), time: 3.4520s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.2692948039031238,0.3778552384862607] (2,-1; 2,-1), time: 8.2256s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-0.41910260480135175,0.41892404719827453] (2,-1; 2,-1), time: 15.3422s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_40, [-inf,inf]=>[1e-05,0.6399200445865597] (15,-1; 2,-1), time: 4.3591s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.523730674524537,0.18698842837007107] (2,-1; 2,-1), time: 13.0473s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_38, [-inf,inf]=>[1e-05,1.5269306813172134] (15,-1; 2,-1), time: 4.1746s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7239s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5599s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[1e-05,1.032756522987905] (15,-1; 2,-1), time: 4.6791s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.342941334092412,0.08019958241919453] (2,-1; 2,-1), time: 18.9978s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2985s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3002s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_82, [-inf,inf]=>[1e-05,1.224622349285365] (15,-1; 2,-1), time: 3.4347s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[-0.42920515062574743,0.23189083529744725] (2,-1; 2,-1), time: 7.3108s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[1e-05,2.1250048943450635] (15,-1; 2,-1), time: 3.8220s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.8060s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.3765s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_16, [-inf,inf]=>[-0.1718052357208913,0.43372488469387427] (2,-1; 2,-1), time: 10.3567s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[1e-05,1.5734079646179004] (15,-1; 2,-1), time: 1.7738s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[1e-05,0.5617786479270855] (15,-1; 2,-1), time: 13.4537s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.4963926132783197,0.3861802014431332] (2,-1; 2,-1), time: 7.6828s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4099s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[1e-05,1.2395099881841978] (15,-1; 2,-1), time: 3.2834s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_66, [-inf,inf]=>[1e-05,0.8023016237226124] (15,-1; 2,-1), time: 6.9320s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_63, [-inf,inf]=>[-0.010481577772497513,0.8964101851717922] (2,-1; 2,-1), time: 15.0027s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.6631542315593757] (15,-1; 2,-1), time: 5.5296s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[1e-05,1.043262576887195] (15,-1; 2,-1), time: 4.5194s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[-0.08016491800181519,0.9835727833452229] (2,-1; 2,-1), time: 8.6459s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-0.4420975508623969,0.12065913042720457] (9,-1; 2,-1), time: 22.3295s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[1e-05,0.7045058971713649] (15,-1; 2,-1), time: 7.8797s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.009263317026755391,0.6409334039738671] (2,-1; 2,-1), time: 11.1891s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[-0.12681342278856547,0.4803695492975867] (2,-1; 2,-1), time: 12.3173s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.4382735469097094,0.06742028208374863] (9,-1; 9,-1), time: 30.0536s, #vars: 1225, #constrs: 510, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 1 has unstable to stable neurons: [(23, -1), (30, -1), (39, -1), (99, 1), (34, -1), (86, 1), (22, -1), (27, -1), (25, 1), (44, -1), (5, -1), (83, 1), (53, 1), (74, -1), (58, 1)]
best_l after optimization: -578.0165405273438
beta sum per layer: []
alpha/beta optimization time: 15.934783935546875
alpha-CROWN with intermediate bounds by MIP: tensor([[-54.40856552, -60.99461365, -75.45505524, -68.77690887, -50.71854782,
         -59.16073608, -76.05348206, -60.97566986, -71.47296906]],
       device='cuda:0') None
MIP improved 77 nodes out of 77 unstable nodes, lb improved 21.09748649597168, ub improved 30.43840789794922, time 44.1670
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_71', 'lay8_19', 'lay8_75', 'lay8_7', 'lay8_87', 'lay8_22', 'lay8_33', 'lay8_24', 'lay8_89', 'lay8_28', 'lay8_59', 'lay8_88', 'lay8_39', 'lay8_34', 'lay8_20', 'lay8_40', 'lay8_15', 'lay8_60', 'lay8_67', 'lay8_53', 'lay8_66', 'lay8_52', 'lay8_63', 'lay8_78', 'lay8_93', 'lay8_21', 'lay8_81', 'lay8_42', 'lay8_41', 'lay8_2', 'lay8_4', 'lay8_57', 'lay8_58', 'lay8_74', 'lay8_0', 'lay8_62', 'lay8_65', 'lay8_54', 'lay8_38', 'lay8_95', 'lay8_3', 'lay8_64', 'lay8_50', 'lay8_90', 'lay8_72', 'lay8_11', 'lay8_98', 'lay8_16', 'lay8_48', 'lay8_27', 'lay8_25', 'lay8_13', 'lay8_96', 'lay8_30', 'lay8_91', 'lay8_49', 'lay8_69', 'lay8_6', 'lay8_43', 'lay8_76', 'lay8_79', 'lay8_94', 'lay8_10', 'lay8_99', 'lay8_44', 'lay8_37', 'lay8_17', 'lay8_35', 'lay8_82', 'lay8_26', 'lay8_12', 'lay8_77', 'lay8_1', 'lay8_8', 'lay8_80', 'lay8_68', 'lay8_83', 'lay8_85', 'lay8_5', 'lay8_55', 'lay8_70', 'lay8_9', 'lay8_92', 'lay8_32', 'lay8_51', 'lay8_56', 'lay8_73', 'lay8_18', 'lay8_61', 'lay8_31', 'lay8_23', 'lay8_47', 'lay8_84', 'lay8_36', 'lay8_86', 'lay8_14', 'lay8_29', 'lay8_46'] filter: 1.0
Solving MIP for lay8_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3677s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3847s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4209s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9091s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9535s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4021s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0752s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4326s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.1525s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1226s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.0142s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.3152s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-1.1193035816674524,1.0670101885463183] (2,-1; 2,-1), time: 15.3168s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-0.5793584979937627,0.456247352309624] (2,-1; 2,-1), time: 19.8492s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.3626710066494477,0.804550970601799] (2,-1; 9,-1), time: 19.8531s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3530s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3606s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.8457s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3744s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3857s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.4743007391684801,0.17267035893816643] (2,-1; 9,-1), time: 21.8140s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-0.5281197454939659,0.01920873284644337] (2,-1; 9,-1), time: 24.9321s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-0.751352932079823,0.048806460233720136] (2,-1; 9,-1), time: 25.1779s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3476s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3541s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3847s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-0.2643194482796947,0.5650362579887054] (2,-1; 9,-1), time: 26.7423s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.8310780096452118,0.5968840666068914] (9,-1; 2,-1), time: 27.7838s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-1.2507925652055338,0.01868187492680879] (2,-1; 9,-1), time: 26.7793s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[-0.5446224935323084,0.3583680448688255] (2,-1; 2,-1), time: 26.7360s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-0.6124857131347438,1.7952431786983698] (9,-1; 2,-1), time: 29.8842s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[-0.47616570292860677,0.12571847725463178] (9,-1; 9,-1), time: 30.0152s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-0.29202836143593136,0.22513726103371098] (9,-1; 9,-1), time: 30.0135s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.5221784563423675,0.014299190732429178] (9,-1; 9,-1), time: 30.0446s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.1921s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-0.8859973209824714,0.18255243992747638] (9,-1; 2,-1), time: 21.6083s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3362s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-0.5851245500717192,0.4304236348016971] (2,-1; 9,-1), time: 17.9473s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-0.9333345301148693,0.06713394298105745] (2,-1; 2,-1), time: 13.6449s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3172s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-0.4395366212357678,0.14878529998298365] (9,-1; 9,-1), time: 30.2289s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3287s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8758s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-0.1651010903782254,1.0239926282261935] (2,-1; 2,-1), time: 12.3298s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[1e-05,1.6423220661324578] (15,-1; 2,-1), time: 11.5602s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3470s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-0.8104624883296777,0.2078476538572477] (9,-1; 2,-1), time: 23.6933s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[1e-05,1.5141063477905634] (15,-1; 2,-1), time: 9.5954s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.9472756271695735,0.10285784521632445] (9,-1; 2,-1), time: 20.3922s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[1e-05,1.7871202269181368] (15,-1; 2,-1), time: 8.1761s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3375s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-0.29708419510596074,0.7483324992006948] (2,-1; 9,-1), time: 26.5676s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.3735s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-0.6802654631260047,0.5383297702482616] (2,-1; 2,-1), time: 17.8422s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8082s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8807s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-1.0231458647071647,0.20089007716004373] (9,-1; 2,-1), time: 23.9217s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-0.4369941361415871,0.2108039227870775] (9,-1; 9,-1), time: 30.0164s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.5237783249323152,0.6829640676892206] (9,-1; 2,-1), time: 22.9726s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[1e-05,0.8343731459832098] (15,-1; 2,-1), time: 5.4809s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3318s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.7689s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_77, [-inf,inf]=>[1e-05,2.022533100489361] (15,-1; 2,-1), time: 7.4431s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.5319896306917864,0.013143243024280327] (2,-1; 9,-1), time: 29.0289s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4412s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[1e-05,0.8020261558669781] (15,-1; 2,-1), time: 17.8478s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[1e-05,1.95090926678243] (15,-1; 2,-1), time: 10.8912s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0348s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3480s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3311s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.5574s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3425s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3365s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-1.1473808360197695,0.22753426735645077] (9,-1; 2,-1), time: 18.8476s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-0.29665080396621357,0.2898643317058383] (9,-1; 9,-1), time: 30.0201s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-0.29476633506860833,0.4039974089631254] (9,-1; 2,-1), time: 24.4370s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3363s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[1e-05,1.94606466711668] (15,-1; 2,-1), time: 3.8323s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6125s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.0445s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3734s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3635s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[1e-05,1.931794191424403] (15,-1; 2,-1), time: 6.3077s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2763s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.064087998163268] (15,-1; 2,-1), time: 7.1014s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.0020343411616537085,0.8197386832514076] (9,-1; 2,-1), time: 25.4778s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[1e-05,0.938030586250431] (15,-1; 9,-1), time: 15.9709s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-0.07258695788224918,0.3752364547013987] (9,-1; 2,-1), time: 26.5114s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[1e-05,1.0154623648753978] (15,-1; 9,-1), time: 15.7131s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-0.2968381525770935,0.25678554242964335] (9,-1; 9,-1), time: 30.0175s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[1e-05,0.7714224198340794] (15,-1; 9,-1), time: 19.0819s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.08760380187526157,0.3665080041246681] (9,-1; 9,-1), time: 30.0941s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-0.6833370405512914,0.013079747059877337] (9,-1; 9,-1), time: 30.0157s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-0.3480516638235788,0.20816578907526542] (9,-1; 9,-1), time: 30.0239s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.725436856087815,0.12575015493974198] (9,-1; 9,-1), time: 30.0155s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.3184084340957691,0.6525581137141792] (2,-1; 9,-1), time: 25.5503s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.2135039373784585,0.6089990532864228] (9,-1; 2,-1), time: 21.0261s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-0.44341784032734305,0.17837760409377115] (9,-1; 9,-1), time: 30.0092s, #vars: 1389, #constrs: 706, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 2 has unstable to stable neurons: [(55, -1), (89, 1), (91, -1), (74, -1), (28, -1), (93, -1), (31, -1), (77, -1), (97, -1), (15, -1), (33, -1), (17, -1), (51, -1), (83, -1), (32, -1), (0, -1), (11, -1), (69, -1), (81, -1), (57, -1), (13, -1), (78, 1), (37, -1), (62, 1), (98, -1), (76, -1), (84, -1), (40, 1), (1, 1), (38, 1), (26, 1), (95, 1), (82, 1), (66, 1), (46, -1), (14, -1), (79, -1), (27, -1), (58, 1), (48, -1), (29, 1), (5, 1), (20, 1), (92, 1), (49, -1)]
best_l after optimization: -297.00897216796875
beta sum per layer: []
alpha/beta optimization time: 15.322750806808472
alpha-CROWN with intermediate bounds by MIP: tensor([[-27.79672050, -30.94772720, -38.99492264, -35.89634705, -25.92512703,
         -30.30281830, -38.36617661, -31.56843376, -37.21072769]],
       device='cuda:0') None
MIP improved 98 nodes out of 98 unstable nodes, lb improved 44.6588134765625, ub improved 72.80268096923828, time 86.7180
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_37', 'lay10_23', 'lay10_80', 'lay10_40', 'lay10_14', 'lay10_79', 'lay10_35', 'lay10_1', 'lay10_74', 'lay10_72', 'lay10_46', 'lay10_42', 'lay10_22', 'lay10_91', 'lay10_33', 'lay10_51', 'lay10_63', 'lay10_5', 'lay10_99', 'lay10_30', 'lay10_34', 'lay10_13', 'lay10_73', 'lay10_19', 'lay10_11', 'lay10_17', 'lay10_88', 'lay10_93', 'lay10_94', 'lay10_57', 'lay10_15', 'lay10_44', 'lay10_26', 'lay10_96', 'lay10_47', 'lay10_65', 'lay10_89', 'lay10_71', 'lay10_2', 'lay10_41', 'lay10_27', 'lay10_48', 'lay10_67', 'lay10_21', 'lay10_77', 'lay10_12', 'lay10_59', 'lay10_3', 'lay10_50', 'lay10_39', 'lay10_8', 'lay10_76', 'lay10_29', 'lay10_6', 'lay10_86', 'lay10_81', 'lay10_97', 'lay10_54', 'lay10_60', 'lay10_0', 'lay10_68', 'lay10_56', 'lay10_70', 'lay10_43', 'lay10_98', 'lay10_10', 'lay10_53', 'lay10_52', 'lay10_95', 'lay10_25', 'lay10_84', 'lay10_75', 'lay10_55', 'lay10_92', 'lay10_9', 'lay10_36', 'lay10_24', 'lay10_18', 'lay10_66', 'lay10_31', 'lay10_38', 'lay10_69', 'lay10_78', 'lay10_85', 'lay10_20', 'lay10_82', 'lay10_62', 'lay10_49', 'lay10_64', 'lay10_28', 'lay10_4', 'lay10_61', 'lay10_45', 'lay10_90', 'lay10_16', 'lay10_87', 'lay10_58', 'lay10_7', 'lay10_83', 'lay10_32'] filter: 1.0
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4794s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1495s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4794s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4693s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.4681s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.1658s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4575s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-0.6702792292473725,0.9143725605936931] (2,-1; 9,-1), time: 24.0899s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4797s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-0.48917479489850557,0.22433585501512518] (9,-1; 9,-1), time: 30.0113s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-0.5389385462300843,0.31994698144491235] (9,-1; 9,-1), time: 30.0190s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.1801903338242398,0.827138455712887] (9,-1; 9,-1), time: 30.0206s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-0.6182494092386648,0.5043605710778203] (9,-1; 9,-1), time: 30.0141s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-0.6241482601420942,0.04261848296140375] (9,-1; 9,-1), time: 30.0258s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-0.9833331779668918,0.00037126413608670083] (9,-1; 9,-1), time: 30.0252s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-0.1118125070864647,0.7379275428514366] (9,-1; 9,-1), time: 30.0302s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-0.4151905163377238,0.4978234521254659] (9,-1; 9,-1), time: 30.0325s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.74469760001926,0.8255826395428391] (9,-1; 9,-1), time: 30.0361s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-0.818089895163946,0.11639086265245556] (9,-1; 9,-1), time: 30.0511s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-0.5349801609676463,0.20188906636387613] (9,-1; 9,-1), time: 30.0858s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4747s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5029s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-0.48500815132662084,0.6222785525334326] (9,-1; 9,-1), time: 30.0406s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-0.3995974101238955,0.2915333903252169] (9,-1; 9,-1), time: 30.0321s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9740s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.2416s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-0.5945991568923618,0.05224196342235856] (9,-1; 9,-1), time: 30.0686s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.7029672805980053,0.17580862215889306] (9,-1; 9,-1), time: 30.0155s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.5088s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[1e-05,1.1410054156756952] (15,-1; 9,-1), time: 15.3719s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[1e-05,1.783665351756126] (15,-1; 9,-1), time: 15.4703s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[1e-05,1.6974539810190796] (15,-1; 2,-1), time: 10.7028s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.4636s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.318365282833937,0.46936953213819665] (9,-1; 9,-1), time: 30.0166s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.39650752151739455,0.05612697498942862] (9,-1; 9,-1), time: 30.0180s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-0.33568011851027085,0.7013004949554252] (9,-1; 9,-1), time: 30.0119s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.3058007721784354,0.9816599480080183] (9,-1; 9,-1), time: 30.0164s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-0.4891798166944079,0.13065511511503156] (9,-1; 9,-1), time: 30.0292s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-0.9042596729199208,0.36707812539143253] (9,-1; 9,-1), time: 30.0163s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-0.5504948879586945,0.5567512099387274] (9,-1; 9,-1), time: 30.0380s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4286s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-0.6169143136696673,0.0426118869435415] (9,-1; 9,-1), time: 30.0122s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-0.30687607616191964,0.5056169228333098] (9,-1; 9,-1), time: 30.0142s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4324s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-0.41354442360050986,0.12612788456251645] (9,-1; 9,-1), time: 30.0245s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-0.07792943454212742,0.791355379425282] (9,-1; 9,-1), time: 30.0426s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-0.17573731697322256,0.4271757706873075] (9,-1; 9,-1), time: 30.0190s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,1.3941206912125264] (15,-1; 9,-1), time: 15.5037s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-0.32722712053033415,0.19099221700815197] (9,-1; 9,-1), time: 30.2413s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.6457s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[1e-05,1.3678648583354291] (15,-1; 9,-1), time: 17.1449s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.2106362835375191,0.4988446403873456] (9,-1; 9,-1), time: 30.0765s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-0.6536712639836063,0.23131948622899057] (9,-1; 9,-1), time: 30.0936s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[1e-05,1.364157619451104] (15,-1; 9,-1), time: 15.4050s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-0.6333663502943703,0.0294094070868166] (9,-1; 9,-1), time: 30.0269s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-0.8155381399887403,0.823586220817222] (9,-1; 9,-1), time: 30.0279s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.2930685222183118,0.19212848906139196] (9,-1; 9,-1), time: 30.0104s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-0.09240674143267331,0.8203929469533185] (9,-1; 9,-1), time: 30.0551s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[-0.4641117933341254,0.7375671145059178] (9,-1; 9,-1), time: 30.0695s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4040s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.406193513582011,0.7442610553405926] (9,-1; 9,-1), time: 30.0160s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-0.5270164532697232,0.5044804723188383] (9,-1; 9,-1), time: 30.0477s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.3213885715058852,0.5493208968833434] (9,-1; 9,-1), time: 30.0193s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4974s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[1e-05,1.3842443884105338] (15,-1; 9,-1), time: 15.5153s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.35114430654722617,0.5003680574838087] (9,-1; 9,-1), time: 30.0133s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[1e-05,1.4773602903503933] (15,-1; 2,-1), time: 8.7538s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-0.43488668076744125,0.21533154403670982] (9,-1; 9,-1), time: 30.0090s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-0.5830328340921005,0.18601470763659844] (9,-1; 9,-1), time: 30.3505s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3949s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9786s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,1.8672766537515735] (15,-1; 9,-1), time: 15.5674s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[1e-05,0.7947099250832855] (15,-1; 9,-1), time: 15.4717s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4840s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-0.2275386159824664,0.7229651336521323] (9,-1; 9,-1), time: 30.0124s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,1.070091518501451] (15,-1; 9,-1), time: 15.4352s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.5057902850904422,0.5186280890147973] (9,-1; 9,-1), time: 30.0387s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8814s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[1e-05,1.5147791168207347] (15,-1; 9,-1), time: 22.1825s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.7642692385725052,0.08374716701812124] (9,-1; 9,-1), time: 30.0507s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-0.0666720153975702,0.5658115537035101] (9,-1; 9,-1), time: 30.0141s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[-0.011729899897604913,0.6773026177639644] (9,-1; 9,-1), time: 30.0257s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-0.2045240923409713,0.3948076721655466] (9,-1; 9,-1), time: 30.0118s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-0.26203829481071295,0.29056155919865445] (9,-1; 9,-1), time: 30.0862s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.004708152661130668,1.729457394219162] (9,-1; 9,-1), time: 30.0365s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-0.5223669724620658,0.4348281616748385] (9,-1; 9,-1), time: 30.0129s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4524s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.2096s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.2928s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[1e-05,0.7737939006818616] (15,-1; 9,-1), time: 18.6326s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-0.46663973047100277,0.11274671492262205] (9,-1; 9,-1), time: 30.0180s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[1e-05,0.7113119760857016] (15,-1; 9,-1), time: 15.3977s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[1e-05,1.3820592070610673] (15,-1; 9,-1), time: 15.3511s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-0.4477824751196359,0.6317830909421845] (9,-1; 9,-1), time: 30.0102s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-0.2837502422563304,0.3261994306408158] (9,-1; 9,-1), time: 30.0382s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[1e-05,2.274579592864059] (15,-1; 2,-1), time: 14.0774s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-0.6047465999519359,0.06429468383971233] (9,-1; 9,-1), time: 30.0156s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.29878537803313265,0.5195731758288837] (9,-1; 9,-1), time: 30.0119s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-0.6618776847489943,0.2630729094735549] (9,-1; 9,-1), time: 30.0180s, #vars: 1569, #constrs: 926, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[1e-05,0.478438862241427] (15,-1; 9,-1), time: 28.8498s, #vars: 1569, #constrs: 926, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 3 has unstable to stable neurons: [(19, -1), (87, -1), (33, -1), (88, -1), (20, -1), (60, -1), (67, -1), (53, -1), (66, -1), (63, -1), (93, -1), (21, -1), (42, -1), (2, -1), (4, -1), (58, -1), (74, -1), (54, -1), (95, -1), (3, -1), (16, 1), (27, -1), (25, 1), (13, -1), (30, 1), (91, -1), (49, -1), (69, -1), (6, 1), (76, -1), (79, -1), (94, -1), (44, -1), (37, 1), (17, 1), (82, -1), (12, -1), (77, 1), (1, -1), (80, -1), (5, -1), (55, -1), (70, 1), (9, 1), (92, -1), (32, -1), (51, -1), (56, 1), (18, -1), (61, 1), (31, 1), (23, -1), (47, -1), (84, -1), (36, 1), (86, -1), (14, -1), (46, -1)]
best_l after optimization: -151.75759887695312
beta sum per layer: []
alpha/beta optimization time: 15.068746328353882
alpha-CROWN with intermediate bounds by MIP: tensor([[-13.98101139, -15.48102570, -20.01388168, -19.12759209, -12.92812920,
         -15.43251610, -18.62800980, -16.57099724, -19.59443665]],
       device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 131.1442413330078, ub improved 175.68043518066406, time 150.3642
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_24', 'lay12_31', 'lay12_98', 'lay12_59', 'lay12_63', 'lay12_0', 'lay12_87', 'lay12_83', 'lay12_46', 'lay12_29', 'lay12_35', 'lay12_4', 'lay12_96', 'lay12_61', 'lay12_68', 'lay12_81', 'lay12_72', 'lay12_62', 'lay12_23', 'lay12_50', 'lay12_51', 'lay12_69', 'lay12_67', 'lay12_95', 'lay12_15', 'lay12_45', 'lay12_60', 'lay12_99', 'lay12_88', 'lay12_48', 'lay12_53', 'lay12_58', 'lay12_75', 'lay12_27', 'lay12_34', 'lay12_66', 'lay12_64', 'lay12_3', 'lay12_94', 'lay12_97', 'lay12_20', 'lay12_32', 'lay12_85', 'lay12_11', 'lay12_28', 'lay12_8', 'lay12_43', 'lay12_33', 'lay12_57', 'lay12_54', 'lay12_41', 'lay12_25', 'lay12_37', 'lay12_80', 'lay12_77', 'lay12_39', 'lay12_49', 'lay12_1', 'lay12_18', 'lay12_92', 'lay12_86', 'lay12_40', 'lay12_38', 'lay12_55', 'lay12_19', 'lay12_42', 'lay12_52', 'lay12_14', 'lay12_90', 'lay12_79', 'lay12_22', 'lay12_30', 'lay12_76', 'lay12_13', 'lay12_10', 'lay12_7', 'lay12_26', 'lay12_5', 'lay12_91', 'lay12_84', 'lay12_17', 'lay12_2', 'lay12_65', 'lay12_70', 'lay12_9', 'lay12_12', 'lay12_89', 'lay12_71', 'lay12_47', 'lay12_21', 'lay12_74', 'lay12_36', 'lay12_82', 'lay12_6', 'lay12_78', 'lay12_73', 'lay12_93', 'lay12_16', 'lay12_56', 'lay12_44'] filter: 1.0
Solving MIP for lay12_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4749s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5323s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.5541s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.8084s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5011s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6219s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4654s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-0.8779618390062085,1.195997770607182] (9,-1; 9,-1), time: 30.0219s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-0.8363789912725345,0.3109422919099065] (9,-1; 9,-1), time: 30.0145s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-0.5573933110247462,1.0576621964283375] (9,-1; 9,-1), time: 30.0183s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-0.16684123608832302,1.6590676812673844] (9,-1; 9,-1), time: 30.0203s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-0.973083303473372,0.051988007417588404] (9,-1; 9,-1), time: 30.0159s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.5540178628324197,0.8442652174195966] (9,-1; 9,-1), time: 30.0230s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-1.290821289067306,0.23847182498368436] (9,-1; 9,-1), time: 30.0259s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[-0.5324780018963347,0.5842781997666793] (9,-1; 9,-1), time: 30.0160s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-0.5156242660313198,0.46733819360232876] (9,-1; 9,-1), time: 30.0341s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-0.7527472846112696,0.5122302797904759] (9,-1; 9,-1), time: 30.0183s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-1.0198215807666045,0.05543871770699964] (9,-1; 9,-1), time: 30.0368s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-0.9183025785129411,0.0946861629453422] (9,-1; 9,-1), time: 30.0582s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-0.43230985889596774,1.4018247108254056] (9,-1; 9,-1), time: 30.0524s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-1.013425883948768,0.04969880140109151] (9,-1; 9,-1), time: 30.0155s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.0305s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.7028s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-0.8850603131716095,0.09534473595343065] (9,-1; 9,-1), time: 30.0811s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[-0.5838865565485568,0.21338358485348255] (9,-1; 9,-1), time: 30.0112s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.2540s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2901s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.4118s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[-0.7012012307099219,0.22432174033841945] (9,-1; 9,-1), time: 30.0142s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-0.6202866471915865,0.4347633946091154] (9,-1; 9,-1), time: 30.0143s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.854520995450862,0.10588643051463693] (9,-1; 9,-1), time: 30.0219s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-0.5986166711578743,1.1228586668175056] (9,-1; 9,-1), time: 30.0144s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-0.7204402571828608,0.19131104321701828] (9,-1; 9,-1), time: 30.0145s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[-0.9365886704090401,0.23982624735969318] (9,-1; 9,-1), time: 30.0127s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-0.7511615855544947,0.04907237149831116] (9,-1; 9,-1), time: 30.0304s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-0.7277196117978181,0.20767998883138603] (9,-1; 9,-1), time: 30.0311s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-0.8287751709934414,0.18959945723817745] (9,-1; 9,-1), time: 30.0454s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4675s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[-0.6143935154202738,1.1213493566674366] (9,-1; 9,-1), time: 30.0119s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.6947610972498341,0.2135139893684937] (9,-1; 9,-1), time: 30.0083s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3612s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[1e-05,1.19328140334566] (15,-1; 9,-1), time: 23.9330s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[-0.03479997679137448,1.5291435416725678] (9,-1; 9,-1), time: 30.0097s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.9338s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.9893848093849237,0.08862133540935188] (9,-1; 9,-1), time: 30.0689s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-0.656167517531116,0.3795304657812306] (9,-1; 9,-1), time: 30.0107s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-1.1213974501868194,0.6673855666912907] (9,-1; 9,-1), time: 30.0427s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4604s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[1e-05,2.4923061433128315] (15,-1; 9,-1), time: 15.5387s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[1e-05,2.773498688238605] (15,-1; 9,-1), time: 15.5864s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4791s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[-0.5302759423457796,0.8372500958395798] (9,-1; 9,-1), time: 30.0134s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-1.0592563494219176,0.08234787410228338] (9,-1; 9,-1), time: 30.0124s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.11161442367755335,0.8826729079813108] (9,-1; 9,-1), time: 30.0244s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-0.6977147488141684,0.12479966862241128] (9,-1; 9,-1), time: 30.0405s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-0.6323688022598213,0.4036753964562597] (9,-1; 9,-1), time: 30.0128s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-0.9534993873128572,0.05498658028064448] (9,-1; 9,-1), time: 30.0434s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[-0.5161173621853431,0.35566416152486463] (9,-1; 9,-1), time: 30.0097s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.6313315089917735,0.2519123754461112] (9,-1; 9,-1), time: 30.0133s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-0.7485391638655375,0.06845499340539041] (9,-1; 9,-1), time: 30.0142s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.8163141351438943,0.6697840630175066] (9,-1; 9,-1), time: 30.0809s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-0.4632723557000725,1.37019310975979] (9,-1; 9,-1), time: 30.0140s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5498s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.9335s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4613s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-0.3466594391281049,0.5635926710538062] (9,-1; 9,-1), time: 30.0130s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[-0.5851706209982657,0.19603819322918334] (9,-1; 9,-1), time: 30.0090s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[1e-05,1.0711054122031876] (15,-1; 9,-1), time: 15.4955s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[1e-05,2.105202769099204] (15,-1; 9,-1), time: 15.5169s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[1e-05,1.2535975709494085] (15,-1; 9,-1), time: 17.1251s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-0.4747322874161914,0.34566343810305217] (9,-1; 9,-1), time: 30.0167s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4441s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[1e-05,1.7101854648353312] (15,-1; 9,-1), time: 15.5266s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.7019s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[-0.4288517712108142,0.6554933844721476] (9,-1; 9,-1), time: 30.0210s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[1e-05,1.1363491784897537] (15,-1; 9,-1), time: 16.6689s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[-0.6317564565100737,0.25299929672743693] (9,-1; 9,-1), time: 30.0139s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-0.5335349774521653,0.33410313612901527] (9,-1; 9,-1), time: 30.0139s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-0.7088123871773541,0.09904913348631776] (9,-1; 9,-1), time: 30.0117s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-0.5988141731720452,0.19033179290157884] (9,-1; 9,-1), time: 30.0136s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-0.7862780746476474,1.2828339188285924] (9,-1; 9,-1), time: 30.0214s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-0.5529859232538888,0.4347386807887792] (9,-1; 9,-1), time: 30.0155s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4990s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5331s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-0.39231672483265073,1.3469112282005054] (9,-1; 9,-1), time: 30.0166s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5146s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1636s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.07754204904360079,0.9553928224329192] (9,-1; 9,-1), time: 30.0141s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.9219268378273092,0.2295058091386358] (9,-1; 9,-1), time: 30.0115s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-0.7822415760513676,0.3670177661508035] (9,-1; 9,-1), time: 30.0487s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-0.0640318391868584,0.9011312245242915] (9,-1; 9,-1), time: 30.0951s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-0.7731736262832761,0.44625938312937247] (9,-1; 9,-1), time: 30.0101s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-0.31085677315393595,0.7436856820195148] (9,-1; 9,-1), time: 30.0200s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-1.2397762782067039,0.2450761738938698] (9,-1; 9,-1), time: 30.0440s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-0.5199691174824697,0.9598845851912333] (9,-1; 9,-1), time: 30.2053s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-0.5831243246271696,0.7662306602481502] (9,-1; 9,-1), time: 30.0098s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-0.7416579347578425,0.14205518032949793] (9,-1; 9,-1), time: 30.0236s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-0.5193698226880207,0.4810767616220585] (9,-1; 9,-1), time: 30.0200s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-0.7744449710168866,0.029680818530509412] (9,-1; 9,-1), time: 30.0404s, #vars: 1783, #constrs: 1197, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.832980267809195,0.47024159422079687] (9,-1; 9,-1), time: 30.0239s, #vars: 1783, #constrs: 1197, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 4 has unstable to stable neurons: [(37, -1), (23, -1), (22, -1), (51, -1), (5, -1), (99, -1), (13, -1), (19, -1), (11, -1), (93, -1), (44, -1), (26, -1), (65, -1), (2, 1), (27, 1), (77, 1), (12, -1), (50, 1), (86, 1), (81, -1), (54, -1), (56, -1), (98, 1), (10, 1), (25, 1), (75, 1), (9, -1), (24, -1), (66, 1), (31, 1), (69, 1), (78, -1), (20, -1), (49, -1), (4, 1), (45, -1), (90, -1), (16, 1), (87, 1), (58, 1), (7, 1), (83, -1), (32, -1)]
best_l after optimization: -93.2016372680664
beta sum per layer: []
alpha/beta optimization time: 15.566548347473145
alpha-CROWN with intermediate bounds by MIP: tensor([[ -8.41996193,  -9.18791294, -12.27690601, -12.64482117,  -7.46562290,
          -9.42518234, -10.50786400, -10.78393459, -12.48943424]],
       device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 327.76092529296875, ub improved 396.2361755371094, time 152.7162
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_87', 'lay14_41', 'lay14_92', 'lay14_23', 'lay14_20', 'lay14_5', 'lay14_18', 'lay14_51', 'lay14_39', 'lay14_90', 'lay14_85', 'lay14_75', 'lay14_19', 'lay14_59', 'lay14_78', 'lay14_58', 'lay14_63', 'lay14_54', 'lay14_35', 'lay14_84', 'lay14_33', 'lay14_77', 'lay14_53', 'lay14_96', 'lay14_62', 'lay14_67', 'lay14_57', 'lay14_76', 'lay14_94', 'lay14_0', 'lay14_70', 'lay14_74', 'lay14_31', 'lay14_29', 'lay14_72', 'lay14_11', 'lay14_45', 'lay14_10', 'lay14_32', 'lay14_55', 'lay14_40', 'lay14_79', 'lay14_42', 'lay14_66', 'lay14_12', 'lay14_56', 'lay14_97', 'lay14_9', 'lay14_8', 'lay14_6', 'lay14_24', 'lay14_99', 'lay14_65', 'lay14_2', 'lay14_93', 'lay14_64', 'lay14_69', 'lay14_95', 'lay14_30', 'lay14_16', 'lay14_48', 'lay14_88', 'lay14_89', 'lay14_82', 'lay14_15', 'lay14_27', 'lay14_83', 'lay14_4', 'lay14_21', 'lay14_26', 'lay14_28', 'lay14_68', 'lay14_14', 'lay14_38', 'lay14_52', 'lay14_98', 'lay14_80', 'lay14_60', 'lay14_46', 'lay14_50', 'lay14_22', 'lay14_47', 'lay14_36', 'lay14_73', 'lay14_71', 'lay14_44', 'lay14_3', 'lay14_1', 'lay14_7', 'lay14_86', 'lay14_37', 'lay14_25', 'lay14_49', 'lay14_34', 'lay14_43', 'lay14_61', 'lay14_81', 'lay14_91', 'lay14_13', 'lay14_17'] filter: 1.0
Solving MIP for lay14_41, [-inf,inf]=>[-1.093702722168586,0.18213173198555624] (9,-1; 9,-1), time: 30.0149s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_18, [-inf,inf]=>[-0.5993573601387367,0.463289769559577] (9,-1; 9,-1), time: 30.0129s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_92, [-inf,inf]=>[-0.4839176303777914,0.5023705457338813] (9,-1; 9,-1), time: 30.0177s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_5, [-inf,inf]=>[-1.1347795063613662,1.0324150563237011] (9,-1; 9,-1), time: 30.0177s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_87, [-inf,inf]=>[-0.8166870542262064,0.7590102585310808] (9,-1; 9,-1), time: 30.0195s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_23, [-inf,inf]=>[-1.014008713286949,0.41394576501730274] (9,-1; 9,-1), time: 30.0209s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_19, [-inf,inf]=>[-0.7136300241863738,0.33355328394517936] (9,-1; 9,-1), time: 30.0173s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_39, [-inf,inf]=>[-1.3232136102446608,0.00040255317402850834] (9,-1; 9,-1), time: 30.0135s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_75, [-inf,inf]=>[-0.15611735748689182,1.056389931817013] (9,-1; 9,-1), time: 30.0164s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_90, [-inf,inf]=>[-0.6634672548073501,0.506346352848785] (9,-1; 9,-1), time: 30.0169s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_51, [-inf,inf]=>[-1.1277999515214918,0.3188537108980083] (9,-1; 9,-1), time: 30.0228s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_85, [-inf,inf]=>[-1.3926699858386622,0.3285646083303484] (9,-1; 9,-1), time: 30.0260s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_78, [-inf,inf]=>[-1.30087804194125,0.2670878186030056] (9,-1; 9,-1), time: 30.0221s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[-0.5256749081942897,0.5893843071906479] (9,-1; 9,-1), time: 30.0242s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_59, [-inf,inf]=>[-0.78936318128032,0.5456027615846077] (9,-1; 9,-1), time: 30.0491s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_20, [-inf,inf]=>[-1.1624586536066137,1.4418050974465162] (9,-1; 9,-1), time: 30.0620s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_54, [-inf,inf]=>[-1.2050724342419175,0.23256913986329192] (9,-1; 9,-1), time: 30.0084s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_63, [-inf,inf]=>[-1.4799721255500744,0.052187347017069056] (9,-1; 9,-1), time: 30.0130s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_33, [-inf,inf]=>[-0.727780532155364,0.48671209421174283] (9,-1; 9,-1), time: 30.0087s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_53, [-inf,inf]=>[-1.3543662964531784,0.08492624429228475] (9,-1; 9,-1), time: 30.0095s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_96, [-inf,inf]=>[-0.24927482509536825,1.892964061335493] (9,-1; 9,-1), time: 30.0096s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_77, [-inf,inf]=>[-1.0280762951299918,0.07159961282624522] (9,-1; 9,-1), time: 30.0130s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_35, [-inf,inf]=>[-1.4896279483695338,0.4801075801651103] (9,-1; 9,-1), time: 30.0148s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_84, [-inf,inf]=>[-0.6341606448004546,0.5370936176585018] (9,-1; 9,-1), time: 30.0151s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_62, [-inf,inf]=>[-1.1633264944819606,0.0947718727804942] (9,-1; 9,-1), time: 30.0146s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_0, [-inf,inf]=>[-0.6530170769883534,0.5895809041470923] (9,-1; 9,-1), time: 30.0107s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_67, [-inf,inf]=>[-0.7409043969427985,0.8701675645452744] (9,-1; 9,-1), time: 30.0165s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_94, [-inf,inf]=>[-1.2832630168651598,0.14457151027003323] (9,-1; 9,-1), time: 30.0122s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_76, [-inf,inf]=>[-0.5642102920323641,0.7492167597389092] (9,-1; 9,-1), time: 30.0262s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_70, [-inf,inf]=>[-0.17970736430617648,1.3676653861195176] (9,-1; 9,-1), time: 30.0145s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_74, [-inf,inf]=>[-1.403931628700581,0.11413513819541177] (9,-1; 9,-1), time: 30.0134s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_57, [-inf,inf]=>[-0.8971637452769706,0.12921280284473866] (9,-1; 9,-1), time: 30.0479s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_72, [-inf,inf]=>[1e-05,2.309996824300062] (15,-1; 9,-1), time: 15.7529s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_31, [-inf,inf]=>[-1.0976632438703948,0.5626046808012157] (9,-1; 9,-1), time: 30.0108s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_29, [-inf,inf]=>[-0.9181244374099041,0.26045194314050596] (9,-1; 9,-1), time: 30.0169s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-1.1081312633539393,0.2094727443977788] (9,-1; 9,-1), time: 30.0134s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_55, [-inf,inf]=>[-1.1196622919454475,1.1725470163398182] (9,-1; 9,-1), time: 30.0133s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_32, [-inf,inf]=>[-0.6565826959047318,0.31114318693885773] (9,-1; 9,-1), time: 30.0159s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-0.4969417591727077,1.2379469731003623] (9,-1; 9,-1), time: 30.0192s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-1.2917229578366887,0.14081632364191243] (9,-1; 9,-1), time: 30.0116s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_79, [-inf,inf]=>[-0.11352012073884477,1.740267456255605] (9,-1; 9,-1), time: 30.0150s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_42, [-inf,inf]=>[-0.45159078998760593,0.6856514010309885] (9,-1; 9,-1), time: 30.0150s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_66, [-inf,inf]=>[-0.7134090739312324,0.4916053328463217] (9,-1; 9,-1), time: 30.0177s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_12, [-inf,inf]=>[-0.83236149155324,0.5444980741496324] (9,-1; 9,-1), time: 30.0133s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_9, [-inf,inf]=>[-0.7055911821002507,0.8380199823712003] (9,-1; 9,-1), time: 30.0091s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_56, [-inf,inf]=>[-0.8288808780482992,0.6330111158939004] (9,-1; 9,-1), time: 30.0109s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_45, [-inf,inf]=>[-0.9984042221348134,0.7471180132931634] (9,-1; 9,-1), time: 30.0603s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_97, [-inf,inf]=>[-0.4525799913792531,0.7485375420471543] (9,-1; 9,-1), time: 30.0154s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_8, [-inf,inf]=>[-0.8020986424235964,0.6064911275064295] (9,-1; 9,-1), time: 30.0116s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_2, [-inf,inf]=>[1e-05,1.6999954435075704] (15,-1; 9,-1), time: 18.4126s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_24, [-inf,inf]=>[-0.323627294343101,0.7222637194461782] (9,-1; 9,-1), time: 30.0132s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_93, [-inf,inf]=>[-0.9026534134088042,0.3393649595242311] (9,-1; 9,-1), time: 30.0133s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_64, [-inf,inf]=>[-0.5301353651141603,1.6508143386759018] (9,-1; 9,-1), time: 30.0146s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_65, [-inf,inf]=>[-0.048169522863208886,2.349789668583058] (9,-1; 9,-1), time: 30.0145s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_95, [-inf,inf]=>[-0.473198393096635,0.9131555428125656] (9,-1; 9,-1), time: 30.0115s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[-0.3287219485975871,1.5174074027040498] (9,-1; 9,-1), time: 30.0120s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_6, [-inf,inf]=>[-0.4669794084504401,0.7031945051785328] (9,-1; 9,-1), time: 30.0499s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_30, [-inf,inf]=>[-1.006713561558576,0.7755397215171798] (9,-1; 9,-1), time: 30.0152s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_48, [-inf,inf]=>[-1.0597994659349617,0.14362942780130747] (9,-1; 9,-1), time: 30.0124s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_89, [-inf,inf]=>[-0.9699089278079196,0.28770180690502206] (9,-1; 9,-1), time: 30.0130s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_88, [-inf,inf]=>[-0.5217935053302625,1.0092065751279908] (9,-1; 9,-1), time: 30.0130s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[-0.11788034983834236,1.4043518037013376] (9,-1; 9,-1), time: 30.0110s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_16, [-inf,inf]=>[-0.6816102091392111,0.621735347332866] (9,-1; 9,-1), time: 30.0231s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_99, [-inf,inf]=>[-0.9629572943748148,0.8770889922284835] (9,-1; 9,-1), time: 30.0942s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_15, [-inf,inf]=>[-0.20466991224634945,1.2023779261556677] (9,-1; 9,-1), time: 30.0131s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_38, [-inf,inf]=>[1e-05,1.847081879578988] (15,-1; 9,-1), time: 17.9671s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_27, [-inf,inf]=>[-0.6126523961590428,0.5203020111311097] (9,-1; 9,-1), time: 30.0118s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_83, [-inf,inf]=>[-0.4872642368894178,0.9019098815444454] (9,-1; 9,-1), time: 30.0182s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-1.1109481870865743,0.25163219605778253] (9,-1; 9,-1), time: 30.0132s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_4, [-inf,inf]=>[-0.8827799530191176,0.5998249753855026] (9,-1; 9,-1), time: 30.0159s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_28, [-inf,inf]=>[-0.015040554572382974,2.211781691233708] (9,-1; 9,-1), time: 30.0109s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_68, [-inf,inf]=>[-0.6109293746221457,0.8995743299845367] (9,-1; 9,-1), time: 30.0131s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_14, [-inf,inf]=>[-0.014682100312267873,1.7085870826386078] (9,-1; 9,-1), time: 30.0110s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_52, [-inf,inf]=>[-0.82161852151299,0.4557979281997398] (9,-1; 9,-1), time: 30.0111s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_98, [-inf,inf]=>[-0.9800915458451384,0.9622615773897174] (9,-1; 9,-1), time: 30.0116s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_26, [-inf,inf]=>[-0.5675132055280869,1.1032903926366617] (9,-1; 9,-1), time: 30.0447s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_46, [-inf,inf]=>[-0.2556924551101694,1.476543333171628] (9,-1; 9,-1), time: 30.0130s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_80, [-inf,inf]=>[-0.02681258419525189,1.6361372026212617] (9,-1; 9,-1), time: 30.0165s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_60, [-inf,inf]=>[-0.9722505743528762,0.25051565238421547] (9,-1; 9,-1), time: 30.0157s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_50, [-inf,inf]=>[-0.5444066176032336,1.029440504582141] (9,-1; 9,-1), time: 30.0093s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[1e-05,1.8031081771561608] (15,-1; 9,-1), time: 15.7061s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_22, [-inf,inf]=>[-0.7130119911087939,1.1375176659388582] (9,-1; 9,-1), time: 30.0127s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_3, [-inf,inf]=>[1e-05,1.8793702621657205] (15,-1; 9,-1), time: 16.9480s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_36, [-inf,inf]=>[-0.14555223204506895,1.599854265018274] (9,-1; 9,-1), time: 30.0174s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_73, [-inf,inf]=>[1e-05,1.538354205447968] (15,-1; 9,-1), time: 25.7367s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_71, [-inf,inf]=>[-0.6483571200459546,0.8585941088496896] (9,-1; 9,-1), time: 30.0092s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_44, [-inf,inf]=>[-0.4273725083838966,1.5878718994663852] (9,-1; 9,-1), time: 30.0130s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_1, [-inf,inf]=>[-0.6812697499806633,1.1408470836388764] (9,-1; 9,-1), time: 30.0195s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_86, [-inf,inf]=>[-0.6528782660370104,0.7191757563596527] (9,-1; 9,-1), time: 30.0099s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-0.8486162754997274,0.7765120698190012] (9,-1; 9,-1), time: 30.0253s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_25, [-inf,inf]=>[-0.9641614008623146,0.08536329223180053] (9,-1; 9,-1), time: 30.0132s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_37, [-inf,inf]=>[-0.18601741378425007,0.9064604946243152] (9,-1; 9,-1), time: 30.0146s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_49, [-inf,inf]=>[-0.527045884365223,0.9051465725026427] (9,-1; 9,-1), time: 30.0132s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_34, [-inf,inf]=>[-1.0796290290186978,0.1461642243963382] (9,-1; 9,-1), time: 30.0110s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_43, [-inf,inf]=>[-0.9244491482899473,0.37566357524272953] (9,-1; 9,-1), time: 30.0117s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_61, [-inf,inf]=>[-0.952881902593801,0.09860516959739889] (9,-1; 9,-1), time: 30.0267s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_81, [-inf,inf]=>[-0.24905863446027499,1.0078275192265296] (9,-1; 9,-1), time: 30.0124s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_91, [-inf,inf]=>[-0.36296689667728,1.5892616987832762] (9,-1; 9,-1), time: 30.0187s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_13, [-inf,inf]=>[-0.7432913659478917,0.2934150573775103] (9,-1; 9,-1), time: 30.1669s, #vars: 2015, #constrs: 1495, improved: True
Solving MIP for lay14_17, [-inf,inf]=>[-0.8480007682682447,0.19447142920149252] (9,-1; 9,-1), time: 30.0309s, #vars: 2015, #constrs: 1495, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 5 has unstable to stable neurons: [(31, -1), (87, -1), (83, -1), (35, -1), (23, -1), (51, -1), (69, -1), (15, -1), (58, -1), (34, -1), (94, 1), (97, -1), (20, -1), (33, -1), (57, -1), (37, -1), (18, 1), (86, 1), (38, -1), (19, -1), (42, -1), (90, 1), (30, 1), (7, 1), (5, -1), (84, -1), (17, 1), (2, 1), (12, -1), (89, -1), (6, -1), (78, -1), (93, -1), (16, -1)]
best_l after optimization: -66.28070068359375
beta sum per layer: []
alpha/beta optimization time: 15.248247385025024
alpha-CROWN with intermediate bounds by MIP: tensor([[-5.76109123, -6.25870180, -8.75131512, -9.78353405, -4.89118099,
         -6.64542723, -6.68572950, -8.21012497, -9.29359627]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 971.4850463867188, ub improved 867.9371337890625, time 200.0445
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_15', 'lay16_57', 'lay16_71', 'lay16_84', 'lay16_23', 'lay16_32', 'lay16_77', 'lay16_76', 'lay16_74', 'lay16_45', 'lay16_31', 'lay16_5', 'lay16_96', 'lay16_12', 'lay16_80', 'lay16_66', 'lay16_20', 'lay16_10', 'lay16_9', 'lay16_14', 'lay16_30', 'lay16_94', 'lay16_70', 'lay16_98', 'lay16_28', 'lay16_92', 'lay16_93', 'lay16_65', 'lay16_24', 'lay16_22', 'lay16_36', 'lay16_4', 'lay16_42', 'lay16_73', 'lay16_34', 'lay16_81', 'lay16_48', 'lay16_25', 'lay16_49', 'lay16_33', 'lay16_27', 'lay16_83', 'lay16_89', 'lay16_43', 'lay16_68', 'lay16_35', 'lay16_1', 'lay16_37', 'lay16_29', 'lay16_6', 'lay16_17', 'lay16_55', 'lay16_82', 'lay16_90', 'lay16_69', 'lay16_46', 'lay16_47', 'lay16_61', 'lay16_40', 'lay16_62', 'lay16_99', 'lay16_3', 'lay16_54', 'lay16_67', 'lay16_39', 'lay16_97', 'lay16_7', 'lay16_88', 'lay16_50', 'lay16_78', 'lay16_44', 'lay16_18', 'lay16_75', 'lay16_21', 'lay16_72', 'lay16_58', 'lay16_52', 'lay16_64', 'lay16_60', 'lay16_11', 'lay16_0', 'lay16_13', 'lay16_85', 'lay16_91', 'lay16_56', 'lay16_86', 'lay16_19', 'lay16_51', 'lay16_2', 'lay16_53', 'lay16_59', 'lay16_79', 'lay16_41', 'lay16_16', 'lay16_26', 'lay16_87', 'lay16_95', 'lay16_63', 'lay16_8', 'lay16_38'] filter: 1.0
Solving MIP for lay16_32, [-inf,inf]=>[-1.2681580619970148,0.5704117845661231] (9,-1; 9,-1), time: 30.0217s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_74, [-inf,inf]=>[-1.4467759170318584,0.9972401845889185] (9,-1; 9,-1), time: 30.0211s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_57, [-inf,inf]=>[-1.8322941485320823,0.6635146275076537] (9,-1; 9,-1), time: 30.0245s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_71, [-inf,inf]=>[-2.526115385666508,0.45506573677737805] (9,-1; 9,-1), time: 30.0282s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_15, [-inf,inf]=>[-1.9467613539138455,1.8105199222976527] (9,-1; 9,-1), time: 30.0299s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_45, [-inf,inf]=>[-1.0743281591786418,2.1270108558018648] (9,-1; 9,-1), time: 30.0261s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_12, [-inf,inf]=>[-1.3177019913281993,0.9745766619756026] (9,-1; 9,-1), time: 30.0379s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_66, [-inf,inf]=>[-0.5906417500539866,1.7151300764224924] (9,-1; 9,-1), time: 30.0391s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_31, [-inf,inf]=>[-2.036863709529527,1.2311409052481281] (9,-1; 9,-1), time: 30.0398s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_96, [-inf,inf]=>[-1.550817396702666,0.5102457761439744] (9,-1; 9,-1), time: 30.0470s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_23, [-inf,inf]=>[-1.2901065375590803,1.2940458626646376] (9,-1; 9,-1), time: 30.0687s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_77, [-inf,inf]=>[-2.3540371982630677,0.6288202791693595] (9,-1; 9,-1), time: 30.0672s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_76, [-inf,inf]=>[-1.7172719153515394,0.8139151344535663] (9,-1; 9,-1), time: 30.0780s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_84, [-inf,inf]=>[-2.11933549616957,0.5781274192726688] (9,-1; 9,-1), time: 30.0825s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_80, [-inf,inf]=>[-2.186398822845757,0.6362905491372328] (9,-1; 9,-1), time: 30.0916s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_5, [-inf,inf]=>[-1.8745429704721708,0.454221870315593] (9,-1; 9,-1), time: 30.1278s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_20, [-inf,inf]=>[-1.0923877719689692,1.2284553728550454] (9,-1; 9,-1), time: 30.0125s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_9, [-inf,inf]=>[-1.7583149938404838,0.7116255577877947] (9,-1; 9,-1), time: 30.0133s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_70, [-inf,inf]=>[-1.7158713467232296,0.5100655150531558] (9,-1; 9,-1), time: 30.0221s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_14, [-inf,inf]=>[-0.8672359856460308,1.96863108330156] (9,-1; 9,-1), time: 30.0456s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_93, [-inf,inf]=>[-1.5033268350861648,0.9185322936827882] (9,-1; 9,-1), time: 30.0209s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_30, [-inf,inf]=>[-1.5360561908467538,0.9987780569228397] (9,-1; 9,-1), time: 30.0665s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_94, [-inf,inf]=>[-1.4752738419369376,0.529770011358261] (9,-1; 9,-1), time: 30.0573s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_10, [-inf,inf]=>[-1.334243491708907,0.8398570541852629] (9,-1; 9,-1), time: 30.0829s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_92, [-inf,inf]=>[-1.0374322035819858,1.5801663193915074] (9,-1; 9,-1), time: 30.0707s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_28, [-inf,inf]=>[-1.3261341370914443,0.8207332637011855] (9,-1; 9,-1), time: 30.1172s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_24, [-inf,inf]=>[-1.491414354064459,0.5584255746267687] (9,-1; 9,-1), time: 30.1090s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_98, [-inf,inf]=>[-2.149183248978173,0.6015642296617608] (9,-1; 9,-1), time: 30.1652s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_36, [-inf,inf]=>[-1.1977548416371064,1.6491085742270226] (9,-1; 9,-1), time: 30.1187s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_4, [-inf,inf]=>[-1.3470895331791866,1.873737387830605] (9,-1; 9,-1), time: 30.1308s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_22, [-inf,inf]=>[-1.516740224240797,0.515651539979642] (9,-1; 9,-1), time: 30.2258s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_65, [-inf,inf]=>[-1.5081720371761111,1.1409290701688137] (9,-1; 9,-1), time: 30.3089s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_73, [-inf,inf]=>[-0.9945389487427131,1.0328183922407135] (9,-1; 9,-1), time: 30.0368s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_42, [-inf,inf]=>[-1.6303488291817574,0.7105404248752027] (9,-1; 9,-1), time: 30.0365s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_49, [-inf,inf]=>[-1.4993256462920743,1.3979712491034355] (9,-1; 9,-1), time: 30.0138s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_81, [-inf,inf]=>[-1.6626030409955732,0.44197259667974886] (9,-1; 9,-1), time: 30.0382s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_33, [-inf,inf]=>[-1.465890583034515,0.6701147248285573] (9,-1; 9,-1), time: 30.0130s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_25, [-inf,inf]=>[-1.3882151967037395,0.8585123486388173] (9,-1; 9,-1), time: 30.0427s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_27, [-inf,inf]=>[-1.4286271343845083,1.1520116386546484] (9,-1; 9,-1), time: 30.0245s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_48, [-inf,inf]=>[-1.365044600344207,0.8691469292349898] (9,-1; 9,-1), time: 30.1451s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_89, [-inf,inf]=>[-2.115829979075112,0.8592898642963622] (9,-1; 9,-1), time: 30.0536s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_34, [-inf,inf]=>[-0.8471772972075264,1.9391377674129728] (9,-1; 9,-1), time: 30.1861s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_35, [-inf,inf]=>[-2.536487135811556,0.38979872764896234] (9,-1; 9,-1), time: 30.0203s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_43, [-inf,inf]=>[-1.1046870126185744,2.0766180603293516] (9,-1; 9,-1), time: 30.0971s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_83, [-inf,inf]=>[-2.1343332850475196,0.42698680509768744] (9,-1; 9,-1), time: 30.1697s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_68, [-inf,inf]=>[-1.8928366933326426,1.1073509541338815] (9,-1; 9,-1), time: 30.1484s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_1, [-inf,inf]=>[-1.6529085388564533,0.6810233851776619] (9,-1; 9,-1), time: 30.0737s, #vars: 2303, #constrs: 1877, improved: True
Solving MIP for lay16_37, [-inf,inf]=>[-1.753174448523637,0.7280982909891405] (9,-1; 9,-1), time: 30.0452s, #vars: 2303, #constrs: 1877, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 6 has unstable to stable neurons: [(72, 1), (2, 1), (38, 1), (47, 1), (73, 1), (3, 1)]
best_l after optimization: -52.60472869873047
beta sum per layer: []
alpha/beta optimization time: 13.934018611907959
alpha-CROWN with intermediate bounds by MIP: tensor([[-4.09892082, -4.83642483, -6.99006081, -8.43566322, -3.67181301,
         -5.25676203, -4.65320873, -6.91171741, -7.75015545]], device='cuda:0') None
MIP improved 48 nodes out of 100 unstable nodes, lb improved 1053.09521484375, ub improved 899.4244384765625, time 91.7941
maximum relu layer improved by MIP so far 7
MIP finished with 738.0357112884521s
Run final alpha-CROWN after MIP solving on layer 16 and relu idx 7
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
best_l after optimization: -49.30790710449219
beta sum per layer: []
alpha/beta optimization time: 11.708435297012329
alpha-CROWN with intermediate bounds improved by MIP: tensor([[-3.75930929, -4.48985672, -6.50156879, -8.13038158, -3.37839508,
         -4.91959953, -4.14801407, -6.61159229, -7.36918688]], device='cuda:0') None
Split layers:
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
refined global lb: tensor([[-3.75930929],
        [-4.48985672],
        [-6.50156879],
        [-8.13038158],
        [-3.37839508],
        [-4.91959953],
        [-4.14801407],
        [-6.61159229],
        [-7.36918688]], device='cuda:0') min: tensor(-8.13038158, device='cuda:0')
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 130.07432103157043
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-3.75930929]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundParams(name=/9, inputs=[])
  (/10): BoundParams(name=/10, inputs=[])
  (/11): BoundParams(name=/11, inputs=[])
  (/12): BoundParams(name=/12, inputs=[])
  (/13): BoundParams(name=/13, inputs=[])
  (/14): BoundParams(name=/14, inputs=[])
  (/15): BoundParams(name=/15, inputs=[])
  (/16): BoundParams(name=/16, inputs=[])
  (/17): BoundParams(name=/17, inputs=[])
  (/18): BoundParams(name=/18, inputs=[])
  (/19): BoundShape(name=/19, inputs=[/0])
  (/20): BoundConstant(name=/20, inputs=[])
  (/21): BoundGather(name=/21, inputs=[/19, /20])
  (/22): BoundConstant(name=/22, inputs=[])
  (/23): BoundUnsqueeze(name=/23, inputs=[/21])
  (/24): BoundUnsqueeze(name=/24, inputs=[/22])
  (/25): BoundConcat(name=/25, inputs=[/23, /24])
  (/26): BoundReshape(name=/26, inputs=[/0, /25])
  (/input): BoundLinear(name=/input, inputs=[/26, /1, /2])
  (/28): BoundRelu(name=/28, inputs=[/input])
  (/input.3): BoundLinear(name=/input.3, inputs=[/28, /3, /4])
  (/30): BoundRelu(name=/30, inputs=[/input.3])
  (/input.7): BoundLinear(name=/input.7, inputs=[/30, /5, /6])
  (/32): BoundRelu(name=/32, inputs=[/input.7])
  (/input.11): BoundLinear(name=/input.11, inputs=[/32, /7, /8])
  (/34): BoundRelu(name=/34, inputs=[/input.11])
  (/input.15): BoundLinear(name=/input.15, inputs=[/34, /9, /10])
  (/36): BoundRelu(name=/36, inputs=[/input.15])
  (/input.19): BoundLinear(name=/input.19, inputs=[/36, /11, /12])
  (/38): BoundRelu(name=/38, inputs=[/input.19])
  (/input.23): BoundLinear(name=/input.23, inputs=[/38, /13, /14])
  (/40): BoundRelu(name=/40, inputs=[/input.23])
  (/input.27): BoundLinear(name=/input.27, inputs=[/40, /15, /16])
  (/42): BoundRelu(name=/42, inputs=[/input.27])
  (/43): BoundLinear(name=/43, inputs=[/42, /17, /18])
)
Model prediction is: tensor([-3.56774306, -2.49215603, -2.09614182,  0.89472836,  1.83690476,
         0.54328573, -4.33675575,  1.86856914,  1.38485718,  7.56602383],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /28 start_node /43 with alignment adjustment
setting alpha for layer /30 start_node /43 with alignment adjustment
setting alpha for layer /32 start_node /43 with alignment adjustment
setting alpha for layer /34 start_node /43 with alignment adjustment
setting alpha for layer /36 start_node /43 with alignment adjustment
setting alpha for layer /38 start_node /43 with alignment adjustment
setting alpha for layer /40 start_node /43 with alignment adjustment
setting alpha for layer /42 start_node /43 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-3.75930929]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.23,/input.3,/input,/input.11,/input.19,/input.27,/input.7,/input.15,/43
Split layers:
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
Keeping slopes for these layers: ['/43']
Keeping slopes for these layers: ['/43']
Node /28 input 0: size torch.Size([100]) unstable 31
Node /30 input 0: size torch.Size([100]) unstable 39
Node /32 input 0: size torch.Size([100]) unstable 32
Node /34 input 0: size torch.Size([100]) unstable 40
Node /36 input 0: size torch.Size([100]) unstable 57
Node /38 input 0: size torch.Size([100]) unstable 66
Node /40 input 0: size torch.Size([100]) unstable 94
Node /42 input 0: size torch.Size([100]) unstable 100
-----------------
# of unstable neurons: 459
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.27, 23] 
split level 1: [/input.27, 15] 
split level 2: [/input.27, 68] 
split level 3: [/input.27, 37] 
split level 4: [/input.27, 57] 
split level 5: [/input.27, 82] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 64 = 0.0
pruning-in-iteration extra time: 0.00014543533325195312
Time: prepare 0.0179    beta_bound 0.8545    bound 0.8546    transfer 0.0004    finalize 0.0097    func 0.8827    
Accumulated time: func 0.8827    prepare 0.0191    bound 0.8546    beta_bound 0.8545    transfer 0.0004    finalize 0.0097    
batch bounding time:  0.8828248977661133
Current worst splitting domains lb-rhs (depth):
-3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), -3.75931 (6), 
length of domains: 64
Time: pickout 0.0024    decision 0.3028    set_bounds 0.0027    solve 0.8829    add 0.0022    
Accumulated time: pickout 0.0024    decision 0.3028    set_bounds 0.0027    solve 0.8829    add 0.0022    
Current (lb-rhs): -3.7593092918395996
64 domains visited
Cumulative time: 1.2563824653625488

BaB round 2
batch: 64
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.27, 77] [/input.27, 77] [/input.27, 77] [/input.27, 10] [/input.27, 10] [/input.27, 77] [/input.27, 77] [/input.27, 77] [/input.27, 77] [/input.27, 77] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 128 = 0.0
pruning-in-iteration extra time: 0.00012421607971191406
Time: prepare 0.0312    beta_bound 0.5168    bound 0.5168    transfer 0.0005    finalize 0.0257    func 0.5743    
Accumulated time: func 1.4570    prepare 0.0509    bound 1.3714    beta_bound 1.3712    transfer 0.0009    finalize 0.0354    
batch bounding time:  0.5745079517364502
Current worst splitting domains lb-rhs (depth):
-3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), -3.75931 (7), 
length of domains: 128
Time: pickout 0.0015    decision 0.0492    set_bounds 0.0040    solve 0.5745    add 0.0038    
Accumulated time: pickout 0.0039    decision 0.3520    set_bounds 0.0068    solve 1.4574    add 0.0060    
Current (lb-rhs): -3.7593092918395996
192 domains visited
Cumulative time: 1.8901846408843994

BaB round 3
batch: 128
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.27, 10] [/input.27, 10] [/input.27, 10] [/input.27, 77] [/input.27, 49] [/input.27, 10] [/input.27, 10] [/input.27, 10] [/input.27, 10] [/input.27, 10] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 256 = 0.0
pruning-in-iteration extra time: 0.00010704994201660156
Time: prepare 0.0819    beta_bound 0.5247    bound 0.5247    transfer 0.0006    finalize 0.0400    func 0.6474    
Accumulated time: func 2.1044    prepare 0.1337    bound 1.8961    beta_bound 1.8959    transfer 0.0015    finalize 0.0754    
batch bounding time:  0.6475768089294434
Current worst splitting domains lb-rhs (depth):
-3.75931 (8), -3.69555 (8), -3.59751 (8), -3.57684 (8), -3.55571 (8), -3.55216 (8), -3.53554 (8), -3.53224 (8), -3.52652 (8), -3.52234 (8), -3.51658 (8), -3.51196 (8), -3.50970 (8), -3.50949 (8), -3.50355 (8), -3.49479 (8), -3.48987 (8), -3.48961 (8), -3.48899 (8), -3.48575 (8), 
length of domains: 256
Time: pickout 0.0017    decision 0.0939    set_bounds 0.0081    solve 0.6476    add 0.0037    
Accumulated time: pickout 0.0056    decision 0.4459    set_bounds 0.0149    solve 2.1050    add 0.0098    
Current (lb-rhs): -3.7593092918395996
448 domains visited
Cumulative time: 2.6466071605682373

BaB round 4
batch: 256
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.27, 14] [/input.27, 14] [/input.27, 14] [/input.27, 14] [/input.27, 14] [/input.27, 14] [/input.27, 14] [/input.27, 14] [/input.27, 14] [/input.27, 14] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 512 = 0.0
pruning-in-iteration extra time: 0.00011181831359863281
Time: prepare 0.1075    beta_bound 0.5327    bound 0.5328    transfer 0.0010    finalize 0.0769    func 0.7184    
Accumulated time: func 2.8228    prepare 0.2420    bound 2.4290    beta_bound 2.4286    transfer 0.0025    finalize 0.1523    
batch bounding time:  0.7187237739562988
Current worst splitting domains lb-rhs (depth):
-3.32524 (9), -3.30226 (9), -3.27155 (9), -3.26221 (9), -3.25509 (9), -3.25483 (9), -3.23431 (9), -3.23410 (9), -3.21267 (9), -3.21213 (9), -3.20715 (9), -3.20403 (9), -3.20365 (9), -3.20316 (9), -3.19946 (9), -3.19758 (9), -3.19662 (9), -3.19556 (9), -3.19070 (9), -3.18022 (9), 
length of domains: 512
Time: pickout 0.0025    decision 0.1063    set_bounds 0.0208    solve 0.7187    add 0.0057    
Accumulated time: pickout 0.0081    decision 0.5522    set_bounds 0.0357    solve 2.8237    add 0.0155    
Current (lb-rhs): -3.3252363204956055
960 domains visited
Cumulative time: 3.5030932426452637

BaB round 5
batch: 512
Average branched neurons at iteration 5:  1.0000
splitting decisions: 
split level 0: [/input.27, 49] [/input.27, 40] [/input.27, 40] [/input.27, 40] [/input.27, 40] [/input.27, 40] [/input.27, 40] [/input.27, 40] [/input.27, 40] [/input.27, 40] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 1024 = 0.0
pruning-in-iteration extra time: 0.00020885467529296875
Time: prepare 0.2208    beta_bound 0.5545    bound 0.5546    transfer 0.0014    finalize 0.1822    func 1.0346    
Accumulated time: func 3.8574    prepare 0.4635    bound 2.9836    beta_bound 2.9831    transfer 0.0039    finalize 0.3344    
batch bounding time:  1.0354909896850586
Current worst splitting domains lb-rhs (depth):
-2.96776 (10), -2.96237 (10), -2.94767 (10), -2.94727 (10), -2.93918 (10), -2.91313 (10), -2.90154 (10), -2.89946 (10), -2.89726 (10), -2.89445 (10), -2.89431 (10), -2.89279 (10), -2.88938 (10), -2.88651 (10), -2.88457 (10), -2.88343 (10), -2.88276 (10), -2.88067 (10), -2.86906 (10), -2.86832 (10), 
length of domains: 1024
Time: pickout 0.0036    decision 0.1190    set_bounds 0.0255    solve 1.0355    add 0.0083    
Accumulated time: pickout 0.0117    decision 0.6712    set_bounds 0.0612    solve 3.8593    add 0.0238    
Current (lb-rhs): -2.9677579402923584
1984 domains visited
Cumulative time: 4.698392391204834

BaB round 6
batch: 1024
Average branched neurons at iteration 6:  1.0000
splitting decisions: 
split level 0: [/input.27, 40] [/input.27, 49] [/input.27, 76] [/input.27, 76] [/input.27, 77] [/input.23, 35] [/input.27, 76] [/input.27, 76] [/input.27, 76] [/input.27, 49] 
pruning_in_iteration open status: False
ratio of positive domain = 3 / 2048 = 0.00146484375
pruning-in-iteration extra time: 0.0001418590545654297
Time: prepare 0.4415    beta_bound 0.5998    bound 0.5999    transfer 0.0037    finalize 0.4589    func 1.5044    
Accumulated time: func 5.3618    prepare 0.9059    bound 3.5835    beta_bound 3.5829    transfer 0.0076    finalize 0.7933    
batch bounding time:  1.5062580108642578
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51534 (11), -2.51045 (11), -2.49512 (11), -2.49078 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), 
length of domains: 2045
Time: pickout 0.0033    decision 0.1615    set_bounds 0.0404    solve 1.5063    add 0.0876    
Accumulated time: pickout 0.0150    decision 0.8327    set_bounds 0.1016    solve 5.3656    add 0.1113    
Current (lb-rhs): -2.64752459526062
4029 domains visited
Cumulative time: 6.503627300262451

BaB round 7
batch: 1024
Average branched neurons at iteration 7:  1.0000
splitting decisions: 
split level 0: [/input.27, 76] [/input.27, 10] [/input.23, 41] [/input.27, 76] [/input.27, 76] [/input.27, 32] [/input.27, 49] [/input.23, 35] [/input.23, 31] [/input.27, 49] 
pruning_in_iteration open status: False
ratio of positive domain = 172 / 2048 = 0.083984375
pruning-in-iteration extra time: 0.0001270771026611328
Time: prepare 0.4224    beta_bound 0.5943    bound 0.5944    transfer 0.0025    finalize 0.4320    func 1.4517    
Accumulated time: func 6.8135    prepare 1.3292    bound 4.1779    beta_bound 4.1773    transfer 0.0101    finalize 1.2254    
batch bounding time:  1.4534721374511719
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2897
Time: pickout 0.0037    decision 0.1861    set_bounds 0.0385    solve 1.4535    add 0.1588    
Accumulated time: pickout 0.0187    decision 1.0188    set_bounds 0.1401    solve 6.8191    add 0.2702    
Current (lb-rhs): -2.64752459526062
5905 domains visited
Cumulative time: 8.352427959442139

BaB round 8
batch: 1024
Average branched neurons at iteration 8:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input, 60] [/input.23, 41] [/input.23, 78] [/input.27, 32] [/input.23, 35] [/input.23, 33] [/input, 60] [/input.23, 78] [/input.23, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 537 / 2048 = 0.26220703125
pruning-in-iteration extra time: 0.009419679641723633
Time: prepare 0.4500    beta_bound 0.6521    bound 0.6522    transfer 0.0028    finalize 0.3269    func 1.4324    
Accumulated time: func 8.2459    prepare 1.7800    bound 4.8301    beta_bound 4.8294    transfer 0.0129    finalize 1.5523    
batch bounding time:  1.4340484142303467
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3384
Time: pickout 0.0058    decision 0.1598    set_bounds 0.1776    solve 1.4341    add 0.0128    
Accumulated time: pickout 0.0245    decision 1.1785    set_bounds 0.3177    solve 8.2532    add 0.2830    
Current (lb-rhs): -2.64752459526062
7416 domains visited
Cumulative time: 10.152294397354126

BaB round 9
batch: 1024
Average branched neurons at iteration 9:  1.0000
splitting decisions: 
split level 0: [/input.27, 84] [/input.27, 84] [/input.27, 9] [/input.23, 41] [/input.27, 84] [/input.23, 67] [/input, 60] [/input, 60] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 716 / 2048 = 0.349609375
pruning-in-iteration extra time: 0.016030311584472656
Time: prepare 0.4466    beta_bound 0.8387    bound 0.8388    transfer 0.0035    finalize 0.3513    func 1.6405    
Accumulated time: func 9.8864    prepare 2.2272    bound 5.6689    beta_bound 5.6681    transfer 0.0164    finalize 1.9036    
batch bounding time:  1.641434907913208
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3692
Time: pickout 0.0037    decision 0.1437    set_bounds 0.0405    solve 1.6415    add 0.0117    
Accumulated time: pickout 0.0282    decision 1.3222    set_bounds 0.3582    solve 9.8946    add 0.2947    
Current (lb-rhs): -2.64752459526062
8748 domains visited
Cumulative time: 12.00663137435913

BaB round 10
batch: 1024
Average branched neurons at iteration 10:  1.0000
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 59] [/input, 60] [/input.27, 32] [/input.27, 25] [/input.27, 74] [/input.27, 9] [/input.27, 25] [/input.23, 4] [/input.27, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 648 / 2048 = 0.31640625
pruning-in-iteration extra time: 0.014071464538574219
Time: prepare 0.4396    beta_bound 0.6076    bound 0.6076    transfer 0.0031    finalize 0.4757    func 1.5276    
Accumulated time: func 11.4139    prepare 2.6675    bound 6.2765    beta_bound 6.2757    transfer 0.0195    finalize 2.3793    
batch bounding time:  1.5285351276397705
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4068
Time: pickout 0.0040    decision 0.1513    set_bounds 0.0430    solve 1.5286    add 0.0119    
Accumulated time: pickout 0.0321    decision 1.4735    set_bounds 0.4012    solve 11.4232    add 0.3066    
Current (lb-rhs): -2.64752459526062
10148 domains visited
Cumulative time: 13.757166385650635

BaB round 11
batch: 1024
Average branched neurons at iteration 11:  1.0000
splitting decisions: 
split level 0: [/input.23, 31] [/input, 87] [/input.23, 31] [/input.23, 23] [/input, 87] [/input.23, 31] [/input.27, 84] [/input, 60] [/input.27, 9] [/input.23, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 746 / 2048 = 0.3642578125
pruning-in-iteration extra time: 0.019028186798095703
Time: prepare 0.5038    beta_bound 0.6688    bound 0.6689    transfer 0.0036    finalize 0.5569    func 1.7336    
Accumulated time: func 13.1475    prepare 3.1720    bound 6.9454    beta_bound 6.9444    transfer 0.0231    finalize 2.9362    
batch bounding time:  1.7361490726470947
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4346
Time: pickout 0.0039    decision 0.1468    set_bounds 0.0459    solve 1.7362    add 0.1586    
Accumulated time: pickout 0.0360    decision 1.6203    set_bounds 0.4471    solve 13.1594    add 0.4652    
Current (lb-rhs): -2.64752459526062
11450 domains visited
Cumulative time: 15.863707065582275

BaB round 12
batch: 1024
Average branched neurons at iteration 12:  1.0000
splitting decisions: 
split level 0: [/input.23, 43] [/input.23, 33] [/input, 60] [/input, 60] [/input.23, 35] [/input.19, 80] [/input, 60] [/input.23, 67] [/input.23, 33] [/input.19, 11] 
pruning_in_iteration open status: True
ratio of positive domain = 773 / 2048 = 0.37744140625
pruning-in-iteration extra time: 0.01750969886779785
Time: prepare 0.4567    beta_bound 0.6490    bound 0.6490    transfer 0.0029    finalize 0.5235    func 1.6327    
Accumulated time: func 14.7802    prepare 3.6294    bound 7.5944    beta_bound 7.5934    transfer 0.0260    finalize 3.4597    
batch bounding time:  1.6337230205535889
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4597
Time: pickout 0.0043    decision 0.1507    set_bounds 0.0476    solve 1.6338    add 0.0114    
Accumulated time: pickout 0.0403    decision 1.7710    set_bounds 0.4947    solve 14.7931    add 0.4766    
Current (lb-rhs): -2.64752459526062
12725 domains visited
Cumulative time: 17.72540044784546

BaB round 13
batch: 1024
Average branched neurons at iteration 13:  1.0000
splitting decisions: 
split level 0: [/input, 0] [/input.23, 6] [/input.23, 78] [/input.19, 26] [/input, 87] [/input, 60] [/input.27, 25] [/input.19, 80] [/input.11, 59] [/input.23, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 901 / 2048 = 0.43994140625
pruning-in-iteration extra time: 0.02164435386657715
Time: prepare 0.4695    beta_bound 0.6601    bound 0.6602    transfer 0.0031    finalize 0.3713    func 1.5047    
Accumulated time: func 16.2849    prepare 4.0996    bound 8.2546    beta_bound 8.2535    transfer 0.0291    finalize 3.8310    
batch bounding time:  1.5057501792907715
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4720
Time: pickout 0.0042    decision 0.1495    set_bounds 0.0492    solve 1.5058    add 0.0105    
Accumulated time: pickout 0.0446    decision 1.9205    set_bounds 0.5439    solve 16.2989    add 0.4872    
Current (lb-rhs): -2.64752459526062
13872 domains visited
Cumulative time: 19.461991548538208

BaB round 14
batch: 1024
Average branched neurons at iteration 14:  1.0000
splitting decisions: 
split level 0: [/input.23, 35] [/input.23, 95] [/input.23, 41] [/input.23, 43] [/input.27, 25] [/input.11, 59] [/input.23, 67] [/input.27, 25] [/input.19, 79] [/input.23, 67] 
pruning_in_iteration open status: True
ratio of positive domain = 1054 / 2048 = 0.5146484375
pruning-in-iteration extra time: 0.01821589469909668
Time: prepare 0.4554    beta_bound 0.6664    bound 0.6665    transfer 0.0034    finalize 0.3577    func 1.4836    
Accumulated time: func 17.7684    prepare 4.5556    bound 8.9212    beta_bound 8.9199    transfer 0.0325    finalize 4.1887    
batch bounding time:  1.484731674194336
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4690
Time: pickout 0.0043    decision 0.1651    set_bounds 0.2254    solve 1.4848    add 0.0102    
Accumulated time: pickout 0.0489    decision 2.0856    set_bounds 0.7693    solve 17.7837    add 0.4974    
Current (lb-rhs): -2.64752459526062
14866 domains visited
Cumulative time: 21.371204614639282

BaB round 15
batch: 1024
Average branched neurons at iteration 15:  1.0000
splitting decisions: 
split level 0: [/input.23, 23] [/input.23, 23] [/input.23, 66] [/input.23, 67] [/input.23, 23] [/input.23, 6] [/input.27, 9] [/input.23, 78] [/input.11, 59] [/input, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 1088 / 2048 = 0.53125
pruning-in-iteration extra time: 0.021629810333251953
Time: prepare 0.4826    beta_bound 0.7112    bound 0.7114    transfer 0.0038    finalize 0.3606    func 1.5588    
Accumulated time: func 19.3272    prepare 5.0389    bound 9.6325    beta_bound 9.6312    transfer 0.0362    finalize 4.5493    
batch bounding time:  1.5612659454345703
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4626
Time: pickout 0.0048    decision 0.1720    set_bounds 0.2261    solve 1.5613    add 0.0112    
Accumulated time: pickout 0.0537    decision 2.2576    set_bounds 0.9954    solve 19.3450    add 0.5086    
Current (lb-rhs): -2.64752459526062
15826 domains visited
Cumulative time: 23.36730647087097

BaB round 16
batch: 1024
Average branched neurons at iteration 16:  1.0000
splitting decisions: 
split level 0: [/input.23, 58] [/input.11, 59] [/input.23, 95] [/input.19, 11] [/input.23, 41] [/input.23, 58] [/input.27, 32] [/input.19, 11] [/input.27, 9] [/input.23, 67] 
pruning_in_iteration open status: True
ratio of positive domain = 1137 / 2048 = 0.55517578125
pruning-in-iteration extra time: 0.02625417709350586
Time: prepare 0.5098    beta_bound 0.7756    bound 0.7757    transfer 0.0035    finalize 0.3885    func 1.6784    
Accumulated time: func 21.0056    prepare 5.5495    bound 10.4082    beta_bound 10.4068    transfer 0.0398    finalize 4.9378    
batch bounding time:  1.6797404289245605
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4513
Time: pickout 0.0046    decision 0.2178    set_bounds 0.2796    solve 1.6798    add 0.0125    
Accumulated time: pickout 0.0583    decision 2.4754    set_bounds 1.2750    solve 21.0248    add 0.5210    
Current (lb-rhs): -2.64752459526062
16737 domains visited
Cumulative time: 25.58450937271118

BaB round 17
batch: 1024
Average branched neurons at iteration 17:  1.0000
splitting decisions: 
split level 0: [/input.23, 23] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input, 87] [/input.11, 59] [/input.19, 11] [/input.11, 59] [/input, 0] [/input.23, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 1196 / 2048 = 0.583984375
pruning-in-iteration extra time: 0.020995140075683594
Time: prepare 0.5301    beta_bound 0.6827    bound 0.6828    transfer 0.0035    finalize 0.3790    func 1.5961    
Accumulated time: func 22.6017    prepare 6.0803    bound 11.0910    beta_bound 11.0894    transfer 0.0433    finalize 5.3169    
batch bounding time:  1.5972850322723389
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4341
Time: pickout 0.0067    decision 0.1672    set_bounds 0.2670    solve 1.5973    add 0.0090    
Accumulated time: pickout 0.0650    decision 2.6426    set_bounds 1.5420    solve 22.6221    add 0.5301    
Current (lb-rhs): -2.64752459526062
17589 domains visited
Cumulative time: 27.653639793395996

BaB round 18
batch: 1024
Average branched neurons at iteration 18:  1.0000
splitting decisions: 
split level 0: [/input.27, 25] [/input.23, 31] [/input.11, 59] [/input.11, 59] [/input.23, 23] [/input.23, 31] [/input.27, 9] [/input.11, 59] [/input.23, 31] [/input.27, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 1177 / 2048 = 0.57470703125
pruning-in-iteration extra time: 0.0162203311920166
Time: prepare 0.4894    beta_bound 0.6058    bound 0.6058    transfer 0.0030    finalize 0.3704    func 1.4692    
Accumulated time: func 24.0709    prepare 6.5704    bound 11.6969    beta_bound 11.6952    transfer 0.0462    finalize 5.6873    
batch bounding time:  1.4767827987670898
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 4188
Time: pickout 0.0051    decision 0.1482    set_bounds 0.2541    solve 1.4768    add 0.0094    
Accumulated time: pickout 0.0701    decision 2.7908    set_bounds 1.7961    solve 24.0989    add 0.5394    
Current (lb-rhs): -2.64752459526062
18460 domains visited
Cumulative time: 29.568039417266846

BaB round 19
batch: 1024
Average branched neurons at iteration 19:  1.0000
splitting decisions: 
split level 0: [/input.23, 35] [/input.19, 79] [/input.23, 67] [/input.23, 67] [/input.19, 11] [/input.19, 11] [/input.11, 59] [/input, 60] [/input.23, 31] [/input.27, 40] 
pruning_in_iteration open status: True
ratio of positive domain = 1235 / 2048 = 0.60302734375
pruning-in-iteration extra time: 0.01976752281188965
Time: prepare 0.4760    beta_bound 0.6767    bound 0.6768    transfer 0.0029    finalize 0.5628    func 1.7191    
Accumulated time: func 25.7900    prepare 7.0471    bound 12.3736    beta_bound 12.3719    transfer 0.0492    finalize 6.2501    
batch bounding time:  1.7201809883117676
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3977
Time: pickout 0.0075    decision 0.1499    set_bounds 0.0559    solve 1.7202    add 0.0107    
Accumulated time: pickout 0.0777    decision 2.9407    set_bounds 1.8519    solve 25.8191    add 0.5502    
Current (lb-rhs): -2.64752459526062
19273 domains visited
Cumulative time: 31.533708095550537

BaB round 20
batch: 1024
Average branched neurons at iteration 20:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input, 60] [/input.19, 26] [/input.23, 51] [/input.11, 59] [/input, 87] [/input.27, 40] [/input, 0] [/input.23, 67] [/input.23, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 1123 / 2048 = 0.54833984375
pruning-in-iteration extra time: 0.02189803123474121
Time: prepare 0.4702    beta_bound 0.7070    bound 0.7071    transfer 0.0032    finalize 0.3554    func 1.5364    
Accumulated time: func 27.3264    prepare 7.5181    bound 13.0807    beta_bound 13.0788    transfer 0.0524    finalize 6.6054    
batch bounding time:  1.5374860763549805
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3878
Time: pickout 0.0076    decision 0.1601    set_bounds 0.0536    solve 1.5375    add 0.0093    
Accumulated time: pickout 0.0852    decision 3.1008    set_bounds 1.9055    solve 27.3567    add 0.5595    
Current (lb-rhs): -2.64752459526062
20198 domains visited
Cumulative time: 33.32273459434509

BaB round 21
batch: 1024
Average branched neurons at iteration 21:  1.0000
splitting decisions: 
split level 0: [/input.27, 25] [/input, 60] [/input.23, 31] [/input, 60] [/input, 60] [/input.23, 31] [/input.23, 43] [/input.11, 59] [/input.19, 11] [/input, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 1015 / 2048 = 0.49560546875
pruning-in-iteration extra time: 0.019405126571655273
Time: prepare 0.4779    beta_bound 0.6358    bound 0.6359    transfer 0.0036    finalize 0.4214    func 1.5395    
Accumulated time: func 28.8659    prepare 7.9968    bound 13.7166    beta_bound 13.7146    transfer 0.0560    finalize 7.0268    
batch bounding time:  1.5411527156829834
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3887
Time: pickout 0.0047    decision 0.1719    set_bounds 0.1971    solve 1.5412    add 0.0099    
Accumulated time: pickout 0.0900    decision 3.2727    set_bounds 2.1026    solve 28.8978    add 0.5694    
Current (lb-rhs): -2.64752459526062
21231 domains visited
Cumulative time: 35.26849555969238

BaB round 22
batch: 1024
Average branched neurons at iteration 22:  1.0000
splitting decisions: 
split level 0: [/input.23, 23] [/input, 87] [/input.11, 59] [/input.23, 35] [/input.23, 23] [/input.23, 67] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.23, 67] 
pruning_in_iteration open status: True
ratio of positive domain = 1155 / 2048 = 0.56396484375
pruning-in-iteration extra time: 0.018311262130737305
Time: prepare 0.5272    beta_bound 0.6660    bound 0.6661    transfer 0.0027    finalize 0.3946    func 1.5911    
Accumulated time: func 30.4570    prepare 8.5247    bound 14.3826    beta_bound 14.3806    transfer 0.0587    finalize 7.4214    
batch bounding time:  1.5922317504882812
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3756
Time: pickout 0.0046    decision 0.3183    set_bounds 0.0580    solve 1.5923    add 0.0089    
Accumulated time: pickout 0.0946    decision 3.5910    set_bounds 2.1606    solve 30.4901    add 0.5783    
Current (lb-rhs): -2.64752459526062
22124 domains visited
Cumulative time: 37.27308964729309

BaB round 23
batch: 1024
Average branched neurons at iteration 23:  1.0000
splitting decisions: 
split level 0: [/input, 0] [/input.23, 23] [/input.23, 4] [/input.23, 33] [/input.23, 41] [/input.23, 31] [/input.27, 32] [/input.23, 23] [/input, 0] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1071 / 2048 = 0.52294921875
pruning-in-iteration extra time: 0.0185391902923584
Time: prepare 0.5324    beta_bound 0.6468    bound 0.6469    transfer 0.0028    finalize 0.3701    func 1.7070    
Accumulated time: func 32.1640    prepare 9.0578    bound 15.0295    beta_bound 15.0274    transfer 0.0615    finalize 7.7915    
batch bounding time:  1.7088675498962402
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3709
Time: pickout 0.0047    decision 0.3191    set_bounds 0.0588    solve 1.7089    add 0.0103    
Accumulated time: pickout 0.0992    decision 3.9101    set_bounds 2.2193    solve 32.1990    add 0.5886    
Current (lb-rhs): -2.64752459526062
23101 domains visited
Cumulative time: 39.396313190460205

BaB round 24
batch: 1024
Average branched neurons at iteration 24:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input.23, 4] [/input.23, 31] [/input, 60] [/input.23, 4] [/input, 60] [/input.23, 31] [/input.23, 78] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1096 / 2048 = 0.53515625
pruning-in-iteration extra time: 0.01953268051147461
Time: prepare 0.5059    beta_bound 0.6640    bound 0.6641    transfer 0.0028    finalize 0.3859    func 1.5607    
Accumulated time: func 33.7247    prepare 9.5644    bound 15.6936    beta_bound 15.6914    transfer 0.0643    finalize 8.1774    
batch bounding time:  1.5620925426483154
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3637
Time: pickout 0.0047    decision 0.1604    set_bounds 0.0522    solve 1.5621    add 0.0095    
Accumulated time: pickout 0.1039    decision 4.0704    set_bounds 2.2716    solve 33.7612    add 0.5981    
Current (lb-rhs): -2.64752459526062
24053 domains visited
Cumulative time: 41.2054545879364

BaB round 25
batch: 1024
Average branched neurons at iteration 25:  1.0000
splitting decisions: 
split level 0: [/input.11, 59] [/input.23, 31] [/input.23, 67] [/input.27, 25] [/input.23, 4] [/input.23, 35] [/input.23, 23] [/input.27, 25] [/input.11, 59] [/input.27, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 1059 / 2048 = 0.51708984375
pruning-in-iteration extra time: 0.019989013671875
Time: prepare 0.5142    beta_bound 0.6853    bound 0.6854    transfer 0.0035    finalize 0.3602    func 1.5638    
Accumulated time: func 35.2885    prepare 10.0794    bound 16.3790    beta_bound 16.3767    transfer 0.0678    finalize 8.5376    
batch bounding time:  1.7066948413848877
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3602
Time: pickout 0.0048    decision 0.3354    set_bounds 0.0532    solve 1.7067    add 0.0096    
Accumulated time: pickout 0.1087    decision 4.4059    set_bounds 2.3248    solve 35.4679    add 0.6077    
Current (lb-rhs): -2.64752459526062
25042 domains visited
Cumulative time: 43.33386540412903

BaB round 26
batch: 1024
Average branched neurons at iteration 26:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input.19, 11] [/input, 60] [/input, 87] [/input.27, 32] [/input.19, 11] [/input.23, 35] [/input, 60] [/input, 60] [/input.23, 67] 
pruning_in_iteration open status: True
ratio of positive domain = 1036 / 2048 = 0.505859375
pruning-in-iteration extra time: 0.02049708366394043
Time: prepare 0.4712    beta_bound 0.7185    bound 0.7186    transfer 0.0030    finalize 0.3541    func 1.5473    
Accumulated time: func 36.8358    prepare 10.5513    bound 17.0976    beta_bound 17.0952    transfer 0.0708    finalize 8.8917    
batch bounding time:  1.5484695434570312
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3590
Time: pickout 0.0046    decision 0.1548    set_bounds 0.0598    solve 1.5485    add 0.0095    
Accumulated time: pickout 0.1133    decision 4.5607    set_bounds 2.3846    solve 37.0164    add 0.6172    
Current (lb-rhs): -2.64752459526062
26054 domains visited
Cumulative time: 45.129390001297

BaB round 27
batch: 1024
Average branched neurons at iteration 27:  1.0000
splitting decisions: 
split level 0: [/input.23, 31] [/input.23, 35] [/input, 60] [/input.27, 74] [/input.23, 23] [/input.23, 41] [/input, 60] [/input.23, 67] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1107 / 2048 = 0.54052734375
pruning-in-iteration extra time: 0.019185781478881836
Time: prepare 0.5228    beta_bound 0.6257    bound 0.6258    transfer 0.0031    finalize 0.3581    func 1.5103    
Accumulated time: func 38.3461    prepare 11.0747    bound 17.7234    beta_bound 17.7209    transfer 0.0739    finalize 9.2498    
batch bounding time:  1.5114731788635254
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3507
Time: pickout 0.0046    decision 0.1484    set_bounds 0.1867    solve 1.5115    add 0.0090    
Accumulated time: pickout 0.1179    decision 4.7090    set_bounds 2.5713    solve 38.5279    add 0.6262    
Current (lb-rhs): -2.64752459526062
26995 domains visited
Cumulative time: 47.00808382034302

BaB round 28
batch: 1024
Average branched neurons at iteration 28:  1.0000
splitting decisions: 
split level 0: [/input.11, 59] [/input, 60] [/input, 60] [/input.23, 33] [/input.23, 78] [/input.23, 78] [/input, 60] [/input.23, 78] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1155 / 2048 = 0.56396484375
pruning-in-iteration extra time: 0.01989889144897461
Time: prepare 0.4886    beta_bound 0.6976    bound 0.6976    transfer 0.0034    finalize 0.5210    func 1.7112    
Accumulated time: func 40.0573    prepare 11.5642    bound 18.4210    beta_bound 18.4185    transfer 0.0773    finalize 9.7708    
batch bounding time:  1.7123818397521973
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3376
Time: pickout 0.0045    decision 0.3293    set_bounds 0.0499    solve 1.7124    add 0.0099    
Accumulated time: pickout 0.1224    decision 5.0383    set_bounds 2.6212    solve 40.2403    add 0.6361    
Current (lb-rhs): -2.64752459526062
27888 domains visited
Cumulative time: 49.13608956336975

BaB round 29
batch: 1024
Average branched neurons at iteration 29:  1.0000
splitting decisions: 
split level 0: [/input.27, 84] [/input.27, 84] [/input.23, 31] [/input.27, 40] [/input.27, 84] [/input.27, 25] [/input.27, 84] [/input.27, 25] [/input.27, 9] [/input.23, 23] 
pruning_in_iteration open status: True
ratio of positive domain = 1120 / 2048 = 0.546875
pruning-in-iteration extra time: 0.017577648162841797
Time: prepare 0.4657    beta_bound 0.6969    bound 0.6970    transfer 0.0033    finalize 0.3659    func 1.5323    
Accumulated time: func 41.5896    prepare 12.0305    bound 19.1180    beta_bound 19.1154    transfer 0.0806    finalize 10.1367    
batch bounding time:  1.5334527492523193
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3280
Time: pickout 0.0046    decision 0.1547    set_bounds 0.0504    solve 1.5335    add 0.0090    
Accumulated time: pickout 0.1270    decision 5.1930    set_bounds 2.6716    solve 41.7738    add 0.6452    
Current (lb-rhs): -2.64752459526062
28816 domains visited
Cumulative time: 50.90678596496582

BaB round 30
batch: 1024
Average branched neurons at iteration 30:  1.0000
splitting decisions: 
split level 0: [/input.23, 4] [/input.23, 78] [/input.23, 23] [/input, 60] [/input, 60] [/input, 60] [/input.23, 35] [/input, 60] [/input.23, 41] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1039 / 2048 = 0.50732421875
pruning-in-iteration extra time: 0.018735408782958984
Time: prepare 0.4748    beta_bound 0.6841    bound 0.6841    transfer 0.0029    finalize 0.4831    func 1.6455    
Accumulated time: func 43.2350    prepare 12.5060    bound 19.8021    beta_bound 19.7994    transfer 0.0834    finalize 10.6197    
batch bounding time:  1.646573781967163
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3265
Time: pickout 0.0046    decision 0.2753    set_bounds 0.0501    solve 1.6466    add 0.0093    
Accumulated time: pickout 0.1316    decision 5.4683    set_bounds 2.7217    solve 43.4204    add 0.6545    
Current (lb-rhs): -2.64752459526062
29825 domains visited
Cumulative time: 52.90965819358826

BaB round 31
batch: 1024
Average branched neurons at iteration 31:  1.0000
splitting decisions: 
split level 0: [/input.23, 78] [/input.23, 78] [/input.23, 41] [/input, 60] [/input, 60] [/input.23, 27] [/input, 60] [/input.23, 41] [/input, 60] [/input.23, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 987 / 2048 = 0.48193359375
pruning-in-iteration extra time: 0.02221536636352539
Time: prepare 0.5310    beta_bound 0.7176    bound 0.7177    transfer 0.0029    finalize 0.3504    func 1.6041    
Accumulated time: func 44.8391    prepare 13.0377    bound 20.5199    beta_bound 20.5171    transfer 0.0864    finalize 10.9702    
batch bounding time:  1.6052045822143555
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3302
Time: pickout 0.0044    decision 0.1585    set_bounds 0.0571    solve 1.6052    add 0.0101    
Accumulated time: pickout 0.1360    decision 5.6268    set_bounds 2.7788    solve 45.0256    add 0.6646    
Current (lb-rhs): -2.64752459526062
30886 domains visited
Cumulative time: 54.76167154312134

BaB round 32
batch: 1024
Average branched neurons at iteration 32:  1.0000
splitting decisions: 
split level 0: [/input.23, 67] [/input.11, 59] [/input.23, 89] [/input.23, 33] [/input.23, 95] [/input.11, 59] [/input.11, 59] [/input.23, 43] [/input.23, 78] [/input.23, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 1025 / 2048 = 0.50048828125
pruning-in-iteration extra time: 0.019733905792236328
Time: prepare 0.4838    beta_bound 0.6454    bound 0.6455    transfer 0.0028    finalize 0.3400    func 1.6073    
Accumulated time: func 46.4464    prepare 13.5221    bound 21.1654    beta_bound 21.1625    transfer 0.0892    finalize 11.3101    
batch bounding time:  1.608332872390747
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3301
Time: pickout 0.0045    decision 0.2768    set_bounds 0.0508    solve 1.6084    add 0.0095    
Accumulated time: pickout 0.1406    decision 5.9036    set_bounds 2.8296    solve 46.6340    add 0.6740    
Current (lb-rhs): -2.64752459526062
31909 domains visited
Cumulative time: 56.727994203567505

BaB round 33
batch: 1024
Average branched neurons at iteration 33:  1.0000
splitting decisions: 
split level 0: [/input.27, 32] [/input.23, 35] [/input, 87] [/input.23, 95] [/input.23, 78] [/input.23, 67] [/input.23, 43] [/input, 75] [/input, 75] [/input.19, 11] 
pruning_in_iteration open status: True
ratio of positive domain = 1076 / 2048 = 0.525390625
pruning-in-iteration extra time: 0.019201278686523438
Time: prepare 0.5225    beta_bound 0.6808    bound 0.6809    transfer 0.0033    finalize 0.3474    func 1.5546    
Accumulated time: func 48.0010    prepare 14.0454    bound 21.8462    beta_bound 21.8433    transfer 0.0926    finalize 11.6575    
batch bounding time:  1.6960053443908691
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3249
Time: pickout 0.0043    decision 0.1476    set_bounds 0.0511    solve 1.6961    add 0.0095    
Accumulated time: pickout 0.1449    decision 6.0511    set_bounds 2.8807    solve 48.3301    add 0.6835    
Current (lb-rhs): -2.64752459526062
32881 domains visited
Cumulative time: 58.65397787094116

BaB round 34
batch: 1024
Average branched neurons at iteration 34:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input.27, 76] [/input, 60] [/input, 60] [/input, 60] [/input, 60] [/input, 60] [/input, 60] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1114 / 2048 = 0.5439453125
pruning-in-iteration extra time: 0.020198345184326172
Time: prepare 0.5057    beta_bound 0.6842    bound 0.6843    transfer 0.0045    finalize 0.3711    func 1.5664    
Accumulated time: func 49.5673    prepare 14.5517    bound 22.5306    beta_bound 22.5275    transfer 0.0971    finalize 12.0286    
batch bounding time:  1.5676789283752441
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3159
Time: pickout 0.0046    decision 0.1571    set_bounds 0.0606    solve 1.5677    add 0.0094    
Accumulated time: pickout 0.1495    decision 6.2082    set_bounds 2.9413    solve 49.8978    add 0.6929    
Current (lb-rhs): -2.64752459526062
33815 domains visited
Cumulative time: 60.471298933029175

BaB round 35
batch: 1024
Average branched neurons at iteration 35:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input, 60] [/input.23, 31] [/input.27, 32] [/input, 60] [/input.23, 31] [/input, 60] [/input.23, 31] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1236 / 2048 = 0.603515625
pruning-in-iteration extra time: 0.01926875114440918
Time: prepare 0.4914    beta_bound 0.6615    bound 0.6616    transfer 0.0027    finalize 0.5220    func 1.6782    
Accumulated time: func 51.2455    prepare 15.0438    bound 23.1921    beta_bound 23.1890    transfer 0.0998    finalize 12.5507    
batch bounding time:  1.6792571544647217
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2947
Time: pickout 0.0056    decision 0.2831    set_bounds 0.0492    solve 1.6793    add 0.0097    
Accumulated time: pickout 0.1550    decision 6.4913    set_bounds 2.9905    solve 51.5771    add 0.7026    
Current (lb-rhs): -2.64752459526062
34627 domains visited
Cumulative time: 62.52076077461243

BaB round 36
batch: 1024
Average branched neurons at iteration 36:  1.0000
splitting decisions: 
split level 0: [/input.27, 76] [/input, 60] [/input, 60] [/input, 60] [/input.27, 76] [/input.27, 32] [/input, 60] [/input.23, 35] [/input.19, 11] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1107 / 2048 = 0.54052734375
pruning-in-iteration extra time: 0.01968073844909668
Time: prepare 0.5209    beta_bound 0.6484    bound 0.6486    transfer 0.0040    finalize 0.3549    func 1.5288    
Accumulated time: func 52.7744    prepare 15.5656    bound 23.8407    beta_bound 23.8374    transfer 0.1038    finalize 12.9056    
batch bounding time:  1.5299456119537354
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2864
Time: pickout 0.0047    decision 0.1626    set_bounds 0.0502    solve 1.5300    add 0.0091    
Accumulated time: pickout 0.1598    decision 6.6539    set_bounds 3.0406    solve 53.1071    add 0.7117    
Current (lb-rhs): -2.64752459526062
35568 domains visited
Cumulative time: 64.2952401638031

BaB round 37
batch: 1024
Average branched neurons at iteration 37:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input, 60] [/input, 60] [/input, 60] [/input.23, 78] [/input.27, 32] [/input.23, 78] [/input.27, 32] [/input.23, 33] [/input.23, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 1104 / 2048 = 0.5390625
pruning-in-iteration extra time: 0.019870519638061523
Time: prepare 0.4987    beta_bound 0.6864    bound 0.6865    transfer 0.0034    finalize 0.4670    func 1.6561    
Accumulated time: func 54.4305    prepare 16.0650    bound 24.5272    beta_bound 24.5238    transfer 0.1072    finalize 13.3726    
batch bounding time:  1.6572353839874268
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2784
Time: pickout 0.0045    decision 0.3289    set_bounds 0.0568    solve 1.6573    add 0.0089    
Accumulated time: pickout 0.1643    decision 6.9828    set_bounds 3.0974    solve 54.7643    add 0.7206    
Current (lb-rhs): -2.64752459526062
36512 domains visited
Cumulative time: 66.37002515792847

BaB round 38
batch: 1024
Average branched neurons at iteration 38:  1.0000
splitting decisions: 
split level 0: [/input.23, 41] [/input.23, 23] [/input.23, 6] [/input.23, 78] [/input.23, 78] [/input.23, 78] [/input.23, 23] [/input.23, 33] [/input, 60] [/input.23, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 955 / 2048 = 0.46630859375
pruning-in-iteration extra time: 0.018866777420043945
Time: prepare 0.5116    beta_bound 0.6423    bound 0.6424    transfer 0.0034    finalize 0.3525    func 1.6485    
Accumulated time: func 56.0790    prepare 16.5773    bound 25.1695    beta_bound 25.1661    transfer 0.1106    finalize 13.7251    
batch bounding time:  1.6496400833129883
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2853
Time: pickout 0.0044    decision 0.1463    set_bounds 0.0493    solve 1.6497    add 0.0097    
Accumulated time: pickout 0.1687    decision 7.1292    set_bounds 3.1467    solve 56.4140    add 0.7303    
Current (lb-rhs): -2.64752459526062
37605 domains visited
Cumulative time: 68.24578475952148

BaB round 39
batch: 1024
Average branched neurons at iteration 39:  1.0000
splitting decisions: 
split level 0: [/input.23, 78] [/input, 0] [/input.23, 31] [/input, 87] [/input.19, 11] [/input.11, 59] [/input, 87] [/input.19, 80] [/input.19, 80] [/input, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 846 / 2048 = 0.4130859375
pruning-in-iteration extra time: 0.022594690322875977
Time: prepare 0.5207    beta_bound 0.7102    bound 0.7103    transfer 0.0038    finalize 0.5333    func 1.7686    
Accumulated time: func 57.8476    prepare 17.0987    bound 25.8798    beta_bound 25.8763    transfer 0.1144    finalize 14.2585    
batch bounding time:  1.7706520557403564
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3031
Time: pickout 0.0043    decision 0.1652    set_bounds 0.0557    solve 1.7707    add 0.0107    
Accumulated time: pickout 0.1730    decision 7.2944    set_bounds 3.2024    solve 58.1847    add 0.7410    
Current (lb-rhs): -2.64752459526062
38807 domains visited
Cumulative time: 70.26724004745483

BaB round 40
batch: 1024
Average branched neurons at iteration 40:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input.27, 25] [/input.23, 31] [/input, 87] [/input.11, 59] [/input.19, 11] [/input.23, 78] [/input.23, 31] [/input.23, 41] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 860 / 2048 = 0.419921875
pruning-in-iteration extra time: 0.021140575408935547
Time: prepare 0.5265    beta_bound 0.7269    bound 0.7269    transfer 0.0029    finalize 0.5097    func 1.7665    
Accumulated time: func 59.6141    prepare 17.6259    bound 26.6067    beta_bound 26.6031    transfer 0.1172    finalize 14.7682    
batch bounding time:  1.7676126956939697
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3195
Time: pickout 0.0043    decision 0.1470    set_bounds 0.0500    solve 1.7676    add 0.0137    
Accumulated time: pickout 0.1772    decision 7.4414    set_bounds 3.2524    solve 59.9523    add 0.7547    
Current (lb-rhs): -2.64752459526062
39995 domains visited
Cumulative time: 72.26633906364441

BaB round 41
batch: 1024
Average branched neurons at iteration 41:  1.0000
splitting decisions: 
split level 0: [/input, 87] [/input.23, 33] [/input.23, 23] [/input.27, 32] [/input.23, 31] [/input, 60] [/input.23, 41] [/input.11, 59] [/input.19, 26] [/input.23, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 944 / 2048 = 0.4609375
pruning-in-iteration extra time: 0.01797938346862793
Time: prepare 0.4785    beta_bound 0.6536    bound 0.6537    transfer 0.0029    finalize 0.5161    func 1.6517    
Accumulated time: func 61.2658    prepare 18.1053    bound 27.2604    beta_bound 27.2567    transfer 0.1201    finalize 15.2843    
batch bounding time:  1.6528244018554688
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3275
Time: pickout 0.0065    decision 0.1690    set_bounds 0.0552    solve 1.6529    add 0.0104    
Accumulated time: pickout 0.1837    decision 7.6104    set_bounds 3.3076    solve 61.6052    add 0.7651    
Current (lb-rhs): -2.64752459526062
41099 domains visited
Cumulative time: 74.17570757865906

BaB round 42
batch: 1024
Average branched neurons at iteration 42:  1.0000
splitting decisions: 
split level 0: [/input.23, 23] [/input.23, 67] [/input.15, 47] [/input, 87] [/input.27, 32] [/input.23, 33] [/input.19, 26] [/input.23, 89] [/input.15, 47] [/input.19, 80] 
pruning_in_iteration open status: True
ratio of positive domain = 979 / 2048 = 0.47802734375
pruning-in-iteration extra time: 0.018273591995239258
Time: prepare 0.5065    beta_bound 0.6782    bound 0.6783    transfer 0.0029    finalize 0.5275    func 1.7169    
Accumulated time: func 62.9828    prepare 18.6125    bound 27.9387    beta_bound 27.9349    transfer 0.1230    finalize 15.8118    
batch bounding time:  1.7181060314178467
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3320
Time: pickout 0.0063    decision 0.1471    set_bounds 0.0522    solve 1.7181    add 0.0120    
Accumulated time: pickout 0.1901    decision 7.7576    set_bounds 3.3598    solve 63.3233    add 0.7771    
Current (lb-rhs): -2.64752459526062
42168 domains visited
Cumulative time: 76.13063883781433

BaB round 43
batch: 1024
Average branched neurons at iteration 43:  1.0000
splitting decisions: 
split level 0: [/input.19, 11] [/input, 87] [/input.23, 41] [/input.23, 4] [/input.27, 40] [/input.23, 95] [/input.27, 32] [/input.23, 41] [/input.23, 95] [/input.23, 78] 
pruning_in_iteration open status: True
ratio of positive domain = 1016 / 2048 = 0.49609375
pruning-in-iteration extra time: 0.019064903259277344
Time: prepare 0.5212    beta_bound 0.6363    bound 0.6363    transfer 0.0030    finalize 0.5372    func 1.6982    
Accumulated time: func 64.6809    prepare 19.1347    bound 28.5750    beta_bound 28.5712    transfer 0.1260    finalize 16.3490    
batch bounding time:  1.7005724906921387
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3328
Time: pickout 0.0054    decision 0.1691    set_bounds 0.0547    solve 1.7006    add 0.0098    
Accumulated time: pickout 0.1955    decision 7.9266    set_bounds 3.4146    solve 65.0239    add 0.7869    
Current (lb-rhs): -2.64752459526062
43200 domains visited
Cumulative time: 78.08991169929504

BaB round 44
batch: 1024
Average branched neurons at iteration 44:  1.0000
splitting decisions: 
split level 0: [/input.23, 23] [/input, 87] [/input.23, 67] [/input, 75] [/input.23, 41] [/input.19, 11] [/input, 75] [/input, 75] [/input.23, 41] [/input.7, 39] 
pruning_in_iteration open status: True
ratio of positive domain = 1091 / 2048 = 0.53271484375
pruning-in-iteration extra time: 0.020916223526000977
Time: prepare 0.5568    beta_bound 0.6683    bound 0.6684    transfer 0.0029    finalize 0.5372    func 1.7659    
Accumulated time: func 66.4468    prepare 19.6922    bound 29.2435    beta_bound 29.2395    transfer 0.1289    finalize 16.8862    
batch bounding time:  1.7670550346374512
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3261
Time: pickout 0.0078    decision 0.1704    set_bounds 0.0650    solve 1.7671    add 0.0112    
Accumulated time: pickout 0.2032    decision 8.0971    set_bounds 3.4796    solve 66.7910    add 0.7981    
Current (lb-rhs): -2.64752459526062
44157 domains visited
Cumulative time: 80.13204383850098

BaB round 45
batch: 1024
Average branched neurons at iteration 45:  1.0000
splitting decisions: 
split level 0: [/input.19, 80] [/input.23, 67] [/input.23, 51] [/input.23, 23] [/input.23, 41] [/input, 87] [/input.23, 41] [/input.23, 41] [/input.23, 41] [/input, 87] 
pruning_in_iteration open status: True
ratio of positive domain = 1088 / 2048 = 0.53125
pruning-in-iteration extra time: 0.018715620040893555
Time: prepare 0.4770    beta_bound 0.6684    bound 0.6685    transfer 0.0037    finalize 0.4919    func 1.6417    
Accumulated time: func 68.0885    prepare 20.1700    bound 29.9120    beta_bound 29.9079    transfer 0.1326    finalize 17.3781    
batch bounding time:  1.643371343612671
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3197
Time: pickout 0.0086    decision 0.1658    set_bounds 0.0519    solve 1.6434    add 0.0117    
Accumulated time: pickout 0.2119    decision 8.2629    set_bounds 3.5314    solve 68.4344    add 0.8098    
Current (lb-rhs): -2.64752459526062
45117 domains visited
Cumulative time: 82.03717088699341

BaB round 46
batch: 1024
Average branched neurons at iteration 46:  1.0000
splitting decisions: 
split level 0: [/input.19, 80] [/input, 87] [/input.23, 33] [/input, 0] [/input.19, 26] [/input.19, 79] [/input.23, 41] [/input.23, 31] [/input.23, 55] [/input.11, 59] 
pruning_in_iteration open status: True
ratio of positive domain = 1166 / 2048 = 0.5693359375
pruning-in-iteration extra time: 0.022223472595214844
Time: prepare 0.5372    beta_bound 0.6650    bound 0.6651    transfer 0.0033    finalize 0.5264    func 1.7325    
Accumulated time: func 69.8210    prepare 20.7078    bound 30.5771    beta_bound 30.5729    transfer 0.1359    finalize 17.9045    
batch bounding time:  1.7337193489074707
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3055
Time: pickout 0.0051    decision 0.2826    set_bounds 0.0528    solve 1.7338    add 0.0092    
Accumulated time: pickout 0.2170    decision 8.5455    set_bounds 3.5842    solve 70.1682    add 0.8190    
Current (lb-rhs): -2.64752459526062
45999 domains visited
Cumulative time: 84.14298939704895

BaB round 47
batch: 1024
Average branched neurons at iteration 47:  1.0000
splitting decisions: 
split level 0: [/input.23, 89] [/input, 0] [/input.15, 47] [/input.19, 80] [/input.19, 80] [/input.15, 47] [/input.15, 47] [/input.11, 59] [/input.15, 47] [/input.19, 11] 
pruning_in_iteration open status: True
ratio of positive domain = 1211 / 2048 = 0.59130859375
pruning-in-iteration extra time: 0.020073413848876953
Time: prepare 0.4812    beta_bound 0.6514    bound 0.6515    transfer 0.0032    finalize 0.4153    func 1.7035    
Accumulated time: func 71.5245    prepare 21.1897    bound 31.2285    beta_bound 31.2243    transfer 0.1391    finalize 18.3198    
batch bounding time:  1.704681634902954
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2868
Time: pickout 0.0046    decision 0.1479    set_bounds 0.0535    solve 1.7047    add 0.0107    
Accumulated time: pickout 0.2216    decision 8.6934    set_bounds 3.6377    solve 71.8729    add 0.8298    
Current (lb-rhs): -2.64752459526062
46836 domains visited
Cumulative time: 86.0877890586853

BaB round 48
batch: 1024
Average branched neurons at iteration 48:  1.0000
splitting decisions: 
split level 0: [/input.19, 80] [/input.19, 1] [/input.19, 26] [/input, 87] [/input.19, 80] [/input.19, 80] [/input.23, 41] [/input.19, 1] [/input.23, 67] [/input.23, 23] 
pruning_in_iteration open status: True
ratio of positive domain = 1165 / 2048 = 0.56884765625
pruning-in-iteration extra time: 0.020299673080444336
Time: prepare 0.4799    beta_bound 0.6536    bound 0.6537    transfer 0.0035    finalize 0.3634    func 1.5010    
Accumulated time: func 73.0255    prepare 21.6703    bound 31.8822    beta_bound 31.8779    transfer 0.1426    finalize 18.6832    
batch bounding time:  1.63895845413208
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2727
Time: pickout 0.0047    decision 0.1492    set_bounds 0.0552    solve 1.6390    add 0.0087    
Accumulated time: pickout 0.2263    decision 8.8426    set_bounds 3.6929    solve 73.5119    add 0.8385    
Current (lb-rhs): -2.64752459526062
47719 domains visited
Cumulative time: 87.9655032157898

BaB round 49
batch: 1024
Average branched neurons at iteration 49:  1.0000
splitting decisions: 
split level 0: [/input.27, 32] [/input.27, 9] [/input.27, 76] [/input.27, 9] [/input.27, 40] [/input.27, 25] [/input.23, 31] [/input.27, 9] [/input.27, 25] [/input.27, 76] 
pruning_in_iteration open status: True
ratio of positive domain = 1024 / 2048 = 0.5
pruning-in-iteration extra time: 0.019225597381591797
Time: prepare 0.5100    beta_bound 0.6769    bound 0.6770    transfer 0.0035    finalize 0.5169    func 1.7080    
Accumulated time: func 74.7335    prepare 22.1809    bound 32.5592    beta_bound 32.5548    transfer 0.1462    finalize 19.2001    
batch bounding time:  1.7093195915222168
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2727
Time: pickout 0.0047    decision 0.1587    set_bounds 0.0563    solve 1.7094    add 0.0110    
Accumulated time: pickout 0.2310    decision 9.0013    set_bounds 3.7492    solve 75.2213    add 0.8495    
Current (lb-rhs): -2.64752459526062
48743 domains visited
Cumulative time: 89.92547631263733

BaB round 50
batch: 1024
Average branched neurons at iteration 50:  1.0000
splitting decisions: 
split level 0: [/input.23, 23] [/input.23, 35] [/input, 60] [/input.27, 84] [/input.23, 41] [/input, 60] [/input, 60] [/input, 60] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1046 / 2048 = 0.5107421875
pruning-in-iteration extra time: 0.021386146545410156
Time: prepare 0.4693    beta_bound 0.6998    bound 0.6998    transfer 0.0028    finalize 0.5798    func 1.7523    
Accumulated time: func 76.4859    prepare 22.6509    bound 33.2591    beta_bound 33.2546    transfer 0.1490    finalize 19.7799    
batch bounding time:  1.7534515857696533
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2705
Time: pickout 0.0048    decision 0.1532    set_bounds 0.0523    solve 1.7535    add 0.0104    
Accumulated time: pickout 0.2357    decision 9.1545    set_bounds 3.8015    solve 76.9747    add 0.8599    
Current (lb-rhs): -2.64752459526062
49745 domains visited
Cumulative time: 91.92182636260986

BaB round 51
batch: 1024
Average branched neurons at iteration 51:  1.0000
splitting decisions: 
split level 0: [/input.27, 49] [/input.27, 76] [/input, 60] [/input, 60] [/input.23, 23] [/input, 60] [/input, 60] [/input, 60] [/input.23, 41] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1045 / 2048 = 0.51025390625
pruning-in-iteration extra time: 0.020132780075073242
Time: prepare 0.5460    beta_bound 0.6979    bound 0.6980    transfer 0.0029    finalize 0.3603    func 1.7501    
Accumulated time: func 78.2359    prepare 23.1977    bound 33.9570    beta_bound 33.9524    transfer 0.1519    finalize 20.1402    
batch bounding time:  1.7512197494506836
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2684
Time: pickout 0.0048    decision 0.1506    set_bounds 0.0509    solve 1.7513    add 0.0116    
Accumulated time: pickout 0.2405    decision 9.3051    set_bounds 3.8524    solve 78.7260    add 0.8715    
Current (lb-rhs): -2.64752459526062
50748 domains visited
Cumulative time: 93.91109347343445

BaB round 52
batch: 1024
Average branched neurons at iteration 52:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input.23, 31] [/input.27, 25] [/input.27, 49] [/input.27, 25] [/input.23, 23] [/input.23, 35] [/input.23, 41] [/input.27, 10] [/input.23, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 1010 / 2048 = 0.4931640625
pruning-in-iteration extra time: 0.019847631454467773
Time: prepare 0.5120    beta_bound 0.6715    bound 0.6716    transfer 0.0030    finalize 0.6551    func 1.8422    
Accumulated time: func 80.0781    prepare 23.7104    bound 34.6286    beta_bound 34.6239    transfer 0.1548    finalize 20.7953    
batch bounding time:  1.8443243503570557
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2698
Time: pickout 0.0045    decision 0.1748    set_bounds 0.0576    solve 1.8444    add 0.0105    
Accumulated time: pickout 0.2450    decision 9.4799    set_bounds 3.9099    solve 80.5703    add 0.8820    
Current (lb-rhs): -2.64752459526062
51786 domains visited
Cumulative time: 96.02303457260132

BaB round 53
batch: 1024
Average branched neurons at iteration 53:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input.19, 11] [/input.11, 59] [/input.27, 84] [/input, 60] [/input.27, 74] [/input, 60] [/input.11, 59] [/input, 60] [/input.27, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 1086 / 2048 = 0.5302734375
pruning-in-iteration extra time: 0.02390575408935547
Time: prepare 0.8435    beta_bound 0.6874    bound 0.6875    transfer 0.0029    finalize 0.5367    func 2.0710    
Accumulated time: func 82.1491    prepare 24.5548    bound 35.3161    beta_bound 35.3113    transfer 0.1577    finalize 21.3320    
batch bounding time:  2.072099447250366
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2636
Time: pickout 0.0070    decision 0.2034    set_bounds 0.0600    solve 2.0721    add 0.0112    
Accumulated time: pickout 0.2521    decision 9.6833    set_bounds 3.9699    solve 82.6425    add 0.8932    
Current (lb-rhs): -2.64752459526062
52748 domains visited
Cumulative time: 98.40035367012024

BaB round 54
batch: 1024
Average branched neurons at iteration 54:  1.0000
splitting decisions: 
split level 0: [/input.23, 41] [/input.23, 41] [/input.27, 25] [/input.23, 41] [/input, 60] [/input, 60] [/input.27, 9] [/input, 60] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1038 / 2048 = 0.5068359375
pruning-in-iteration extra time: 0.020468950271606445
Time: prepare 0.5247    beta_bound 0.6503    bound 0.6504    transfer 0.0038    finalize 0.5555    func 1.7349    
Accumulated time: func 83.8840    prepare 25.0802    bound 35.9665    beta_bound 35.9616    transfer 0.1615    finalize 21.8875    
batch bounding time:  1.7361929416656494
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2622
Time: pickout 0.0043    decision 0.1691    set_bounds 0.0574    solve 1.7362    add 0.0094    
Accumulated time: pickout 0.2563    decision 9.8525    set_bounds 4.0273    solve 84.3787    add 0.9026    
Current (lb-rhs): -2.64752459526062
53758 domains visited
Cumulative time: 100.3951005935669

BaB round 55
batch: 1024
Average branched neurons at iteration 55:  1.0000
splitting decisions: 
split level 0: [/input.27, 25] [/input.23, 31] [/input.27, 25] [/input.27, 25] [/input.27, 25] [/input.27, 25] [/input.23, 41] [/input.23, 41] [/input.27, 9] [/input.23, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 1025 / 2048 = 0.50048828125
pruning-in-iteration extra time: 0.020742416381835938
Time: prepare 0.4942    beta_bound 0.6617    bound 0.6618    transfer 0.0029    finalize 0.4938    func 1.6547    
Accumulated time: func 85.5387    prepare 25.5751    bound 36.6283    beta_bound 36.6233    transfer 0.1644    finalize 22.3812    
batch bounding time:  1.6558473110198975
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2621
Time: pickout 0.0045    decision 0.1674    set_bounds 0.0505    solve 1.6559    add 0.0098    
Accumulated time: pickout 0.2608    decision 10.0198    set_bounds 4.0778    solve 86.0346    add 0.9124    
Current (lb-rhs): -2.64752459526062
54781 domains visited
Cumulative time: 102.30234980583191

BaB round 56
batch: 1024
Average branched neurons at iteration 56:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input, 60] [/input, 60] [/input.27, 32] [/input, 60] [/input.27, 84] [/input.27, 9] [/input, 60] [/input, 60] [/input.23, 35] 
pruning_in_iteration open status: True
ratio of positive domain = 1047 / 2048 = 0.51123046875
pruning-in-iteration extra time: 0.020102262496948242
Time: prepare 0.5255    beta_bound 0.6385    bound 0.6386    transfer 0.0053    finalize 0.3855    func 1.5556    
Accumulated time: func 87.0943    prepare 26.1012    bound 37.2669    beta_bound 37.2617    transfer 0.1698    finalize 22.7667    
batch bounding time:  1.557974100112915
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2598
Time: pickout 0.0061    decision 0.1711    set_bounds 0.2026    solve 1.5580    add 0.0098    
Accumulated time: pickout 0.2669    decision 10.1910    set_bounds 4.2804    solve 87.5926    add 0.9221    
Current (lb-rhs): -2.64752459526062
55782 domains visited
Cumulative time: 104.26844310760498

BaB round 57
batch: 1024
Average branched neurons at iteration 57:  1.0000
splitting decisions: 
split level 0: [/input.27, 25] [/input.23, 23] [/input.27, 25] [/input.23, 35] [/input.27, 25] [/input.27, 9] [/input.27, 25] [/input.27, 76] [/input.27, 25] [/input.27, 49] 
pruning_in_iteration open status: True
ratio of positive domain = 1089 / 2048 = 0.53173828125
pruning-in-iteration extra time: 0.01934337615966797
Time: prepare 0.5321    beta_bound 0.6838    bound 0.6839    transfer 0.0031    finalize 0.3530    func 1.5726    
Accumulated time: func 88.6669    prepare 26.6340    bound 37.9508    beta_bound 37.9456    transfer 0.1728    finalize 23.1197    
batch bounding time:  1.5737559795379639
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2533
Time: pickout 0.0050    decision 0.1520    set_bounds 0.1953    solve 1.5738    add 0.0093    
Accumulated time: pickout 0.2719    decision 10.3430    set_bounds 4.4757    solve 89.1664    add 0.9314    
Current (lb-rhs): -2.64752459526062
56741 domains visited
Cumulative time: 106.2220389842987

BaB round 58
batch: 1024
Average branched neurons at iteration 58:  1.0000
splitting decisions: 
split level 0: [/input.27, 32] [/input.27, 25] [/input.27, 9] [/input.23, 23] [/input.27, 9] [/input.27, 25] [/input.27, 9] [/input.27, 9] [/input.27, 25] [/input.27, 76] 
pruning_in_iteration open status: True
ratio of positive domain = 1017 / 2048 = 0.49658203125
pruning-in-iteration extra time: 0.018384695053100586
Time: prepare 0.5358    beta_bound 0.6622    bound 0.6623    transfer 0.0028    finalize 0.3572    func 1.5602    
Accumulated time: func 90.2271    prepare 27.1705    bound 38.6132    beta_bound 38.6078    transfer 0.1756    finalize 23.4769    
batch bounding time:  1.5613694190979004
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2540
Time: pickout 0.0045    decision 0.1559    set_bounds 0.1931    solve 1.5614    add 0.0096    
Accumulated time: pickout 0.2764    decision 10.4989    set_bounds 4.6688    solve 90.7278    add 0.9410    
Current (lb-rhs): -2.64752459526062
57772 domains visited
Cumulative time: 108.16365122795105

BaB round 59
batch: 1024
Average branched neurons at iteration 59:  1.0000
splitting decisions: 
split level 0: [/input.27, 84] [/input, 60] [/input, 60] [/input.27, 9] [/input.27, 9] [/input.23, 31] [/input, 60] [/input, 60] [/input.19, 11] [/input.23, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 1047 / 2048 = 0.51123046875
pruning-in-iteration extra time: 0.01947498321533203
Time: prepare 0.4821    beta_bound 0.6945    bound 0.6946    transfer 0.0027    finalize 0.3737    func 1.5536    
Accumulated time: func 91.7808    prepare 27.6533    bound 39.3078    beta_bound 39.3023    transfer 0.1783    finalize 23.8507    
batch bounding time:  1.5557529926300049
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2517
Time: pickout 0.0046    decision 0.1470    set_bounds 0.1901    solve 1.5558    add 0.0092    
Accumulated time: pickout 0.2810    decision 10.6459    set_bounds 4.8590    solve 92.2836    add 0.9502    
Current (lb-rhs): -2.64752459526062
58773 domains visited
Cumulative time: 110.08821415901184

BaB round 60
batch: 1024
Average branched neurons at iteration 60:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input, 60] [/input, 60] [/input.23, 27] [/input.23, 31] [/input, 60] [/input.23, 31] [/input.23, 78] [/input, 60] [/input.23, 43] 
pruning_in_iteration open status: True
ratio of positive domain = 1057 / 2048 = 0.51611328125
pruning-in-iteration extra time: 0.02071547508239746
Time: prepare 0.4709    beta_bound 0.6984    bound 0.6984    transfer 0.0028    finalize 0.3866    func 1.5593    
Accumulated time: func 93.3401    prepare 28.1249    bound 40.0062    beta_bound 40.0007    transfer 0.1812    finalize 24.2372    
batch bounding time:  1.5603961944580078
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2484
Time: pickout 0.0042    decision 0.1468    set_bounds 0.1784    solve 1.5604    add 0.0112    
Accumulated time: pickout 0.2852    decision 10.7927    set_bounds 5.0373    solve 93.8440    add 0.9614    
Current (lb-rhs): -2.64752459526062
59764 domains visited
Cumulative time: 112.00867056846619

BaB round 61
batch: 1024
Average branched neurons at iteration 61:  1.0000
splitting decisions: 
split level 0: [/input.23, 78] [/input, 60] [/input.23, 78] [/input, 60] [/input.23, 78] [/input, 60] [/input.23, 78] [/input, 60] [/input.23, 33] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1055 / 2048 = 0.51513671875
pruning-in-iteration extra time: 0.021172046661376953
Time: prepare 0.5367    beta_bound 0.6589    bound 0.6590    transfer 0.0039    finalize 0.3622    func 1.5637    
Accumulated time: func 94.9038    prepare 28.6626    bound 40.6652    beta_bound 40.6596    transfer 0.1851    finalize 24.5995    
batch bounding time:  1.564840316772461
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2453
Time: pickout 0.0043    decision 0.1673    set_bounds 0.1941    solve 1.5649    add 0.0091    
Accumulated time: pickout 0.2895    decision 10.9599    set_bounds 5.2315    solve 95.4089    add 0.9705    
Current (lb-rhs): -2.64752459526062
60757 domains visited
Cumulative time: 113.96540641784668

BaB round 62
batch: 1024
Average branched neurons at iteration 62:  1.0000
splitting decisions: 
split level 0: [/input.23, 41] [/input.23, 78] [/input.23, 78] [/input.27, 10] [/input.23, 33] [/input.23, 41] [/input.23, 78] [/input, 60] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1137 / 2048 = 0.55517578125
pruning-in-iteration extra time: 0.020903587341308594
Time: prepare 0.5057    beta_bound 0.7138    bound 0.7140    transfer 0.0038    finalize 0.3661    func 1.5901    
Accumulated time: func 96.4939    prepare 29.1690    bound 41.3792    beta_bound 41.3734    transfer 0.1889    finalize 24.9656    
batch bounding time:  1.5921978950500488
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2340
Time: pickout 0.0043    decision 0.1555    set_bounds 0.1867    solve 1.5922    add 0.0088    
Accumulated time: pickout 0.2937    decision 11.1154    set_bounds 5.4182    solve 97.0011    add 0.9793    
Current (lb-rhs): -2.64752459526062
61668 domains visited
Cumulative time: 115.93301582336426

BaB round 63
batch: 1024
Average branched neurons at iteration 63:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input.27, 76] [/input.27, 76] [/input.23, 41] [/input.23, 41] [/input.23, 33] [/input, 60] [/input, 60] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1136 / 2048 = 0.5546875
pruning-in-iteration extra time: 0.018874168395996094
Time: prepare 0.4789    beta_bound 0.6377    bound 0.6378    transfer 0.0037    finalize 0.3756    func 1.4966    
Accumulated time: func 97.9905    prepare 29.6486    bound 42.0170    beta_bound 42.0111    transfer 0.1926    finalize 25.3412    
batch bounding time:  1.497685194015503
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2228
Time: pickout 0.0043    decision 0.1681    set_bounds 0.1925    solve 1.4977    add 0.0111    
Accumulated time: pickout 0.2980    decision 11.2835    set_bounds 5.6107    solve 98.4988    add 0.9904    
Current (lb-rhs): -2.64752459526062
62580 domains visited
Cumulative time: 117.82625818252563

BaB round 64
batch: 1024
Average branched neurons at iteration 64:  1.0000
splitting decisions: 
split level 0: [/input, 60] [/input, 60] [/input.27, 49] [/input, 60] [/input.23, 31] [/input.23, 41] [/input.27, 32] [/input.27, 10] [/input, 60] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1036 / 2048 = 0.505859375
pruning-in-iteration extra time: 0.020432710647583008
Time: prepare 0.4881    beta_bound 0.6831    bound 0.6831    transfer 0.0028    finalize 0.3384    func 1.5144    
Accumulated time: func 99.5049    prepare 30.1376    bound 42.7001    beta_bound 42.6942    transfer 0.1955    finalize 25.6795    
batch bounding time:  1.5155024528503418
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2216
Time: pickout 0.0044    decision 0.1737    set_bounds 0.1914    solve 1.5155    add 0.0091    
Accumulated time: pickout 0.3025    decision 11.4572    set_bounds 5.8021    solve 100.0144    add 0.9995    
Current (lb-rhs): -2.64752459526062
63592 domains visited
Cumulative time: 119.7374050617218

BaB round 65
batch: 1024
Average branched neurons at iteration 65:  1.0000
splitting decisions: 
split level 0: [/input.27, 10] [/input.23, 41] [/input.23, 35] [/input.27, 76] [/input.23, 41] [/input, 60] [/input.27, 76] [/input.27, 10] [/input.23, 41] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 1126 / 2048 = 0.5498046875
pruning-in-iteration extra time: 0.018532991409301758
Time: prepare 0.4646    beta_bound 0.6418    bound 0.6419    transfer 0.0039    finalize 0.3829    func 1.4939    
Accumulated time: func 100.9989    prepare 30.6029    bound 43.3421    beta_bound 43.3360    transfer 0.1994    finalize 26.0625    
batch bounding time:  1.4960064888000488
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2114
Time: pickout 0.0043    decision 0.1470    set_bounds 0.1735    solve 1.4960    add 0.0087    
Accumulated time: pickout 0.3068    decision 11.6043    set_bounds 5.9757    solve 101.5104    add 1.0082    
Current (lb-rhs): -2.64752459526062
64514 domains visited
Cumulative time: 121.58698272705078

BaB round 66
batch: 1024
Average branched neurons at iteration 66:  1.0000
splitting decisions: 
split level 0: [/input.27, 9] [/input.27, 76] [/input.23, 35] [/input.23, 31] [/input.23, 35] [/input.23, 35] [/input.27, 25] [/input.27, 32] [/input.27, 9] [/input.27, 49] 
pruning_in_iteration open status: True
ratio of positive domain = 1056 / 2048 = 0.515625
pruning-in-iteration extra time: 0.01845383644104004
Time: prepare 0.5144    beta_bound 0.6424    bound 0.6425    transfer 0.0028    finalize 0.3786    func 1.5388    
Accumulated time: func 102.5377    prepare 31.1180    bound 43.9846    beta_bound 43.9784    transfer 0.2022    finalize 26.4411    
batch bounding time:  1.5398468971252441
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2082
Time: pickout 0.0053    decision 0.1682    set_bounds 0.1846    solve 1.5399    add 0.0091    
Accumulated time: pickout 0.3121    decision 11.7725    set_bounds 6.1603    solve 103.0503    add 1.0172    
Current (lb-rhs): -2.64752459526062
65506 domains visited
Cumulative time: 123.51088762283325

BaB round 67
batch: 1024
Average branched neurons at iteration 67:  1.0000
splitting decisions: 
split level 0: [/input.23, 35] [/input.27, 10] [/input.23, 41] [/input.23, 41] [/input.27, 10] [/input.27, 49] [/input.27, 10] [/input.23, 31] [/input.27, 10] [/input.27, 10] 
pruning_in_iteration open status: True
ratio of positive domain = 821 / 2048 = 0.40087890625
pruning-in-iteration extra time: 0.021605968475341797
Time: prepare 0.4949    beta_bound 0.6962    bound 0.6962    transfer 0.0027    finalize 0.3352    func 1.5309    
Accumulated time: func 104.0686    prepare 31.6135    bound 44.6808    beta_bound 44.6746    transfer 0.2049    finalize 26.7763    
batch bounding time:  1.5319714546203613
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2285
Time: pickout 0.0045    decision 0.1453    set_bounds 0.1647    solve 1.5320    add 0.0104    
Accumulated time: pickout 0.3166    decision 11.9177    set_bounds 6.3250    solve 104.5823    add 1.0276    
Current (lb-rhs): -2.64752459526062
66733 domains visited
Cumulative time: 125.38693881034851

BaB round 68
batch: 1024
Average branched neurons at iteration 68:  1.0000
splitting decisions: 
split level 0: [/input.23, 43] [/input, 87] [/input, 0] [/input.23, 43] [/input, 0] [/input.23, 43] [/input.23, 43] [/input.19, 80] [/input, 0] [/input.23, 95] 
pruning_in_iteration open status: True
ratio of positive domain = 720 / 2048 = 0.3515625
pruning-in-iteration extra time: 0.021445274353027344
Time: prepare 0.4778    beta_bound 0.6851    bound 0.6852    transfer 0.0031    finalize 0.3363    func 1.5030    
Accumulated time: func 105.5715    prepare 32.0920    bound 45.3660    beta_bound 45.3597    transfer 0.2080    finalize 27.1126    
batch bounding time:  1.5048880577087402
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2589
Time: pickout 0.0056    decision 0.1608    set_bounds 0.1832    solve 1.5049    add 0.0141    
Accumulated time: pickout 0.3222    decision 12.0785    set_bounds 6.5081    solve 106.0872    add 1.0417    
Current (lb-rhs): -2.64752459526062
68061 domains visited
Cumulative time: 127.26990723609924

BaB round 69
batch: 1024
Average branched neurons at iteration 69:  1.0000
splitting decisions: 
split level 0: [/input, 87] [/input, 60] [/input, 60] [/input.27, 32] [/input.11, 59] [/input, 60] [/input.23, 95] [/input, 60] [/input.11, 59] [/input, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 743 / 2048 = 0.36279296875
pruning-in-iteration extra time: 0.020264148712158203
Time: prepare 0.4972    beta_bound 0.6896    bound 0.6897    transfer 0.0035    finalize 0.3783    func 1.5695    
Accumulated time: func 107.1410    prepare 32.5900    bound 46.0557    beta_bound 46.0493    transfer 0.2115    finalize 27.4909    
batch bounding time:  1.5713140964508057
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 2870
Time: pickout 0.0057    decision 0.1545    set_bounds 0.1752    solve 1.5714    add 0.0113    
Accumulated time: pickout 0.3279    decision 12.2330    set_bounds 6.6833    solve 107.6586    add 1.0529    
Current (lb-rhs): -2.64752459526062
69366 domains visited
Cumulative time: 129.2039942741394

BaB round 70
batch: 1024
Average branched neurons at iteration 70:  1.0000
splitting decisions: 
split level 0: [/input.15, 47] [/input.19, 11] [/input.23, 41] [/input, 60] [/input.27, 32] [/input.19, 26] [/input.19, 11] [/input.23, 41] [/input.23, 95] [/input.19, 11] 
pruning_in_iteration open status: True
ratio of positive domain = 825 / 2048 = 0.40283203125
pruning-in-iteration extra time: 0.021735191345214844
Time: prepare 0.5139    beta_bound 0.6717    bound 0.6718    transfer 0.0029    finalize 0.3632    func 1.5536    
Accumulated time: func 108.6946    prepare 33.1046    bound 46.7275    beta_bound 46.7210    transfer 0.2144    finalize 27.8541    
batch bounding time:  1.5548593997955322
Current worst splitting domains lb-rhs (depth):
-2.64752 (11), -2.55610 (11), -2.55392 (11), -2.54293 (11), -2.54232 (11), -2.54223 (11), -2.53536 (11), -2.53006 (11), -2.52266 (11), -2.51801 (11), -2.51045 (11), -2.49512 (11), -2.48832 (11), -2.48805 (11), -2.47945 (11), -2.47833 (11), -2.47460 (11), -2.46904 (11), -2.46784 (11), -2.46486 (11), 
length of domains: 3069
Time: pickout 0.0047    decision 0.1692    set_bounds 0.1974    solve 1.5549    add 0.0114    
Accumulated time: pickout 0.3326    decision 12.4022    set_bounds 6.8807    solve 109.2135    add 1.0643    
Current (lb-rhs): -2.64752459526062
70589 domains visited
Time out!!!!!!!!
Result: unknown in 901.3098 seconds
############# Summary #############
Final verified acc: 0.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 0 , total falsified (unsafe/sat): 0 , timeout: 1
mean time for ALL instances (total 1):901.300822902568, max time: 901.3098359107971
unknown (total 1), index: [0]
