Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_100
  path: mnist_9_100_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 53
  end: 54
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.026
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon Jan 16 00:13:29 2023 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_100]_start=53_end=54_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.80867857, -2.37042332, -2.23100662,  1.94248581, -3.40118361,
          6.53264761,  0.59598207, -3.86019969,  2.94964743,  1.43447447]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [40]; unstable size 40; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [61]; unstable size 61; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [90]; unstable size 90; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-198.43608093, -282.37454224, -298.01736450, -275.85656738,
         -333.24005127, -268.87960815, -360.65878296, -271.77770996,
         -317.30407715]], device='cuda:0') None
best_l after optimization: -1345.814453125 with beta sum per layer: []
alpha/beta optimization time: 11.218258380889893
initial alpha-CROWN bounds: tensor([[ -88.89543152, -151.17634583, -161.79132080, -149.01881409,
         -171.72929382, -131.35853577, -181.01005554, -146.41349792,
         -164.42121887]], device='cuda:0')
Worst class: (+ rhs) -181.0100555419922
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.0065000057220458984, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.80867857, -2.37042332, -2.23100662,  1.94248581, -3.40118361,
          6.53264761,  0.59598207, -3.86019969,  2.94964743,  1.43447447]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.79266459, -1.99811590, -1.72904444,  1.54812908, -2.49472952,
           4.95486498,  0.12718776, -2.94377923,  2.60641289,  1.52581406],
         [-0.79266459, -1.99811590, -1.72904444,  1.54812908, -2.49472952,
           4.95486498,  0.12718776, -2.94377923,  2.60641289,  1.52581406]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[5.74752951, 6.95298100, 6.68390942, 3.40673590, 7.44959450,
          4.82767725, 7.89864445, 2.34845209, 3.42905092]]], device='cuda:0')
number of violation:  0
Attack finished in 0.9166 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [40]; unstable size 40; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [61]; unstable size 61; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [90]; unstable size 90; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_85', 'lay4_88', 'lay4_16', 'lay4_96', 'lay4_49', 'lay4_7', 'lay4_78', 'lay4_90', 'lay4_86', 'lay4_23', 'lay4_75', 'lay4_97', 'lay4_0', 'lay4_53', 'lay4_82', 'lay4_28', 'lay4_18', 'lay4_1', 'lay4_40', 'lay4_10', 'lay4_95', 'lay4_3', 'lay4_99', 'lay4_43', 'lay4_20', 'lay4_21', 'lay4_67', 'lay4_42', 'lay4_11', 'lay4_70', 'lay4_24', 'lay4_60', 'lay4_38', 'lay4_39', 'lay4_52', 'lay4_79', 'lay4_83', 'lay4_5', 'lay4_98', 'lay4_59', 'lay4_37', 'lay4_50', 'lay4_54', 'lay4_33', 'lay4_65', 'lay4_41', 'lay4_6', 'lay4_8', 'lay4_77', 'lay4_30', 'lay4_63', 'lay4_48', 'lay4_62', 'lay4_87', 'lay4_72', 'lay4_45', 'lay4_74', 'lay4_51', 'lay4_26', 'lay4_47', 'lay4_9'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/data_utils.py:255: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6310s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_28, [-inf,inf]=>[-0.7854000865782407,0.8693745039017642] (2,-1; 2,-1), time: 0.7688s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_0, [-inf,inf]=>[-1.59272656285563,0.1934103996380903] (2,-1; 2,-1), time: 1.3933s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2027s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-0.9663146111219819,0.4088845089973859] (2,-1; 2,-1), time: 2.1981s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_96, [-inf,inf]=>[-1.3064789275147144,0.029178628140175664] (2,-1; 2,-1), time: 2.3736s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.7320323771356316,0.20926501559626445] (2,-1; 2,-1), time: 2.4196s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_90, [-inf,inf]=>[-2.0559345081358504,0.08294104383426852] (2,-1; 2,-1), time: 2.4844s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5204s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2408s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1767s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3843s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_23, [-inf,inf]=>[-1.2930640480651685,0.10070876261465367] (2,-1; 2,-1), time: 2.8022s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.1759800598572397,0.9983977774895048] (2,-1; 2,-1), time: 2.8628s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-0.7257719210974034,0.4041026959700015] (2,-1; 2,-1), time: 2.8955s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1900s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2669s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1867s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2193s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_82, [-inf,inf]=>[-0.29714421293126053,0.9420685060269219] (2,-1; 2,-1), time: 3.1487s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.4216567931465183,0.8954079280522211] (2,-1; 2,-1), time: 3.2241s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1866s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3921s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[-0.22473260284431823,0.5618070177796105] (2,-1; 2,-1), time: 3.3875s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_97, [-inf,inf]=>[-0.8006930509762039,0.27356356979701113] (2,-1; 2,-1), time: 3.4260s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1770s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2775s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6165s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_1, [-inf,inf]=>[-0.4511916469521564,0.35647235635003227] (2,-1; 2,-1), time: 2.9415s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_78, [-inf,inf]=>[-0.5562529274551552,0.23135354090748447] (2,-1; 2,-1), time: 4.3788s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_18, [-inf,inf]=>[-0.5335072068737822,0.31652896840995903] (2,-1; 2,-1), time: 4.1297s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_10, [-inf,inf]=>[-0.9351432689074615,0.16369367744507946] (2,-1; 2,-1), time: 3.1918s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[-0.49067065318256203,0.8405199928906647] (2,-1; 2,-1), time: 1.6625s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[-0.9949536385404496,0.07786291278767771] (2,-1; 2,-1), time: 2.5261s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_20, [-inf,inf]=>[-0.7989367093731998,0.02211750722123187] (2,-1; 2,-1), time: 2.8344s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_37, [-inf,inf]=>[-0.061966151747760975,1.1330271382893309] (2,-1; 2,-1), time: 2.0144s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_54, [-inf,inf]=>[-0.8930498953882683,0.3861625911829643] (2,-1; 2,-1), time: 2.0086s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1996s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.2590098351453943,0.6296052721473429] (2,-1; 2,-1), time: 3.6246s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1843s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[1e-05,1.784082057584048] (15,-1; 2,-1), time: 0.9389s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_5, [-inf,inf]=>[-0.6539855706582938,0.6638167499757166] (2,-1; 2,-1), time: 2.6238s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2243s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.954906357325416,0.40920325238781696] (2,-1; 2,-1), time: 2.9809s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2056s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1586s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_21, [-inf,inf]=>[-0.6688058140660241,0.560516777962351] (2,-1; 2,-1), time: 3.6345s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-0.5935845582064629,0.3135817870406853] (2,-1; 2,-1), time: 2.8216s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[1e-05,1.2202272626420012] (15,-1; 2,-1), time: 1.7857s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7396s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_50, [-inf,inf]=>[-0.023988290938549556,0.9547776840589238] (2,-1; 2,-1), time: 3.1863s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.4310441785762677,0.45629862580253766] (2,-1; 2,-1), time: 1.5284s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-1.01983732456754,0.3330264169271158] (2,-1; 2,-1), time: 3.4128s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.7228504296453314,0.2354060304136616] (2,-1; 2,-1), time: 4.1223s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.1459247932251233] (15,-1; 2,-1), time: 2.3125s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-0.8530652286912168,0.3169094007516789] (2,-1; 2,-1), time: 3.3136s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.5595603048469746,0.2186316066421664] (2,-1; 2,-1), time: 3.4260s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.28563118951193406,0.5902440592351863] (2,-1; 2,-1), time: 2.4779s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-0.26918817466632244,0.5325644861450219] (2,-1; 2,-1), time: 2.9462s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_62, [-inf,inf]=>[1e-05,1.0717150863628437] (15,-1; 2,-1), time: 3.2661s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[1e-05,0.7648119817676566] (15,-1; 2,-1), time: 3.0565s, #vars: 1065, #constrs: 320, improved: True
PGD done for relu layer 2
MIP improved 61 nodes out of 61 unstable nodes, lb improved 15.387578010559082, ub improved 16.19501304626465, time 10.9542
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_85', 'lay6_30', 'lay6_60', 'lay6_13', 'lay6_91', 'lay6_56', 'lay6_12', 'lay6_1', 'lay6_39', 'lay6_23', 'lay6_61', 'lay6_62', 'lay6_38', 'lay6_90', 'lay6_74', 'lay6_34', 'lay6_64', 'lay6_36', 'lay6_4', 'lay6_42', 'lay6_14', 'lay6_78', 'lay6_51', 'lay6_8', 'lay6_5', 'lay6_87', 'lay6_97', 'lay6_19', 'lay6_50', 'lay6_26', 'lay6_82', 'lay6_9', 'lay6_95', 'lay6_68', 'lay6_33', 'lay6_27', 'lay6_32', 'lay6_6', 'lay6_99', 'lay6_96', 'lay6_3', 'lay6_48', 'lay6_21', 'lay6_46', 'lay6_75', 'lay6_71', 'lay6_28', 'lay6_40', 'lay6_88', 'lay6_25', 'lay6_72', 'lay6_35', 'lay6_22', 'lay6_0', 'lay6_83', 'lay6_93', 'lay6_20', 'lay6_77', 'lay6_15', 'lay6_43', 'lay6_66', 'lay6_80', 'lay6_67', 'lay6_24', 'lay6_45', 'lay6_81', 'lay6_86', 'lay6_29', 'lay6_10', 'lay6_79', 'lay6_55', 'lay6_11', 'lay6_98', 'lay6_63', 'lay6_59', 'lay6_7', 'lay6_54', 'lay6_73', 'lay6_69', 'lay6_44', 'lay6_52', 'lay6_53', 'lay6_76', 'lay6_94', 'lay6_41', 'lay6_18', 'lay6_58', 'lay6_84'] filter: 1.0
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2239s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2322s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3056s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1926s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6029s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6458s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2382s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2648s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2066s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8374s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8829s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.9103s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.0044s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.1545s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0155s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-0.7131353009065762,0.39443630803160273] (2,-1; 2,-1), time: 7.8086s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.1790s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5828s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.3661075733842192,0.34470556566420313] (2,-1; 2,-1), time: 11.2722s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2317s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-0.5804476684424439,0.4528695023408233] (2,-1; 2,-1), time: 10.3007s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1690s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5597s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1762s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1767s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9405s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4959s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[-0.48079001276090577,0.27095285130584434] (2,-1; 2,-1), time: 17.0727s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-0.2714383534033571,0.2636839823626589] (2,-1; 2,-1), time: 14.6327s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_90, [-inf,inf]=>[-0.755956016058529,0.15363865522995113] (9,-1; 2,-1), time: 18.4997s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9939s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[-0.35916615331505325,0.5419801475037654] (2,-1; 2,-1), time: 14.4842s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7634s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-0.4180133050717962,0.0842416630542015] (2,-1; 2,-1), time: 9.6483s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-0.7473080920972838,0.13233938995529768] (2,-1; 9,-1), time: 22.1102s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-0.2126583696673869,0.3897250267537569] (2,-1; 9,-1), time: 20.1585s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.8610s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-0.7663224492130681,0.25913858364723075] (2,-1; 2,-1), time: 7.9426s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-0.28642714059216134,0.41839685993658343] (2,-1; 9,-1), time: 23.8947s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.5315914508594567,0.13101250775876] (2,-1; 9,-1), time: 20.2038s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_14, [-inf,inf]=>[-0.6847053232739212,0.03799416791603657] (9,-1; 2,-1), time: 25.0243s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[1e-05,1.1348715532999678] (15,-1; 2,-1), time: 6.6849s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1670s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2205s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_82, [-inf,inf]=>[-0.6857709188852728,0.03864008670049547] (2,-1; 9,-1), time: 21.1571s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[1e-05,1.481998527260223] (15,-1; 2,-1), time: 2.8768s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1658s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7654s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3144s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5927s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1651s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.30989380642350134,0.2446691995952623] (9,-1; 9,-1), time: 30.0149s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.6133981251860912,0.09578267752421245] (9,-1; 9,-1), time: 30.0139s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2149s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5551s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-0.6743377013144268,0.2800188097244581] (2,-1; 2,-1), time: 11.1066s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1763s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_6, [-inf,inf]=>[-0.5128505471480725,0.19894387732546753] (9,-1; 2,-1), time: 19.2646s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1683s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[1e-05,1.117187870184778] (15,-1; 2,-1), time: 4.5614s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-0.3193712661445898,0.412205136241478] (2,-1; 2,-1), time: 12.3316s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.04212176670603516,0.7780962826857645] (2,-1; 9,-1), time: 26.8739s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[-0.3755314145524645,0.22334062399125248] (2,-1; 9,-1), time: 19.1741s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1734s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1692s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.2845264307031047,0.23966464744268212] (2,-1; 9,-1), time: 22.7139s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_52, [-inf,inf]=>[1e-05,0.8455543033999399] (15,-1; 2,-1), time: 3.9775s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_59, [-inf,inf]=>[-0.008515994582970702,0.717032509884904] (2,-1; 2,-1), time: 15.4725s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-0.3194114051263368,0.30745509502401963] (9,-1; 2,-1), time: 23.0515s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-0.570628406373504,0.030522513433811453] (9,-1; 2,-1), time: 18.7045s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2137s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.33936943816111287,0.21253026884540263] (2,-1; 2,-1), time: 14.5024s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_40, [-inf,inf]=>[-0.5169751032936127,0.005635561931197048] (9,-1; 9,-1), time: 30.0095s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-0.2991249434037094,0.2726267743437582] (9,-1; 2,-1), time: 19.7605s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-0.48881176288833195,0.09644261193452018] (9,-1; 2,-1), time: 19.9487s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.8380856669880887] (15,-1; 2,-1), time: 3.1839s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_84, [-inf,inf]=>[1e-05,1.7353760785687664] (15,-1; 2,-1), time: 3.3612s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-0.22354980909073685,0.5221503794270178] (2,-1; 9,-1), time: 20.8533s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[-0.3903806251134122,0.2510081603159258] (2,-1; 9,-1), time: 29.5086s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.6197545290751483] (15,-1; 2,-1), time: 16.9290s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-0.18429881803069845,0.39994941101797227] (9,-1; 9,-1), time: 30.0110s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-0.5692849379162999,0.001691883996431079] (9,-1; 2,-1), time: 27.7853s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[-0.15621164619662037,0.3021997372534425] (9,-1; 9,-1), time: 30.0139s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.23758653282486675,0.3395150084148483] (9,-1; 2,-1), time: 22.9010s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[1e-05,0.6434153963295226] (15,-1; 2,-1), time: 11.5291s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[1e-05,0.914732482822549] (15,-1; 2,-1), time: 13.2185s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.3641682492514405,0.10490100764534632] (9,-1; 2,-1), time: 19.7384s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.025657262884234942,0.6663910355143309] (9,-1; 2,-1), time: 26.3899s, #vars: 1235, #constrs: 525, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 1 has unstable to stable neurons: [(16, -1), (49, -1), (40, -1), (3, -1), (99, -1), (43, -1), (42, -1), (11, -1), (70, -1), (24, -1), (60, -1), (52, -1), (79, -1), (98, -1), (59, -1), (6, 1), (77, 1), (30, 1), (48, -1), (62, 1), (87, -1), (72, -1), (45, -1), (51, -1), (26, 1), (47, -1)]
best_l after optimization: -501.26422119140625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 9.90174388885498
alpha-CROWN with intermediate bounds by MIP: tensor([[-32.98818588, -55.85081482, -60.18857193, -55.55183029, -64.14229584,
         -48.42745590, -67.21530151, -54.92773056, -61.97201920]],
       device='cuda:0') None
MIP improved 88 nodes out of 88 unstable nodes, lb improved 29.507139205932617, ub improved 43.26638412475586, time 73.9704
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_71', 'lay8_87', 'lay8_59', 'lay8_17', 'lay8_77', 'lay8_75', 'lay8_19', 'lay8_89', 'lay8_28', 'lay8_57', 'lay8_39', 'lay8_33', 'lay8_30', 'lay8_79', 'lay8_20', 'lay8_48', 'lay8_24', 'lay8_16', 'lay8_31', 'lay8_7', 'lay8_34', 'lay8_11', 'lay8_62', 'lay8_41', 'lay8_81', 'lay8_88', 'lay8_25', 'lay8_72', 'lay8_38', 'lay8_3', 'lay8_97', 'lay8_92', 'lay8_0', 'lay8_60', 'lay8_52', 'lay8_69', 'lay8_98', 'lay8_63', 'lay8_22', 'lay8_66', 'lay8_27', 'lay8_40', 'lay8_4', 'lay8_5', 'lay8_65', 'lay8_78', 'lay8_93', 'lay8_2', 'lay8_85', 'lay8_43', 'lay8_6', 'lay8_61', 'lay8_29', 'lay8_14', 'lay8_53', 'lay8_55', 'lay8_50', 'lay8_95', 'lay8_45', 'lay8_21', 'lay8_36', 'lay8_10', 'lay8_58', 'lay8_73', 'lay8_82', 'lay8_15', 'lay8_76', 'lay8_56', 'lay8_9', 'lay8_67', 'lay8_44', 'lay8_90', 'lay8_74', 'lay8_83', 'lay8_94', 'lay8_13', 'lay8_80', 'lay8_54', 'lay8_96', 'lay8_26', 'lay8_68', 'lay8_1', 'lay8_70', 'lay8_91', 'lay8_51', 'lay8_32', 'lay8_46', 'lay8_37', 'lay8_99', 'lay8_42', 'lay8_23', 'lay8_18', 'lay8_35', 'lay8_49', 'lay8_86', 'lay8_64', 'lay8_84', 'lay8_47', 'lay8_8', 'lay8_12'] filter: 1.0
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3101s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3780s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3897s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2701s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2642s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8796s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9622s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3114s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0112s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0268s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0279s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2474s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5034s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5440s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2828s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8479s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0402s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2470s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.6339s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.3284s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.1250s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8612s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2901s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2558s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8377s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[1e-05,1.4027132062873588] (15,-1; 9,-1), time: 15.2589s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[1e-05,1.4584232848853569] (15,-1; 9,-1), time: 15.3097s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2477s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,0.5746105528078703] (15,-1; 9,-1), time: 15.8352s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2448s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[1e-05,1.1487346152395022] (15,-1; 9,-1), time: 17.4875s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2964s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[-0.2430708640084604,0.3760072408308988] (9,-1; 9,-1), time: 30.0206s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.2576349223149516,0.44026762531927965] (9,-1; 9,-1), time: 30.0265s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.49813687203366896,0.48477335631494983] (9,-1; 9,-1), time: 30.0264s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-0.13264271715083883,0.522315139201993] (9,-1; 9,-1), time: 30.0278s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.36862533809322645,0.27289363357401036] (9,-1; 9,-1), time: 30.0329s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2430s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2434s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7206s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-0.4629398750774142,0.07871620312718947] (9,-1; 9,-1), time: 30.0170s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2467s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-0.3124362383358256,0.2658003612605883] (9,-1; 9,-1), time: 30.0129s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-0.3878614524895641,0.24041647519329798] (9,-1; 9,-1), time: 30.0120s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2419s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-0.2329202440639987,0.43518610030721033] (9,-1; 9,-1), time: 30.0124s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2447s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.6911543193495647,0.033662159348576484] (9,-1; 9,-1), time: 30.0232s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.5208079369061236] (15,-1; 9,-1), time: 15.2570s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2367s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-0.17048488405117304,0.2958169791267165] (9,-1; 9,-1), time: 30.0183s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2454s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-0.009242768786025587,0.5252075951918318] (9,-1; 9,-1), time: 30.0584s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.642018732061356,0.007266834522819828] (9,-1; 9,-1), time: 30.0199s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[1e-05,0.7062626693375365] (15,-1; 9,-1), time: 15.6825s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.04238710074583204,0.6221925409208489] (9,-1; 9,-1), time: 30.0112s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.084714224469581] (15,-1; 9,-1), time: 15.2461s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[1e-05,0.7458173450793854] (15,-1; 9,-1), time: 15.6271s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[1e-05,0.961668330823331] (15,-1; 9,-1), time: 17.5702s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[1e-05,1.6489028262824708] (15,-1; 9,-1), time: 15.3012s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.390868138115298,0.06876096394225528] (9,-1; 9,-1), time: 30.0091s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[1e-05,2.325615464632946] (15,-1; 2,-1), time: 4.2018s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2427s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.5870226680324306,0.06593688679505644] (9,-1; 9,-1), time: 30.0220s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.6058535891124894,0.03618850998339515] (9,-1; 9,-1), time: 30.0227s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.10064025176830327,0.5513798952614375] (9,-1; 9,-1), time: 30.0134s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[1e-05,2.3295743383739778] (15,-1; 9,-1), time: 15.2454s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-0.5595005273450765,0.11373600789633263] (9,-1; 9,-1), time: 30.0117s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.19979218359430106,0.3761619548701026] (9,-1; 9,-1), time: 30.1308s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[1e-05,0.72931099289119] (15,-1; 9,-1), time: 15.8611s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.27725192019269207,0.27905374188803067] (9,-1; 9,-1), time: 30.0103s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.14346982973968556,0.337851164312257] (9,-1; 9,-1), time: 30.0103s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-0.7466403779068382,0.016580437225576693] (9,-1; 9,-1), time: 30.0319s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[1e-05,0.7801975593446562] (15,-1; 9,-1), time: 19.1606s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.5574905612545232,0.19997077725081622] (9,-1; 9,-1), time: 30.0210s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[1e-05,1.5693914319397961] (15,-1; 9,-1), time: 15.5148s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.21629359654821137,0.43030631015991827] (9,-1; 9,-1), time: 30.1547s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2947s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[1e-05,0.6700945893320481] (15,-1; 9,-1), time: 16.2111s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.6240233943025351,0.013780550920672607] (9,-1; 9,-1), time: 30.0111s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[1e-05,1.4873154983956882] (15,-1; 9,-1), time: 15.3042s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.09401911330287521,0.48679516154739116] (9,-1; 9,-1), time: 30.0115s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[1e-05,1.691813466923953] (15,-1; 9,-1), time: 15.2538s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-0.5353642507537624,0.15257226161227652] (9,-1; 9,-1), time: 30.0106s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[1e-05,0.8215613636626528] (15,-1; 2,-1), time: 10.1255s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.6568278108817285,0.010276544151650337] (9,-1; 9,-1), time: 30.0142s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-0.11582401791851463,0.4791814242246779] (9,-1; 9,-1), time: 30.0207s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-0.7998787033833453,0.0015817552211488592] (9,-1; 9,-1), time: 30.0120s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-0.3211593273478921,0.07778395780200537] (9,-1; 9,-1), time: 30.0243s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[1e-05,0.9156452551160493] (15,-1; 9,-1), time: 15.2940s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,2.514950274818789] (15,-1; 9,-1), time: 15.2893s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[1e-05,1.4302226219377305] (15,-1; 9,-1), time: 15.2479s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-0.17357888968299603,0.42655203218980164] (9,-1; 9,-1), time: 30.0118s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-0.4570581107951877,0.10879968119431109] (9,-1; 9,-1), time: 30.3907s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.37630872872423915,0.307254619783372] (9,-1; 9,-1), time: 30.0124s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[1e-05,1.5636715958971217] (15,-1; 9,-1), time: 15.2805s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[1e-05,2.4288705835214994] (15,-1; 9,-1), time: 15.2784s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.5660088020510076,0.02547579864385083] (9,-1; 9,-1), time: 30.0129s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-0.4593044435655162,0.09023300572789537] (9,-1; 9,-1), time: 30.0136s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.11393576436186369,0.26655896582067506] (9,-1; 9,-1), time: 30.0118s, #vars: 1411, #constrs: 739, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 2 has unstable to stable neurons: [(30, -1), (13, -1), (56, -1), (12, -1), (1, -1), (39, -1), (23, -1), (38, -1), (34, -1), (64, -1), (36, -1), (42, -1), (78, -1), (51, -1), (87, -1), (19, -1), (9, -1), (95, -1), (33, -1), (32, -1), (99, -1), (96, -1), (3, -1), (48, -1), (46, -1), (75, -1), (71, -1), (88, 1), (93, 1), (77, -1), (15, -1), (43, -1), (66, -1), (80, -1), (24, -1), (45, -1), (86, 1), (29, -1), (10, -1), (79, -1), (63, -1), (73, 1), (69, -1), (44, -1), (52, 1), (76, 1), (94, 1), (18, -1), (58, 1), (84, 1)]
best_l after optimization: -99.01065826416016 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 9.982020854949951
alpha-CROWN with intermediate bounds by MIP: tensor([[ -6.40618086, -10.28062630, -11.46237183, -11.13519955, -12.83207989,
          -9.05564117, -13.03534698, -11.32600212, -13.47720718]],
       device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 72.25756072998047, ub improved 108.15741729736328, time 108.3926
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_80', 'lay10_14', 'lay10_40', 'lay10_46', 'lay10_86', 'lay10_74', 'lay10_58', 'lay10_8', 'lay10_27', 'lay10_17', 'lay10_7', 'lay10_35', 'lay10_42', 'lay10_79', 'lay10_2', 'lay10_1', 'lay10_18', 'lay10_30', 'lay10_75', 'lay10_57', 'lay10_5', 'lay10_33', 'lay10_0', 'lay10_91', 'lay10_72', 'lay10_13', 'lay10_37', 'lay10_97', 'lay10_52', 'lay10_10', 'lay10_93', 'lay10_66', 'lay10_94', 'lay10_82', 'lay10_51', 'lay10_87', 'lay10_98', 'lay10_60', 'lay10_50', 'lay10_15', 'lay10_39', 'lay10_88', 'lay10_89', 'lay10_96', 'lay10_95', 'lay10_47', 'lay10_29', 'lay10_28', 'lay10_4', 'lay10_23', 'lay10_48', 'lay10_22', 'lay10_3', 'lay10_6', 'lay10_85', 'lay10_69', 'lay10_77', 'lay10_21', 'lay10_44', 'lay10_76', 'lay10_99', 'lay10_63', 'lay10_65', 'lay10_53', 'lay10_59', 'lay10_36', 'lay10_43', 'lay10_49', 'lay10_70', 'lay10_54', 'lay10_55', 'lay10_26', 'lay10_41', 'lay10_71', 'lay10_84', 'lay10_24', 'lay10_90', 'lay10_9', 'lay10_20', 'lay10_81', 'lay10_78', 'lay10_45', 'lay10_73', 'lay10_19', 'lay10_31', 'lay10_34', 'lay10_68', 'lay10_67', 'lay10_56', 'lay10_92', 'lay10_11', 'lay10_25', 'lay10_83', 'lay10_32', 'lay10_64', 'lay10_38', 'lay10_61', 'lay10_12', 'lay10_62', 'lay10_16'] filter: 1.0
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3085s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3609s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4478s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5180s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3374s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3027s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3411s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2813s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1218s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3142s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9874s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5042s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.2905s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[1e-05,1.3465832342193707] (15,-1; 9,-1), time: 15.3540s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[1e-05,1.1332972284844398] (15,-1; 9,-1), time: 15.3779s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3197s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.5093176146345723,0.15303371027619475] (9,-1; 9,-1), time: 30.0119s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-0.18660061051938676,0.29781860297146195] (9,-1; 9,-1), time: 30.0158s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-0.7377434679329841,0.027000844782099496] (9,-1; 9,-1), time: 30.0431s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.9823273238495281,0.166011410719088] (9,-1; 9,-1), time: 30.0928s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-0.6128394769153594,0.1695542849347659] (9,-1; 9,-1), time: 30.1163s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-0.09357166834196662,0.8338169182851017] (9,-1; 9,-1), time: 30.1821s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-0.6037002609009705,0.1981349188489866] (9,-1; 9,-1), time: 30.2632s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.05553958531477243,0.6716343522005801] (9,-1; 9,-1), time: 30.2930s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.5704166393771447,0.06518235298740709] (9,-1; 9,-1), time: 30.1273s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-0.8275469571486255,0.00464384403025034] (9,-1; 9,-1), time: 30.4496s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[-0.5416661786103795,0.31692279448159044] (9,-1; 9,-1), time: 30.1154s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[1e-05,1.6763375736805153] (15,-1; 9,-1), time: 15.3197s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3161s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.3582216142193986,0.24342458480955587] (9,-1; 9,-1), time: 30.0128s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3609s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9866s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3490s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2779s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.9673035583783435,0.029801849722703243] (9,-1; 9,-1), time: 30.0289s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.6178918352857155,0.026038499998553497] (9,-1; 9,-1), time: 30.0146s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[1e-05,0.6621831435638541] (15,-1; 9,-1), time: 24.3997s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.5376s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2956s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3385s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,2.9629852984481215] (15,-1; 9,-1), time: 15.3596s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.0274s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[1e-05,0.9890401281696166] (15,-1; 9,-1), time: 16.1507s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3046s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[1e-05,1.0905999130184532] (15,-1; 9,-1), time: 16.3433s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4297s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,0.8787928949034074] (15,-1; 9,-1), time: 15.3396s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3311s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3079s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-0.08941278339588957,0.430034987675091] (9,-1; 9,-1), time: 30.0832s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-0.5600000898764715,0.048206385849819434] (9,-1; 9,-1), time: 30.1680s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-0.025274841877227075,0.5361688859721956] (9,-1; 9,-1), time: 30.0305s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-0.12942085217373397,0.5431257316914146] (9,-1; 9,-1), time: 30.3092s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-0.5094158819096933,0.009521831009268874] (9,-1; 9,-1), time: 30.3293s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-0.6516270418640839,0.030429841126317504] (9,-1; 9,-1), time: 30.0275s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[1e-05,1.9295156361038388] (15,-1; 9,-1), time: 15.3530s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9815s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-0.26116696159222974,0.48299091704509717] (9,-1; 9,-1), time: 30.0145s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-0.625600670204707,0.00202231042515483] (9,-1; 9,-1), time: 30.1138s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3471s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3116s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.1242427099739738] (15,-1; 9,-1), time: 15.3187s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-0.16895007112255708,0.5148017727252238] (9,-1; 9,-1), time: 30.0127s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[1e-05,3.432005746201138] (15,-1; 9,-1), time: 15.3336s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2818s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2974s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[1e-05,0.8644166367933578] (15,-1; 9,-1), time: 15.3759s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3457s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-0.2262840011094122,0.23454676624808418] (9,-1; 9,-1), time: 30.0234s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-0.1304634090271462,0.2958975421726962] (9,-1; 9,-1), time: 30.0388s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[1e-05,1.7596623550346773] (15,-1; 9,-1), time: 15.3852s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[1e-05,1.5324252746296165] (15,-1; 9,-1), time: 15.3751s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.7576758965917545] (15,-1; 9,-1), time: 15.3378s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.7032448236916311] (15,-1; 9,-1), time: 16.1888s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[1e-05,1.0415126864476292] (15,-1; 9,-1), time: 15.3739s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[1e-05,2.6868667745328176] (15,-1; 9,-1), time: 15.3633s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[1e-05,0.7335074860646862] (15,-1; 9,-1), time: 15.3489s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9297s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3277s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[1e-05,2.033971201632938] (15,-1; 9,-1), time: 15.3253s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.4537557174731191,0.160139821775543] (9,-1; 9,-1), time: 30.2420s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-0.6113453691181288,0.024258393800718477] (9,-1; 9,-1), time: 30.0102s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-0.431512335214025,0.019503002237544302] (9,-1; 9,-1), time: 30.0366s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3079s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-0.34798185348328875,0.1764633305776403] (9,-1; 9,-1), time: 30.0797s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-0.35634508588060215,0.25417974015365546] (9,-1; 9,-1), time: 30.1391s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-0.034786548118922726,0.6184635897259154] (9,-1; 9,-1), time: 30.0679s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-0.3944879803419355,0.12350869953412831] (9,-1; 9,-1), time: 30.3533s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-0.45172303087885746,0.0641365793518815] (9,-1; 9,-1), time: 30.0357s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[1e-05,0.5997785074828476] (15,-1; 9,-1), time: 15.3132s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.4118s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[1e-05,1.4812374086288] (15,-1; 9,-1), time: 15.3523s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[1e-05,2.164428084922607] (15,-1; 9,-1), time: 15.5272s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[1e-05,0.5352671369693359] (15,-1; 9,-1), time: 22.1552s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[1e-05,0.9120458160287502] (15,-1; 9,-1), time: 15.4441s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.006732123001348628,0.40794027190274673] (9,-1; 9,-1), time: 30.0264s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-0.18979977080352284,0.4375439820481217] (9,-1; 9,-1), time: 30.0266s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[1e-05,2.0981072732450206] (15,-1; 9,-1), time: 15.3211s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[1e-05,2.6933933267936814] (15,-1; 9,-1), time: 15.3974s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-0.08225230212278443,0.4113469633791368] (9,-1; 9,-1), time: 30.0341s, #vars: 1587, #constrs: 953, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 3 has unstable to stable neurons: [(71, -1), (59, -1), (17, -1), (77, -1), (19, -1), (89, -1), (57, -1), (39, -1), (33, -1), (20, -1), (48, -1), (24, -1), (16, 1), (31, -1), (7, -1), (34, -1), (11, 1), (62, -1), (81, -1), (88, -1), (3, -1), (97, -1), (92, 1), (0, -1), (52, 1), (98, -1), (63, -1), (22, -1), (66, -1), (4, -1), (65, -1), (78, 1), (93, -1), (85, 1), (43, -1), (6, -1), (14, -1), (55, -1), (45, -1), (21, -1), (36, 1), (10, 1), (58, 1), (82, -1), (76, -1), (56, 1), (67, 1), (74, 1), (13, 1), (80, 1), (54, -1), (70, 1), (91, 1), (32, 1), (42, 1), (18, -1), (35, 1), (49, 1), (64, 1), (47, 1), (8, 1), (12, 1)]
best_l after optimization: -16.893184661865234 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 9.725517749786377
alpha-CROWN with intermediate bounds by MIP: tensor([[-0.02605391, -0.87937355, -1.17560720, -3.31154656, -1.86774158,
         -0.81270075, -1.57214308, -2.99774790, -4.25027037]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 176.62850952148438, ub improved 260.12921142578125, time 118.4406
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_24', 'lay12_59', 'lay12_18', 'lay12_4', 'lay12_13', 'lay12_17', 'lay12_29', 'lay12_92', 'lay12_96', 'lay12_83', 'lay12_46', 'lay12_94', 'lay12_95', 'lay12_87', 'lay12_90', 'lay12_53', 'lay12_2', 'lay12_21', 'lay12_63', 'lay12_10', 'lay12_99', 'lay12_68', 'lay12_69', 'lay12_30', 'lay12_86', 'lay12_35', 'lay12_77', 'lay12_73', 'lay12_81', 'lay12_7', 'lay12_39', 'lay12_32', 'lay12_45', 'lay12_43', 'lay12_98', 'lay12_11', 'lay12_34', 'lay12_97', 'lay12_44', 'lay12_5', 'lay12_62', 'lay12_71', 'lay12_49', 'lay12_26', 'lay12_31', 'lay12_61', 'lay12_38', 'lay12_65', 'lay12_51', 'lay12_74', 'lay12_42', 'lay12_54', 'lay12_50', 'lay12_8', 'lay12_0', 'lay12_88', 'lay12_48', 'lay12_82', 'lay12_85', 'lay12_23', 'lay12_58', 'lay12_93', 'lay12_40', 'lay12_1', 'lay12_57', 'lay12_78', 'lay12_28', 'lay12_72', 'lay12_60', 'lay12_80', 'lay12_20', 'lay12_66', 'lay12_3', 'lay12_33', 'lay12_9', 'lay12_41', 'lay12_67', 'lay12_75', 'lay12_91', 'lay12_89', 'lay12_19', 'lay12_14', 'lay12_56', 'lay12_84', 'lay12_16', 'lay12_37', 'lay12_47', 'lay12_64', 'lay12_79', 'lay12_12', 'lay12_76', 'lay12_70', 'lay12_55', 'lay12_15', 'lay12_52', 'lay12_27', 'lay12_22', 'lay12_36', 'lay12_6', 'lay12_25'] filter: 1.0
Solving MIP for lay12_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4915s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5565s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5801s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6026s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6098s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6277s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6832s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4610s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5412s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5359s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.7390s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[1e-05,1.3008982040937096] (15,-1; 9,-1), time: 15.4377s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[1e-05,1.9078767366148601] (15,-1; 9,-1), time: 15.4539s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[1e-05,1.3854252445927846] (15,-1; 9,-1), time: 15.4655s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4528s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4393s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[1e-05,3.3835129136884268] (15,-1; 9,-1), time: 15.4189s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[1e-05,0.8418587771275462] (15,-1; 9,-1), time: 16.0771s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3737s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[1e-05,1.5616671430261246] (15,-1; 9,-1), time: 16.4464s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.162137814847886,0.3726162960140921] (9,-1; 9,-1), time: 30.0119s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-0.6020082715752618,0.11786948805142264] (9,-1; 9,-1), time: 30.0360s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-0.494606491733672,0.1455549155717461] (9,-1; 9,-1), time: 30.0399s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-0.6660780188238866,0.00407036922468856] (9,-1; 9,-1), time: 30.0431s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-0.6411484806504643,0.03903696759699322] (9,-1; 9,-1), time: 30.1485s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4477s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4282s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.6383925674867708,0.07154592365541029] (9,-1; 9,-1), time: 30.0278s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-0.19362312303739487,0.22838796006238873] (9,-1; 9,-1), time: 30.0185s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.25526284580584674,0.6871193987151271] (9,-1; 9,-1), time: 30.0353s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,1.0407445381547] (15,-1; 9,-1), time: 15.4077s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[-0.26205384581307445,0.4894104155735636] (9,-1; 9,-1), time: 30.0331s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3818s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4054s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4144s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.020977493425349797,0.38440237861244725] (9,-1; 9,-1), time: 30.1841s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3875s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.9653s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.7443s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4012s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-0.02245851316361453,0.6606385822768164] (9,-1; 9,-1), time: 30.0122s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.7507437522004511,0.015398031013793183] (9,-1; 9,-1), time: 30.0619s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[-0.6125819302569371,0.014949810387957604] (9,-1; 9,-1), time: 30.0098s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3835s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-0.06948871733178365,0.83270827464035] (9,-1; 9,-1), time: 30.0478s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.8044315993607076,0.09971578744815392] (9,-1; 9,-1), time: 30.0175s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[1e-05,0.43147854373030536] (15,-1; 9,-1), time: 25.3190s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.4415s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-0.7323249710045014,0.010564788748591611] (9,-1; 9,-1), time: 30.0818s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-0.1461175708102646,0.7146412074900119] (9,-1; 9,-1), time: 30.0724s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.22395735813049708,0.6183442135957715] (9,-1; 9,-1), time: 30.0170s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-0.4783186348155692,0.23240322074282704] (9,-1; 9,-1), time: 30.0125s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4569s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.1121405506193474,0.5077111356781566] (9,-1; 9,-1), time: 30.0121s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4014s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-0.4831575076301787,0.07151370640018025] (9,-1; 9,-1), time: 30.0123s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4454s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4227s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4238s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4429s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-0.3841337599067679,0.08258750593455648] (9,-1; 9,-1), time: 30.0137s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[1e-05,1.5953130562766646] (15,-1; 9,-1), time: 15.3674s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3766s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3769s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3777s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3367s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1348s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-0.0016810162227681607,1.1074023085237465] (9,-1; 9,-1), time: 30.0454s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[1e-05,0.6721968074251272] (15,-1; 9,-1), time: 25.2891s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4273s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3868s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4640s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.12470608818688042,0.2810278581367978] (9,-1; 9,-1), time: 30.0263s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4331s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3832s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4393s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.203532535772966] (15,-1; 9,-1), time: 15.4241s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.2222s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[1e-05,2.5659971547516602] (15,-1; 9,-1), time: 15.4404s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[1e-05,1.3356437921494386] (15,-1; 9,-1), time: 15.4192s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.8106171884358235] (15,-1; 9,-1), time: 15.4215s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[1e-05,1.1763646721320444] (15,-1; 9,-1), time: 15.4008s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[1e-05,0.7366696162821905] (15,-1; 9,-1), time: 15.4578s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-0.43468912688754285,0.2571148310467352] (9,-1; 9,-1), time: 30.0602s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4312s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-0.16889612137478935,0.39079925641957786] (9,-1; 9,-1), time: 30.0227s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[1e-05,2.0748149576610446] (15,-1; 9,-1), time: 15.4968s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-0.577943660885835,0.013459246717302973] (9,-1; 9,-1), time: 30.0231s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[1e-05,2.7972993413924936] (15,-1; 9,-1), time: 15.4083s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[1e-05,2.240995979315929] (15,-1; 9,-1), time: 15.4181s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[1e-05,0.5443331450997596] (15,-1; 9,-1), time: 15.4446s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-0.4662710095495134,0.33175893802219314] (9,-1; 9,-1), time: 30.1310s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[1e-05,4.030810468825017] (15,-1; 9,-1), time: 15.3911s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,0.863833995029894] (15,-1; 9,-1), time: 15.3916s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[1e-05,2.812589956922607] (15,-1; 9,-1), time: 15.4892s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-0.45479443011231185,0.18251554174236698] (9,-1; 9,-1), time: 30.0534s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[1e-05,0.7622447176623792] (15,-1; 9,-1), time: 15.4570s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[1e-05,0.6781934953929317] (15,-1; 9,-1), time: 15.4270s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.02318360523772479,0.33675906638335495] (9,-1; 9,-1), time: 30.0106s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-0.34524592660820164,0.3161185984620754] (9,-1; 9,-1), time: 30.0121s, #vars: 1759, #constrs: 1161, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 4 has unstable to stable neurons: [(80, -1), (14, -1), (40, -1), (8, 1), (79, -1), (2, -1), (1, 1), (30, -1), (57, -1), (5, -1), (33, -1), (91, -1), (72, -1), (13, -1), (37, -1), (10, 1), (93, -1), (66, 1), (87, 1), (50, 1), (15, -1), (88, -1), (89, -1), (96, 1), (95, -1), (28, -1), (4, -1), (48, -1), (6, -1), (85, -1), (69, 1), (77, 1), (21, -1), (44, -1), (76, 1), (99, 1), (63, 1), (65, -1), (53, -1), (36, -1), (43, 1), (49, 1), (55, 1), (26, -1), (41, -1), (9, 1), (20, -1), (81, -1), (78, -1), (73, 1), (19, 1), (31, 1), (34, 1), (56, 1), (92, 1), (11, 1), (25, 1), (83, -1), (32, -1), (64, -1), (38, 1), (12, 1), (62, -1), (16, 1)]
best_l after optimization: 8.016103744506836 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 9.620878458023071
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.89491117,  2.11005712,  1.84022141, -0.90924001,  1.53498340,
          1.47638524,  1.96045375, -0.51417637, -1.37749195]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 382.055419921875, ub improved 579.0620727539062, time 107.0538
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_20', 'lay14_5', 'lay14_92', 'lay14_2', 'lay14_75', 'lay14_11', 'lay14_47', 'lay14_64', 'lay14_18', 'lay14_72', 'lay14_59', 'lay14_14', 'lay14_87', 'lay14_0', 'lay14_46', 'lay14_51', 'lay14_54', 'lay14_8', 'lay14_84', 'lay14_85', 'lay14_10', 'lay14_91', 'lay14_35', 'lay14_36', 'lay14_86', 'lay14_16', 'lay14_76', 'lay14_22', 'lay14_1', 'lay14_19', 'lay14_56', 'lay14_31', 'lay14_28', 'lay14_50', 'lay14_41', 'lay14_12', 'lay14_37', 'lay14_98', 'lay14_77', 'lay14_60', 'lay14_30', 'lay14_82', 'lay14_21', 'lay14_42', 'lay14_4', 'lay14_74', 'lay14_33', 'lay14_96', 'lay14_44', 'lay14_45', 'lay14_79', 'lay14_63', 'lay14_78', 'lay14_29', 'lay14_3', 'lay14_9', 'lay14_88', 'lay14_83', 'lay14_23', 'lay14_73', 'lay14_69', 'lay14_70', 'lay14_15', 'lay14_40', 'lay14_55', 'lay14_62', 'lay14_67', 'lay14_71', 'lay14_24', 'lay14_57', 'lay14_81', 'lay14_32', 'lay14_90', 'lay14_7', 'lay14_52', 'lay14_66', 'lay14_26', 'lay14_25', 'lay14_53', 'lay14_65', 'lay14_39', 'lay14_6', 'lay14_99', 'lay14_13', 'lay14_38', 'lay14_49', 'lay14_80', 'lay14_48', 'lay14_43', 'lay14_95', 'lay14_68', 'lay14_89', 'lay14_17', 'lay14_34', 'lay14_61', 'lay14_58', 'lay14_27', 'lay14_93', 'lay14_97', 'lay14_94'] filter: 1.0
Solving MIP for lay14_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5308s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5192s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5355s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5417s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5323s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5768s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5951s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6602s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4712s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5247s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4776s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6008s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6336s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4738s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5220s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4842s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5685s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_72, [-inf,inf]=>[1e-05,1.1473535594739903] (15,-1; 9,-1), time: 15.5171s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_1, [-inf,inf]=>[1e-05,0.4867902079075703] (15,-1; 9,-1), time: 15.4932s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_36, [-inf,inf]=>[1e-05,0.5280213145822815] (15,-1; 9,-1), time: 16.3151s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_14, [-inf,inf]=>[1e-05,0.7094329639772747] (15,-1; 9,-1), time: 25.2987s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_64, [-inf,inf]=>[-0.08267409965669675,0.4620885360709913] (9,-1; 9,-1), time: 30.0125s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_18, [-inf,inf]=>[-0.154448298768134,0.20346595910082396] (9,-1; 9,-1), time: 30.0136s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_2, [-inf,inf]=>[-0.8625737595318401,0.19413255877667612] (9,-1; 9,-1), time: 30.0309s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_46, [-inf,inf]=>[-0.8794873515732512,0.1406229245127317] (9,-1; 9,-1), time: 30.0154s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_0, [-inf,inf]=>[-0.5767762439795187,0.03143197597438057] (9,-1; 9,-1), time: 30.0266s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[-0.7060886663571614,0.23144330966890495] (9,-1; 9,-1), time: 30.0814s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_84, [-inf,inf]=>[-0.36281918362344323,0.24135868933154483] (9,-1; 9,-1), time: 30.0108s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_91, [-inf,inf]=>[-0.3273555002129427,0.18054741167315977] (9,-1; 9,-1), time: 30.0107s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5568s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5958s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_76, [-inf,inf]=>[-0.37244430180445254,0.17336866808698045] (9,-1; 9,-1), time: 30.0117s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5065s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_22, [-inf,inf]=>[-0.28549854109799006,0.3710150274510813] (9,-1; 9,-1), time: 30.0363s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5157s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_31, [-inf,inf]=>[-0.3106972203637873,0.636458566292436] (9,-1; 9,-1), time: 30.0105s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_28, [-inf,inf]=>[-0.23640419754259706,0.45075778568758995] (9,-1; 9,-1), time: 30.0098s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5089s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[1e-05,2.4849439259874777] (15,-1; 9,-1), time: 15.4906s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4120s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5259s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_37, [-inf,inf]=>[1e-05,1.3052267500974275] (15,-1; 9,-1), time: 15.4825s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_50, [-inf,inf]=>[-0.35322143405485057,0.14285561799028382] (9,-1; 9,-1), time: 30.0231s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[1e-05,0.9458619099414833] (15,-1; 9,-1), time: 15.5590s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_33, [-inf,inf]=>[1e-05,1.8198980187316287] (15,-1; 9,-1), time: 15.5536s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_96, [-inf,inf]=>[1e-05,1.762181847216596] (15,-1; 9,-1), time: 15.5265s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_12, [-inf,inf]=>[-0.2983816132277394,0.3574901959829517] (9,-1; 9,-1), time: 30.0097s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_79, [-inf,inf]=>[1e-05,1.3806376513439624] (15,-1; 9,-1), time: 15.5846s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.5411s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_3, [-inf,inf]=>[1e-05,0.5455042455616512] (15,-1; 9,-1), time: 27.2461s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_98, [-inf,inf]=>[-0.32898377521219274,0.158333865212822] (9,-1; 9,-1), time: 30.0102s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_60, [-inf,inf]=>[-0.6759241039589411,0.018978647629583446] (9,-1; 9,-1), time: 30.0103s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-0.4476979212258542,0.00449052902073613] (9,-1; 9,-1), time: 30.0158s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_42, [-inf,inf]=>[-0.013953665114149305,0.45835559260513115] (9,-1; 9,-1), time: 30.0605s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_73, [-inf,inf]=>[1e-05,1.0210969539228698] (15,-1; 9,-1), time: 15.4453s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4718s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_44, [-inf,inf]=>[-0.1429562459923415,0.3225407367594378] (9,-1; 9,-1), time: 30.0679s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4817s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[1e-05,1.0559055919235887] (15,-1; 9,-1), time: 15.5037s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_23, [-inf,inf]=>[1e-05,1.1999851720129553] (15,-1; 9,-1), time: 16.4946s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_70, [-inf,inf]=>[1e-05,0.984475491554811] (15,-1; 9,-1), time: 15.4609s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_78, [-inf,inf]=>[-0.06235255274872187,0.8128074654652385] (9,-1; 9,-1), time: 30.0101s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_29, [-inf,inf]=>[-0.4247691243329839,0.168165328704979] (9,-1; 9,-1), time: 30.0193s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4650s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3200s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5275s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5449s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_88, [-inf,inf]=>[-0.3361548258271851,0.29550735969646724] (9,-1; 9,-1), time: 30.0139s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4441s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_83, [-inf,inf]=>[-0.7073314072147174,0.008444956659190558] (9,-1; 9,-1), time: 30.0142s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5594s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-0.3612042642369287,0.33337307409596184] (9,-1; 9,-1), time: 30.0209s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_65, [-inf,inf]=>[1e-05,4.523999346857399] (15,-1; 9,-1), time: 15.6991s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_38, [-inf,inf]=>[1e-05,2.286621634447064] (15,-1; 9,-1), time: 15.5501s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7458s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_67, [-inf,inf]=>[1e-05,1.2438595838588895] (15,-1; 9,-1), time: 19.6865s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_55, [-inf,inf]=>[-0.7119158993786896,0.23630984557932105] (9,-1; 9,-1), time: 30.0116s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5389s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4695s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_71, [-inf,inf]=>[1e-05,0.6286431051989826] (15,-1; 9,-1), time: 26.2682s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_80, [-inf,inf]=>[1e-05,2.5661571200950655] (15,-1; 9,-1), time: 15.5330s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_62, [-inf,inf]=>[-0.4098386579138641,0.24205227229849263] (9,-1; 9,-1), time: 30.0126s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_81, [-inf,inf]=>[-0.19084086221720584,0.4195253542289391] (9,-1; 9,-1), time: 30.0112s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_90, [-inf,inf]=>[-0.19276707011582675,0.3347401683391747] (9,-1; 9,-1), time: 30.0113s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-0.5120961826614028,0.20179712555540688] (9,-1; 9,-1), time: 30.1239s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5144s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_66, [-inf,inf]=>[-0.676069425540748,0.16142458962873799] (9,-1; 9,-1), time: 30.0495s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_26, [-inf,inf]=>[-0.5304140116127882,0.09349597987237811] (9,-1; 9,-1), time: 30.0156s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_39, [-inf,inf]=>[-0.5136826063912875,0.13823753548639786] (9,-1; 9,-1), time: 30.0325s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_6, [-inf,inf]=>[-0.2902685107437839,0.3123804085621148] (9,-1; 9,-1), time: 30.0125s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_99, [-inf,inf]=>[-0.06835752809916722,0.5429625631666316] (9,-1; 9,-1), time: 30.0095s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_43, [-inf,inf]=>[1e-05,1.9622740506752692] (15,-1; 9,-1), time: 15.6049s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_89, [-inf,inf]=>[1e-05,2.2986055977368527] (15,-1; 9,-1), time: 15.4931s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_68, [-inf,inf]=>[1e-05,0.7905283214435253] (15,-1; 9,-1), time: 16.7210s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[1e-05,2.0974002201114996] (15,-1; 9,-1), time: 15.4568s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_27, [-inf,inf]=>[1e-05,2.2666364341965655] (15,-1; 9,-1), time: 15.4799s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_97, [-inf,inf]=>[1e-05,2.8143525549578845] (15,-1; 9,-1), time: 15.5087s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_95, [-inf,inf]=>[-0.17534347181224863,0.251688430542696] (9,-1; 9,-1), time: 30.0106s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_61, [-inf,inf]=>[-0.41974076885620304,0.04340421104719046] (9,-1; 9,-1), time: 30.0106s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_93, [-inf,inf]=>[-0.735388615218191,0.092933942234151] (9,-1; 9,-1), time: 30.0119s, #vars: 1921, #constrs: 1354, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 5 has unstable to stable neurons: [(24, -1), (59, -1), (18, 1), (13, -1), (17, -1), (29, 1), (92, -1), (96, -1), (83, -1), (94, 1), (95, -1), (63, -1), (10, -1), (99, -1), (68, 1), (86, 1), (35, 1), (73, -1), (81, 1), (39, -1), (45, -1), (34, -1), (44, -1), (5, -1), (71, 1), (38, -1), (65, -1), (51, -1), (74, -1), (54, -1), (0, -1), (88, 1), (48, -1), (82, -1), (85, 1), (40, 1), (57, -1), (78, -1), (28, -1), (72, 1), (60, 1), (80, -1), (20, -1), (66, 1), (3, 1), (33, -1), (9, 1), (67, -1), (75, -1), (91, 1), (89, -1), (19, -1), (14, -1), (56, -1), (84, -1), (16, -1), (37, -1), (47, 1), (79, -1), (12, -1), (76, -1), (70, 1), (55, 1), (15, 1), (52, 1), (27, 1), (22, 1), (6, -1), (25, 1)]
best_l after optimization: 14.12863540649414 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 9.566240787506104
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.44575882,  2.81304598,  2.55372262, -0.29638863,  2.33118010,
          2.06329393,  2.84667206,  0.06338024, -0.69202995]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 899.396240234375, ub improved 1285.9248046875, time 120.1496
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_15', 'lay16_87', 'lay16_11', 'lay16_35', 'lay16_64', 'lay16_20', 'lay16_51', 'lay16_95', 'lay16_0', 'lay16_19', 'lay16_99', 'lay16_34', 'lay16_82', 'lay16_76', 'lay16_65', 'lay16_27', 'lay16_86', 'lay16_80', 'lay16_44', 'lay16_4', 'lay16_14', 'lay16_2', 'lay16_41', 'lay16_53', 'lay16_30', 'lay16_70', 'lay16_83', 'lay16_31', 'lay16_68', 'lay16_58', 'lay16_79', 'lay16_98', 'lay16_69', 'lay16_71', 'lay16_23', 'lay16_40', 'lay16_89', 'lay16_1', 'lay16_84', 'lay16_73', 'lay16_74', 'lay16_88', 'lay16_39', 'lay16_85', 'lay16_92', 'lay16_47', 'lay16_9', 'lay16_77', 'lay16_29', 'lay16_57', 'lay16_63', 'lay16_46', 'lay16_25', 'lay16_50', 'lay16_37', 'lay16_66', 'lay16_78', 'lay16_5', 'lay16_3', 'lay16_28', 'lay16_12', 'lay16_93', 'lay16_18', 'lay16_90', 'lay16_56', 'lay16_97', 'lay16_94', 'lay16_59', 'lay16_32', 'lay16_7', 'lay16_13', 'lay16_36', 'lay16_17', 'lay16_96', 'lay16_43', 'lay16_24', 'lay16_21', 'lay16_33', 'lay16_52', 'lay16_6', 'lay16_60', 'lay16_75', 'lay16_91', 'lay16_55', 'lay16_54', 'lay16_38', 'lay16_81', 'lay16_8', 'lay16_45', 'lay16_26', 'lay16_72', 'lay16_16', 'lay16_61', 'lay16_48', 'lay16_10', 'lay16_67', 'lay16_49', 'lay16_62', 'lay16_42', 'lay16_22'] filter: 1.0
Solving MIP for lay16_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7777s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7825s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8063s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8328s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8550s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8605s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8948s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9719s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0477s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7336s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7476s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6728s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7135s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6215s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5284s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6298s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6204s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7309s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6194s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_79, [-inf,inf]=>[1e-05,1.0927414947783336] (15,-1; 9,-1), time: 15.5853s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_53, [-inf,inf]=>[1e-05,0.9354341016121211] (15,-1; 9,-1), time: 28.6457s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_65, [-inf,inf]=>[-1.1479619590933385,0.04351622615075983] (9,-1; 9,-1), time: 30.0133s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_76, [-inf,inf]=>[-0.2832851657074636,0.4591922597996549] (9,-1; 9,-1), time: 30.0173s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_34, [-inf,inf]=>[-1.1738631121547167,0.2915040391708951] (9,-1; 9,-1), time: 30.0170s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_95, [-inf,inf]=>[-0.6606918181504677,0.3112107470276234] (9,-1; 9,-1), time: 30.0172s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_87, [-inf,inf]=>[-1.0973252590899971,0.11565313139300727] (9,-1; 9,-1), time: 30.0203s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_11, [-inf,inf]=>[-0.7812476819556342,0.12935966452925088] (9,-1; 9,-1), time: 30.0196s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_19, [-inf,inf]=>[-1.025130923369276,0.4470511408439348] (9,-1; 9,-1), time: 30.0229s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6263s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5818s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6197s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7819s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_4, [-inf,inf]=>[-0.6993048520182146,0.05702960523119376] (9,-1; 9,-1), time: 30.0145s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_2, [-inf,inf]=>[-0.30036152551377915,0.39284662748914484] (9,-1; 9,-1), time: 30.0133s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_41, [-inf,inf]=>[-0.2949811172481157,0.6076116533346373] (9,-1; 9,-1), time: 30.0179s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_44, [-inf,inf]=>[-1.0787739911290084,0.04085069493300382] (9,-1; 9,-1), time: 30.2012s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_30, [-inf,inf]=>[-0.3947155989985527,0.2929407929135768] (9,-1; 9,-1), time: 30.0140s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6541s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6317s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_68, [-inf,inf]=>[-0.6588129919944695,0.061340774466788574] (9,-1; 9,-1), time: 30.0151s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_40, [-inf,inf]=>[1e-05,1.2319454231242841] (15,-1; 9,-1), time: 15.6690s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7093s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_23, [-inf,inf]=>[-0.17818807303716808,0.7001350622053713] (9,-1; 9,-1), time: 30.0206s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5509s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6570s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_74, [-inf,inf]=>[1e-05,1.4645386696552962] (15,-1; 9,-1), time: 15.6975s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7593s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_29, [-inf,inf]=>[1e-05,1.9748741354513224] (15,-1; 9,-1), time: 15.7044s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6546s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5926s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_66, [-inf,inf]=>[1e-05,0.6617130227486878] (15,-1; 9,-1), time: 15.5831s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_88, [-inf,inf]=>[1e-05,0.8803414117738264] (15,-1; 9,-1), time: 27.4565s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7117s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_1, [-inf,inf]=>[-0.4913565120953819,0.09158183715754564] (9,-1; 9,-1), time: 30.0103s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_39, [-inf,inf]=>[-1.3751726758313327,0.05474896716487044] (9,-1; 9,-1), time: 30.0157s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_92, [-inf,inf]=>[-0.38282562570836215,0.36114320480956913] (9,-1; 9,-1), time: 30.0136s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_47, [-inf,inf]=>[-0.3625559118408008,0.6023427723266245] (9,-1; 9,-1), time: 30.0139s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6439s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_57, [-inf,inf]=>[-0.08129441956802673,1.2312733379768304] (9,-1; 9,-1), time: 30.0103s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_63, [-inf,inf]=>[-0.8913497619949158,0.20938447424144602] (9,-1; 9,-1), time: 30.0107s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_77, [-inf,inf]=>[-0.5212490367018633,0.2144323100227294] (9,-1; 9,-1), time: 30.1621s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_25, [-inf,inf]=>[-0.0209716483605005,1.1781873350202892] (9,-1; 9,-1), time: 30.0131s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5939s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_50, [-inf,inf]=>[-0.9622327333280031,0.009480056111143626] (9,-1; 9,-1), time: 30.0107s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6556s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_37, [-inf,inf]=>[-0.4450324366403306,0.23412817355188528] (9,-1; 9,-1), time: 30.0095s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7391s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6591s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6005s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4739s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_5, [-inf,inf]=>[-0.6159388948958232,0.03557720702849083] (9,-1; 9,-1), time: 30.0107s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6996s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6474s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_12, [-inf,inf]=>[-0.3255682513599946,0.23657261978119748] (9,-1; 9,-1), time: 30.0097s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_17, [-inf,inf]=>[1e-05,1.2876533973313282] (15,-1; 9,-1), time: 15.6600s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_43, [-inf,inf]=>[1e-05,2.6215556109262956] (15,-1; 9,-1), time: 15.6385s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_90, [-inf,inf]=>[-0.32175653671601945,0.23435036656722258] (9,-1; 9,-1), time: 30.0124s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_60, [-inf,inf]=>[1e-05,1.0202098860038074] (15,-1; 9,-1), time: 15.6813s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_91, [-inf,inf]=>[1e-05,3.3605534746821633] (15,-1; 9,-1), time: 15.6381s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_97, [-inf,inf]=>[-0.7599974275789392,0.011911777165928238] (9,-1; 9,-1), time: 30.0110s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_94, [-inf,inf]=>[-0.5383114383984765,0.021835391754226854] (9,-1; 9,-1), time: 30.0150s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5996s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5312s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_54, [-inf,inf]=>[1e-05,1.7487546889512267] (15,-1; 9,-1), time: 15.6432s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6145s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6244s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_45, [-inf,inf]=>[1e-05,3.9920921385108867] (15,-1; 9,-1), time: 15.6147s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_32, [-inf,inf]=>[-0.19614848355664818,0.45015335473153645] (9,-1; 9,-1), time: 30.0105s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_13, [-inf,inf]=>[-0.4619573938278913,0.04688079828980249] (9,-1; 9,-1), time: 30.0136s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_36, [-inf,inf]=>[-0.13482311791706827,0.8340919793663814] (9,-1; 9,-1), time: 30.0150s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_21, [-inf,inf]=>[-0.6674671484924889,0.1413465165634058] (9,-1; 9,-1), time: 30.0120s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_75, [-inf,inf]=>[-0.0420678786637128,0.38426165308226007] (9,-1; 9,-1), time: 30.0179s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_72, [-inf,inf]=>[1e-05,2.427294723209377] (15,-1; 9,-1), time: 15.6023s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_61, [-inf,inf]=>[1e-05,3.060146270794555] (15,-1; 9,-1), time: 15.7774s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_10, [-inf,inf]=>[1e-05,1.7418145221715913] (15,-1; 9,-1), time: 15.7799s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_67, [-inf,inf]=>[1e-05,1.295129548168492] (15,-1; 9,-1), time: 15.6537s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_49, [-inf,inf]=>[1e-05,3.9866731272109157] (15,-1; 9,-1), time: 15.5570s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_62, [-inf,inf]=>[1e-05,1.119287060133989] (15,-1; 9,-1), time: 15.6198s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_38, [-inf,inf]=>[-0.08309920390171735,0.35592427429681406] (9,-1; 9,-1), time: 30.0099s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_26, [-inf,inf]=>[-0.021074074183390547,0.6238117255616954] (9,-1; 9,-1), time: 30.0155s, #vars: 2095, #constrs: 1565, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 6 has unstable to stable neurons: [(20, -1), (5, -1), (92, -1), (75, -1), (11, -1), (72, 1), (59, -1), (14, 1), (87, -1), (51, -1), (54, -1), (8, -1), (85, -1), (10, -1), (35, -1), (36, 1), (86, -1), (16, -1), (1, 1), (19, -1), (56, -1), (41, 1), (37, 1), (77, -1), (30, -1), (82, 1), (4, -1), (74, -1), (33, 1), (96, 1), (45, -1), (79, 1), (63, -1), (3, 1), (9, -1), (23, 1), (73, 1), (69, 1), (70, 1), (15, -1), (67, 1), (71, 1), (24, -1), (57, -1), (32, -1), (52, -1), (25, -1), (53, -1), (65, 1), (13, -1), (38, 1), (49, -1), (80, 1), (48, -1), (43, 1), (68, 1), (89, 1), (17, -1), (34, -1), (58, 1), (27, 1), (97, 1), (94, -1)]
best_l after optimization: 17.672367095947266 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 9.681977033615112
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.75106931,  3.15928125,  2.95089173,  0.08706653,  2.78907847,
          2.35458016,  3.39578009,  0.41477180, -0.23015141]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 1813.5157470703125, ub improved 2710.702880859375, time 97.4977
maximum relu layer improved by MIP so far 7
Linear(in_features=100, out_features=10, bias=True) 8 18 torch.Size([9, 1])
MIP finished with 638.6489839553833s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])

all verified at 0th iter
best_l after optimization: 19.636165618896484 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.05725812911987305
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.88028908, 3.30007601, 3.20367336, 0.35087931, 3.04956317, 2.45850396,
         3.71053505, 0.57659054, 0.10605526]], device='cuda:0') None
refined global lb: tensor([[2.88028908],
        [3.30007601],
        [3.20367336],
        [0.35087931],
        [3.04956317],
        [2.45850396],
        [3.71053505],
        [0.57659054],
        [0.10605526]], device='cuda:0') min: tensor(0.10605526, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 654.1508 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):654.1442764283295, max time: 654.1508178710938
mean time for verified SAFE instances(total 1): 654.1508178710938, max time: 654.1508178710938
safe-incomplete-refine (total 1), index: [0]
