Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_200
  path: mnist_9_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 24
  end: 25
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 1500
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon Jan 16 01:11:05 2023 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=200, bias=True)
  (12): ReLU()
  (13): Linear(in_features=200, out_features=200, bias=True)
  (14): ReLU()
  (15): Linear(in_features=200, out_features=200, bias=True)
  (16): ReLU()
  (17): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_200]_start=24_end=25_iter=20_b=1024_timeout=1500_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.92123181, -2.21978331,  0.80034137, -3.92385435,  7.73548937,
         -1.33190620,  0.63018954, -0.44093281, -0.48657018,  1.78281856]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ -960.60522461, -1598.82580566, -1900.80297852, -2114.30004883,
         -1818.29174805, -1546.59924316, -1461.50671387, -1890.52355957,
         -1596.00024414]], device='cuda:0') None
best_l after optimization: -10399.50390625 with beta sum per layer: []
alpha/beta optimization time: 11.354859113693237
initial alpha-CROWN bounds: tensor([[ -696.59332275, -1083.29089355, -1338.28356934, -1458.10083008,
         -1290.01208496, -1100.26892090, -1004.36328125, -1309.33068848,
         -1119.26025391]], device='cuda:0')
Worst class: (+ rhs) -1458.100830078125
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.92123181, -2.21978331,  0.80034137, -3.92385435,  7.73548937,
         -1.33190620,  0.63018954, -0.44093281, -0.48657018,  1.78281856]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.94488865, -1.92304623,  0.52204627, -3.27151704,  6.61245489,
          -1.08669364,  0.41012126, -0.33979398, -0.37520438,  1.86208010],
         [-0.94488865, -1.92304623,  0.52204627, -3.27151704,  6.61245489,
          -1.08669364,  0.41012126, -0.33979398, -0.37520438,  1.86208010]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[7.55734348, 8.53550148, 6.09040880, 9.88397217, 7.69914865,
          6.20233345, 6.95224905, 6.98765945, 4.75037479]]], device='cuda:0')
number of violation:  0
Attack finished in 0.7081 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 1200.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_51', 'lay4_55', 'lay4_142', 'lay4_45', 'lay4_194', 'lay4_143', 'lay4_69', 'lay4_99', 'lay4_13', 'lay4_44', 'lay4_175', 'lay4_129', 'lay4_145', 'lay4_151', 'lay4_15', 'lay4_162', 'lay4_12', 'lay4_140', 'lay4_6', 'lay4_53', 'lay4_173', 'lay4_61', 'lay4_59', 'lay4_76', 'lay4_67', 'lay4_43', 'lay4_180', 'lay4_195', 'lay4_101', 'lay4_115', 'lay4_41', 'lay4_187', 'lay4_120', 'lay4_181', 'lay4_11', 'lay4_164', 'lay4_104', 'lay4_93', 'lay4_33', 'lay4_169', 'lay4_176', 'lay4_26', 'lay4_128', 'lay4_7', 'lay4_198', 'lay4_36', 'lay4_196', 'lay4_138', 'lay4_56', 'lay4_30', 'lay4_17', 'lay4_58', 'lay4_178', 'lay4_38', 'lay4_147', 'lay4_137', 'lay4_32', 'lay4_77', 'lay4_103', 'lay4_199', 'lay4_52', 'lay4_8', 'lay4_48', 'lay4_114', 'lay4_80', 'lay4_88', 'lay4_112', 'lay4_111', 'lay4_106'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/data_utils.py:255: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6584s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2318s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4645s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_44, [-inf,inf]=>[-0.4939655330499903,0.1840592850098553] (2,-1; 2,-1), time: 2.1370s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.2184067756367363,0.5373208499990273] (2,-1; 2,-1), time: 2.9622s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0593s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.8449892717769235,0.049085402501457986] (2,-1; 2,-1), time: 3.2301s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5877s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_175, [-inf,inf]=>[-0.32826881714231515,0.42907715300269234] (2,-1; 2,-1), time: 3.9334s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-0.1456149651544935,0.5368392069310332] (2,-1; 2,-1), time: 4.0247s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3605s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.11562688796938689,0.47522937351739986] (2,-1; 2,-1), time: 4.4474s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3513s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6241s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_12, [-inf,inf]=>[-0.4860297802247118,0.1272659783503301] (2,-1; 2,-1), time: 4.0384s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-0.115680778699645,0.39476993480740796] (2,-1; 2,-1), time: 5.0025s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3291s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[-inf,-0.011605190255872838] (-1,-1; 2,-1), time: 0.7091s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_151, [-inf,inf]=>[-0.5429035795490192,0.14445723401377109] (2,-1; 2,-1), time: 5.3847s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[1e-05,0.8799447872078766] (15,-1; 2,-1), time: 1.6403s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.16441167958775102,0.37427387425188635] (2,-1; 2,-1), time: 6.0011s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_140, [-inf,inf]=>[-0.5034155254172584,0.18120223253708784] (2,-1; 2,-1), time: 4.8338s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_15, [-inf,inf]=>[-0.30329129189060056,0.2429665298254032] (2,-1; 2,-1), time: 6.1200s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[-0.5473879083334787,0.006108669512863298] (2,-1; 2,-1), time: 4.9924s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3735s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6699s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.5179620527560375,0.052008242652376836] (2,-1; 2,-1), time: 3.8089s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_173, [-inf,inf]=>[-0.40345083055079073,0.2484321178392733] (2,-1; 2,-1), time: 4.3197s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2720s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-0.3978837542670797,0.276857342475283] (2,-1; 2,-1), time: 7.5177s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2789s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_120, [-inf,inf]=>[-0.31285138240250243,0.3456218777941852] (2,-1; 2,-1), time: 2.7691s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2671s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3306s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7020s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.14164348511008418,0.43256513937750407] (2,-1; 2,-1), time: 3.6087s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_164, [-inf,inf]=>[-0.17748778251856323,0.43373619724193985] (2,-1; 2,-1), time: 3.0382s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5469s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_181, [-inf,inf]=>[-0.5951305937805159,0.07988729164200056] (2,-1; 2,-1), time: 3.6298s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2708s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-0.0045572695817047044,0.5442752229198643] (2,-1; 2,-1), time: 9.1300s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3022s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.082567148583268] (15,-1; 2,-1), time: 1.2077s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8225s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_195, [-inf,inf]=>[-0.26009126605170807,0.2253369901835655] (2,-1; 2,-1), time: 5.8530s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_55, [-inf,inf]=>[-0.513781916020179,0.0707428762711244] (2,-1; 2,-1), time: 10.4201s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[1e-05,0.7467029392352333] (15,-1; 2,-1), time: 1.7350s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3423s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.1591478407535879,0.48206800538383276] (2,-1; 2,-1), time: 5.6987s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.3619s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2413s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2852s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3277s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_114, [-inf,inf]=>[-inf,-0.0013955701773113727] (-1,-1; 2,-1), time: 1.2495s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.4964848007376834,0.08165267865290632] (2,-1; 2,-1), time: 4.5701s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_17, [-inf,inf]=>[-0.027765165550538526,0.5018433973163334] (2,-1; 2,-1), time: 3.8437s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_104, [-inf,inf]=>[-0.35449177550456074,0.15685486276982474] (2,-1; 2,-1), time: 6.6659s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-0.2894043400132795,0.3651006453806827] (2,-1; 2,-1), time: 2.4414s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_169, [-inf,inf]=>[-0.24044442886782838,0.3573803276761943] (2,-1; 2,-1), time: 7.0898s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_56, [-inf,inf]=>[-0.16493979220356925,0.4547371576306901] (2,-1; 2,-1), time: 5.5109s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.11903935489718719,0.5780223931220813] (2,-1; 2,-1), time: 5.0741s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_32, [-inf,inf]=>[-0.4979849666988582,0.038850078419510756] (2,-1; 2,-1), time: 4.5794s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-0.3696357081915237,0.148081766566866] (2,-1; 2,-1), time: 4.4376s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.4428270348924554,0.39641345580399906] (2,-1; 2,-1), time: 3.7183s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-0.33732993514491105,0.25943326411251977] (2,-1; 2,-1), time: 5.3821s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.0038387174117586564,0.4652234876991486] (2,-1; 2,-1), time: 3.9940s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_176, [-inf,inf]=>[-0.5415858805183373,0.08509720157945229] (2,-1; 2,-1), time: 8.1684s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.1014644280411474,0.49679118863242344] (2,-1; 2,-1), time: 4.2839s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_106, [-inf,inf]=>[-0.5563797867656204,0.03538538109464213] (2,-1; 2,-1), time: 4.4679s, #vars: 1289, #constrs: 556, improved: True
PGD done for relu layer 2
MIP improved 69 nodes out of 69 unstable nodes, lb improved 9.921821594238281, ub improved 12.968194961547852, time 17.2443
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_159', 'lay6_62', 'lay6_124', 'lay6_118', 'lay6_106', 'lay6_10', 'lay6_41', 'lay6_100', 'lay6_7', 'lay6_22', 'lay6_32', 'lay6_30', 'lay6_190', 'lay6_3', 'lay6_68', 'lay6_125', 'lay6_143', 'lay6_34', 'lay6_54', 'lay6_44', 'lay6_160', 'lay6_20', 'lay6_79', 'lay6_158', 'lay6_8', 'lay6_109', 'lay6_131', 'lay6_65', 'lay6_115', 'lay6_127', 'lay6_67', 'lay6_73', 'lay6_60', 'lay6_162', 'lay6_87', 'lay6_114', 'lay6_95', 'lay6_112', 'lay6_197', 'lay6_55', 'lay6_148', 'lay6_123', 'lay6_150', 'lay6_97', 'lay6_23', 'lay6_166', 'lay6_181', 'lay6_163', 'lay6_94', 'lay6_102', 'lay6_15', 'lay6_101', 'lay6_43', 'lay6_50', 'lay6_78', 'lay6_5', 'lay6_155', 'lay6_25', 'lay6_71', 'lay6_42', 'lay6_64', 'lay6_176', 'lay6_130', 'lay6_81', 'lay6_18', 'lay6_135', 'lay6_1', 'lay6_119', 'lay6_184', 'lay6_192', 'lay6_72', 'lay6_74', 'lay6_179', 'lay6_19', 'lay6_164', 'lay6_185', 'lay6_12', 'lay6_138', 'lay6_117', 'lay6_136', 'lay6_75', 'lay6_141', 'lay6_139', 'lay6_156', 'lay6_111', 'lay6_83', 'lay6_92', 'lay6_167', 'lay6_161', 'lay6_186', 'lay6_70', 'lay6_85', 'lay6_145', 'lay6_170', 'lay6_53', 'lay6_29', 'lay6_104', 'lay6_4', 'lay6_120', 'lay6_199', 'lay6_69', 'lay6_61', 'lay6_107', 'lay6_132', 'lay6_122', 'lay6_0', 'lay6_137', 'lay6_147', 'lay6_113', 'lay6_47', 'lay6_110', 'lay6_144'] filter: 1.0
Solving MIP for lay6_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5118s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3255s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0369s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0378s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0809s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1509s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4441s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7512s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8623s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9230s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9455s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3476s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2913s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9490s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5452s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.9316s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5131s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3164s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3202s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.4870s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4826s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9456s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1072s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4598s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3766s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[1e-05,0.5933991696230223] (15,-1; 9,-1), time: 15.9532s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1254s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.5676588665309683] (15,-1; 2,-1), time: 11.7065s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2986s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3545s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.29121464968114374,0.11570445072275826] (2,-1; 9,-1), time: 22.5231s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.33187365773575866,0.1268977490031567] (9,-1; 2,-1), time: 22.6121s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.40985784391621294,0.1174384686082069] (9,-1; 2,-1), time: 21.5218s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2991s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.4443455245465956,0.02444295588171619] (2,-1; 9,-1), time: 23.5745s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3700s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5859s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3506s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3738s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-0.3281903012265883,0.2680144575733497] (9,-1; 2,-1), time: 25.2538s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.2667s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-0.38003956763953356,0.06278004844701486] (2,-1; 9,-1), time: 27.0067s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7973s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2895s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_155, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7002s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3911s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_115, [-inf,inf]=>[-0.007436265637712937,0.46604806631041884] (9,-1; 2,-1), time: 26.4046s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3582s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_100, [-inf,inf]=>[-0.4535928965467524,0.030545823889284673] (9,-1; 9,-1), time: 30.0193s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[-0.1236962398249999,0.2987975173353303] (9,-1; 9,-1), time: 30.0231s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.4130766094832853,0.037763766896202665] (9,-1; 9,-1), time: 30.0144s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.05973922593811999,0.37142587713652375] (9,-1; 9,-1), time: 30.0707s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3920s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3867s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3124s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8811s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9473s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3094s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_127, [-inf,inf]=>[-0.15137722576739976,0.3645431336759367] (9,-1; 9,-1), time: 30.0194s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7973s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2997s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-0.7162162612209755,0.027532907525982715] (2,-1; 2,-1), time: 15.9472s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3054s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.6343529969038297,0.009470761351828366] (9,-1; 2,-1), time: 23.5390s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7987s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9609s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[1e-05,0.9697942401947506] (15,-1; 2,-1), time: 8.5161s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.5695814167968568,0.003602071166892374] (9,-1; 2,-1), time: 23.8669s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.7848871191202491,0.014750188191881008] (9,-1; 2,-1), time: 19.5484s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[1e-05,1.024759123844562] (15,-1; 2,-1), time: 12.8220s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3533s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[1e-05,1.8925611483442841] (15,-1; 2,-1), time: 4.4231s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4907s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4107s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_179, [-inf,inf]=>[1e-05,0.7996643673360562] (15,-1; 9,-1), time: 15.4051s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[1e-05,0.6215952117292116] (15,-1; 2,-1), time: 14.4665s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3992s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-0.4179123688396484,0.05714351882036756] (9,-1; 2,-1), time: 23.8216s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.24506911507067242,0.23094633378139634] (2,-1; 9,-1), time: 29.0975s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.2685892654624077,0.30909846059436974] (2,-1; 2,-1), time: 18.9531s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-0.2648279721004544,0.13089540257156387] (9,-1; 2,-1), time: 28.3115s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3686s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-0.1921550506831527,0.37666305503439756] (2,-1; 9,-1), time: 27.1051s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_130, [-inf,inf]=>[-0.3451798220231859,0.1722658782577614] (9,-1; 2,-1), time: 27.8353s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.40820100468218223,0.06708431560139577] (9,-1; 9,-1), time: 30.0158s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5079302626089329,0.21403985457695385] (9,-1; 9,-1), time: 30.0118s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[1e-05,0.9285513160581422] (15,-1; 2,-1), time: 7.8975s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3492s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2946s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_185, [-inf,inf]=>[-0.13702965271105816,0.43735877858652616] (9,-1; 9,-1), time: 30.0243s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_156, [-inf,inf]=>[-0.2356670984602139,0.21675244139124578] (9,-1; 2,-1), time: 22.0462s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_145, [-inf,inf]=>[1e-05,0.893210511017947] (15,-1; 9,-1), time: 15.8930s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[-0.17760649397234948,0.3601239515111348] (9,-1; 2,-1), time: 23.5457s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5163s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3148s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-0.4571425990272397,0.05858176827673672] (9,-1; 9,-1), time: 30.0106s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.596314295968832,0.44409051130819827] (2,-1; 2,-1), time: 15.6292s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[1e-05,1.0100016546077444] (15,-1; 2,-1), time: 6.0112s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_199, [-inf,inf]=>[1e-05,0.5781959489166317] (15,-1; 9,-1), time: 15.7089s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[1e-05,0.9820507588839932] (15,-1; 9,-1), time: 15.3804s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.5280708860275868,0.22795820700470285] (9,-1; 2,-1), time: 20.7789s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[1e-05,1.2721175572788288] (15,-1; 2,-1), time: 7.4146s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.25257971919351,0.2957284775996951] (9,-1; 9,-1), time: 30.0220s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[1e-05,0.8393375315234142] (15,-1; 9,-1), time: 15.3958s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[-0.3404206269427568,0.15935554106536995] (9,-1; 9,-1), time: 30.0484s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.36766348188501374,0.09244668220551308] (9,-1; 9,-1), time: 30.3427s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.214894363555218] (15,-1; 2,-1), time: 10.4485s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[1e-05,0.9241346651278374] (15,-1; 9,-1), time: 15.4289s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-0.14638959329329548,0.19276077288940377] (9,-1; 2,-1), time: 29.1310s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_47, [-inf,inf]=>[1e-05,1.1452689593011998] (15,-1; 9,-1), time: 15.2850s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_104, [-inf,inf]=>[-0.2671753162268294,0.22045284859065042] (2,-1; 9,-1), time: 29.6869s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_147, [-inf,inf]=>[-0.15487319762590357,0.34443654406624824] (9,-1; 9,-1), time: 30.0129s, #vars: 1567, #constrs: 873, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(51, -1), (194, -1), (143, -1), (53, -1), (59, -1), (76, -1), (67, 1), (43, -1), (180, -1), (101, -1), (41, -1), (11, -1), (93, -1), (33, -1), (26, -1), (128, -1), (198, -1), (36, -1), (196, -1), (138, -1), (30, 1), (58, -1), (38, 1), (137, -1), (77, -1), (199, -1), (114, -1), (80, -1), (88, -1), (111, -1)]
best_l after optimization: -1925.2999267578125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 10.500111103057861
alpha-CROWN with intermediate bounds by MIP: tensor([[-129.20474243, -200.34933472, -247.51364136, -269.52227783,
         -239.17393494, -203.46697998, -185.66873169, -242.81864929,
         -207.58171082]], device='cuda:0') None
MIP improved 112 nodes out of 112 unstable nodes, lb improved 22.000219345092773, ub improved 34.817161560058594, time 94.9245
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_140', 'lay8_60', 'lay8_25', 'lay8_42', 'lay8_54', 'lay8_21', 'lay8_15', 'lay8_14', 'lay8_85', 'lay8_86', 'lay8_118', 'lay8_35', 'lay8_63', 'lay8_113', 'lay8_149', 'lay8_122', 'lay8_142', 'lay8_23', 'lay8_76', 'lay8_112', 'lay8_102', 'lay8_156', 'lay8_158', 'lay8_170', 'lay8_104', 'lay8_187', 'lay8_27', 'lay8_144', 'lay8_110', 'lay8_151', 'lay8_100', 'lay8_61', 'lay8_178', 'lay8_24', 'lay8_121', 'lay8_34', 'lay8_37', 'lay8_105', 'lay8_185', 'lay8_115', 'lay8_94', 'lay8_164', 'lay8_89', 'lay8_137', 'lay8_169', 'lay8_13', 'lay8_10', 'lay8_73', 'lay8_29', 'lay8_166', 'lay8_50', 'lay8_68', 'lay8_189', 'lay8_120', 'lay8_53', 'lay8_161', 'lay8_190', 'lay8_154', 'lay8_45', 'lay8_71', 'lay8_146', 'lay8_163', 'lay8_91', 'lay8_150', 'lay8_172', 'lay8_56', 'lay8_59', 'lay8_48', 'lay8_128', 'lay8_88', 'lay8_19', 'lay8_47', 'lay8_135', 'lay8_174', 'lay8_106', 'lay8_84', 'lay8_39', 'lay8_40', 'lay8_125', 'lay8_195', 'lay8_95', 'lay8_155', 'lay8_33', 'lay8_171', 'lay8_188', 'lay8_129', 'lay8_83', 'lay8_62', 'lay8_103', 'lay8_148', 'lay8_75', 'lay8_153', 'lay8_96', 'lay8_167', 'lay8_17', 'lay8_147', 'lay8_132', 'lay8_184', 'lay8_107', 'lay8_93', 'lay8_152', 'lay8_4', 'lay8_134', 'lay8_6', 'lay8_36', 'lay8_198', 'lay8_182', 'lay8_191', 'lay8_199', 'lay8_183', 'lay8_168', 'lay8_126', 'lay8_44', 'lay8_116', 'lay8_108', 'lay8_90', 'lay8_196', 'lay8_173', 'lay8_58', 'lay8_80', 'lay8_31', 'lay8_79', 'lay8_11', 'lay8_194', 'lay8_162', 'lay8_51', 'lay8_52', 'lay8_43', 'lay8_141', 'lay8_16', 'lay8_32', 'lay8_20', 'lay8_41', 'lay8_64', 'lay8_81', 'lay8_7', 'lay8_2', 'lay8_57', 'lay8_130', 'lay8_117', 'lay8_70', 'lay8_99', 'lay8_12', 'lay8_49', 'lay8_111', 'lay8_157', 'lay8_101', 'lay8_8', 'lay8_82', 'lay8_46', 'lay8_69', 'lay8_165', 'lay8_18', 'lay8_1', 'lay8_177', 'lay8_127', 'lay8_143', 'lay8_65', 'lay8_78', 'lay8_179', 'lay8_3', 'lay8_180', 'lay8_74', 'lay8_139', 'lay8_97', 'lay8_145', 'lay8_197', 'lay8_30', 'lay8_0', 'lay8_181', 'lay8_92', 'lay8_131', 'lay8_159', 'lay8_133', 'lay8_9', 'lay8_5', 'lay8_28', 'lay8_123', 'lay8_193', 'lay8_109', 'lay8_55', 'lay8_72'] filter: 1.0
Solving MIP for lay8_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4993s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5137s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5284s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5874s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5446s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6116s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6189s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4255s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4599s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4639s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2230s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8123s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3699s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3866s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5797s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3577s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.8882s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.1779s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3868s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4634s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4858s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4496s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3759s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4398s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.4158s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[1e-05,1.30683588272711] (15,-1; 9,-1), time: 15.3837s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4247s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[1e-05,0.5925271684720181] (15,-1; 9,-1), time: 23.6720s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4560s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[1e-05,0.48759542562279495] (15,-1; 9,-1), time: 17.5373s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[1e-05,0.833022848255276] (15,-1; 9,-1), time: 15.3917s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4575s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4258s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3594s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-0.2715450041185725,0.28036601335273165] (9,-1; 9,-1), time: 30.0157s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-0.24152561457592944,0.2133558857946511] (9,-1; 9,-1), time: 30.0177s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.2499934814889647,0.11933383533263253] (9,-1; 9,-1), time: 30.0202s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-0.6361958889300253,0.005116280579934239] (9,-1; 9,-1), time: 30.0270s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4289s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.4292986877528649,0.1457339978387481] (9,-1; 9,-1), time: 30.0312s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-0.7362689370343696,0.024873735127612567] (9,-1; 9,-1), time: 30.4161s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-0.011575789770346146,0.517756574294133] (9,-1; 9,-1), time: 30.4274s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.035647486363688814,0.5012629263065608] (9,-1; 9,-1), time: 30.0147s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.42511671893515696,0.0777322825969679] (9,-1; 9,-1), time: 30.0380s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.2878077428770837,0.22329534760219721] (9,-1; 9,-1), time: 30.0273s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3571s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3519s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1109s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.17282474021269678,0.2788130308720454] (9,-1; 9,-1), time: 30.0246s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4331s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3541s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.1525260003040684,0.29184314634029024] (9,-1; 9,-1), time: 30.0594s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.3857579583409201,0.25935350743103236] (9,-1; 9,-1), time: 30.0252s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2612s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3649s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3530s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5019s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4252s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-0.5093829227976338,0.04953782344582262] (9,-1; 9,-1), time: 30.0170s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[1e-05,0.7066705641132228] (15,-1; 9,-1), time: 23.4590s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[1e-05,0.3930177282747115] (15,-1; 9,-1), time: 23.6101s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3503s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.5589392228657288,0.0897622509827332] (9,-1; 9,-1), time: 30.0465s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.16275203323207038,0.23244298206264127] (9,-1; 9,-1), time: 30.0160s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3534s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4561s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4525s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4282s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[1e-05,0.5270448824807393] (15,-1; 9,-1), time: 28.4918s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3607s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3532s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.16132283111782955,0.268793741721276] (9,-1; 9,-1), time: 30.0150s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-0.33329752621073944,0.0726404419170491] (9,-1; 9,-1), time: 30.0218s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4473s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[1e-05,0.712119984979704] (15,-1; 9,-1), time: 15.4529s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[-0.4715824572085073,0.018870705158722575] (9,-1; 9,-1), time: 30.0419s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[-0.15240721104889865,0.30773795601292697] (9,-1; 9,-1), time: 30.7494s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3535s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4175s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-0.39798746230281495,0.09667213154207739] (9,-1; 9,-1), time: 30.1120s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-0.2421856114127361,0.276400714313809] (9,-1; 9,-1), time: 30.1095s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4420s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3576s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3484s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4300s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3624s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3982s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1072s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4428s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3645s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.44002360941936997,0.0863675460140022] (9,-1; 9,-1), time: 30.3107s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.030290617265121347,0.3348457380659623] (9,-1; 9,-1), time: 30.0253s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4309s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[1e-05,1.3974591796283302] (15,-1; 9,-1), time: 15.4553s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[1e-05,1.931362691825543] (15,-1; 9,-1), time: 15.9122s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[1e-05,0.9785100694913259] (15,-1; 9,-1), time: 15.3648s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4227s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,0.6644434415878887] (15,-1; 9,-1), time: 15.3738s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4170s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-0.09280913961409513,0.40900416692215946] (9,-1; 9,-1), time: 30.0200s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.17193944642342834,0.20978951943423213] (9,-1; 9,-1), time: 30.0193s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.40179910339793773,0.06388637876677478] (9,-1; 9,-1), time: 30.0191s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.3781309774129443,0.11981878593927194] (9,-1; 9,-1), time: 30.2949s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1623s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3845s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4540s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1177s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[1e-05,0.6772679618523216] (15,-1; 9,-1), time: 15.6489s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3453s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.260225821330573,0.5628521078015402] (9,-1; 9,-1), time: 30.1320s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.3710128544164721] (15,-1; 9,-1), time: 15.3807s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-0.3334424898020364,0.13664347401720048] (9,-1; 9,-1), time: 30.0459s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3643s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3778s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.18752617665362614,0.21071576538349734] (9,-1; 9,-1), time: 30.0455s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4505s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4341s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3587s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3592s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4284s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-0.3048956264955685,0.38588300057361896] (9,-1; 9,-1), time: 30.0431s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3579s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-0.2686810236474189,0.2304568535620753] (9,-1; 9,-1), time: 30.3006s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-0.47175580848085974,0.02610063874953452] (9,-1; 9,-1), time: 30.0181s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-0.1133559875735164,0.2704890359268798] (9,-1; 9,-1), time: 30.0429s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3377s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.4690652707528814,0.05748000146603638] (9,-1; 9,-1), time: 30.0168s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4146s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.3824s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[1e-05,2.5131231844865636] (15,-1; 9,-1), time: 15.3712s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[1e-05,1.2382408491314156] (15,-1; 9,-1), time: 15.3805s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.23378297137888426,0.19869135048792766] (9,-1; 9,-1), time: 30.0924s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-0.38221007022509196,0.08820052123648353] (9,-1; 9,-1), time: 30.0368s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[1e-05,1.4054537146261992] (15,-1; 9,-1), time: 15.4566s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3533s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3392s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.46988588796770125,0.07775559230884006] (9,-1; 9,-1), time: 30.0589s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,1.611425540226807] (15,-1; 9,-1), time: 15.4417s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.4979158799642257,0.18271220245329567] (9,-1; 9,-1), time: 30.2330s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-0.11006819195514096,0.33072005791048187] (9,-1; 9,-1), time: 30.0520s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.4137890555223071,0.033582784866409976] (9,-1; 9,-1), time: 30.0175s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3950s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[1e-05,1.0038983635040437] (15,-1; 9,-1), time: 15.4510s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-0.4553789798315329,0.1567762307498562] (9,-1; 9,-1), time: 30.0135s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.04924080744614521,0.6708013303794431] (9,-1; 9,-1), time: 30.0204s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-0.29346185660681434,0.17704175437034148] (9,-1; 9,-1), time: 30.0123s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3664s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-0.33393004820653543,0.19971262480951457] (9,-1; 9,-1), time: 30.0335s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1461s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.44986856626078897,0.002542036088654] (9,-1; 9,-1), time: 30.0333s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3404s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3503s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[1e-05,1.2424524385801088] (15,-1; 9,-1), time: 15.4529s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[1e-05,0.7959806528024084] (15,-1; 9,-1), time: 15.3919s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-0.2974562017333805,0.14617318446236927] (9,-1; 9,-1), time: 30.0365s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[1e-05,0.6007388993045792] (15,-1; 9,-1), time: 15.3774s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3774s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[1e-05,1.298444221349231] (15,-1; 9,-1), time: 15.4603s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3790s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4545s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[1e-05,1.4018587886180434] (15,-1; 9,-1), time: 15.3965s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[1e-05,0.5698440501429433] (15,-1; 9,-1), time: 24.3670s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3675s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.007849342204376] (15,-1; 9,-1), time: 15.3769s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-0.4246516016790334,0.15367754964432256] (9,-1; 9,-1), time: 30.0169s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-0.0220671943473159,0.4008913171596057] (9,-1; 9,-1), time: 30.0840s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3439s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3611s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.18623991922437325,0.2265840386775377] (9,-1; 9,-1), time: 30.0695s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[1e-05,0.8956601184134277] (15,-1; 9,-1), time: 15.7408s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[1e-05,1.2991648326095921] (15,-1; 9,-1), time: 15.3347s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[1e-05,0.504761081775984] (15,-1; 9,-1), time: 24.4567s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,1.8644150958890744] (15,-1; 9,-1), time: 15.3664s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[1e-05,0.893731030191198] (15,-1; 9,-1), time: 15.3724s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,2.0997240163714954] (15,-1; 9,-1), time: 15.3662s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,1.900106344361271] (15,-1; 9,-1), time: 15.3575s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-0.4317970312335969,0.025694428439159978] (9,-1; 9,-1), time: 30.0239s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,1.1284751290647828] (15,-1; 9,-1), time: 15.6141s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-0.3456448981048563,0.07342259916427483] (9,-1; 9,-1), time: 30.0126s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-0.4339682946707356,0.06829128739142407] (9,-1; 9,-1), time: 30.0232s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.05612701127970001,0.3987740062758364] (9,-1; 9,-1), time: 30.1041s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.35904757314021724,0.03252375158053742] (9,-1; 9,-1), time: 30.0140s, #vars: 1839, #constrs: 1181, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(159, -1), (62, -1), (118, -1), (22, -1), (32, -1), (190, -1), (3, -1), (125, -1), (143, -1), (34, -1), (54, -1), (20, 1), (79, -1), (158, -1), (8, -1), (109, -1), (131, -1), (65, -1), (67, -1), (73, 1), (60, -1), (162, -1), (114, -1), (95, -1), (112, -1), (197, -1), (55, -1), (148, -1), (97, -1), (23, -1), (166, -1), (181, -1), (163, -1), (15, -1), (43, -1), (50, -1), (5, -1), (155, -1), (25, -1), (64, -1), (176, -1), (81, -1), (18, -1), (135, -1), (1, 1), (119, -1), (184, -1), (72, 1), (74, -1), (179, 1), (19, -1), (164, -1), (12, -1), (117, 1), (136, -1), (75, -1), (139, 1), (83, -1), (92, -1), (161, -1), (85, -1), (145, 1), (29, -1), (120, 1), (199, 1), (69, 1), (61, 1), (107, -1), (132, -1), (122, 1), (0, 1), (137, -1), (113, -1), (47, 1), (110, 1), (144, 1)]
best_l after optimization: -253.1147003173828 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 10.165519952774048
alpha-CROWN with intermediate bounds by MIP: tensor([[-18.31808281, -26.36003304, -32.28492355, -34.16018677, -31.38426018,
         -27.25823212, -23.81335068, -31.99589539, -27.53973007]],
       device='cuda:0') None
MIP improved 182 nodes out of 182 unstable nodes, lb improved 75.5301284790039, ub improved 110.43687438964844, time 163.7042
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_83', 'lay10_31', 'lay10_50', 'lay10_64', 'lay10_86', 'lay10_34', 'lay10_191', 'lay10_45', 'lay10_22', 'lay10_184', 'lay10_72', 'lay10_169', 'lay10_38', 'lay10_58', 'lay10_144', 'lay10_36', 'lay10_183', 'lay10_11', 'lay10_111', 'lay10_196', 'lay10_48', 'lay10_54', 'lay10_67', 'lay10_77', 'lay10_163', 'lay10_157', 'lay10_56', 'lay10_106', 'lay10_156', 'lay10_199', 'lay10_89', 'lay10_15', 'lay10_39', 'lay10_29', 'lay10_164', 'lay10_12', 'lay10_66', 'lay10_152', 'lay10_25', 'lay10_90', 'lay10_142', 'lay10_118', 'lay10_194', 'lay10_130', 'lay10_93', 'lay10_124', 'lay10_197', 'lay10_143', 'lay10_53', 'lay10_44', 'lay10_99', 'lay10_63', 'lay10_73', 'lay10_171', 'lay10_116', 'lay10_167', 'lay10_42', 'lay10_132', 'lay10_131', 'lay10_195', 'lay10_76', 'lay10_162', 'lay10_182', 'lay10_91', 'lay10_3', 'lay10_40', 'lay10_5', 'lay10_159', 'lay10_100', 'lay10_185', 'lay10_135', 'lay10_138', 'lay10_149', 'lay10_23', 'lay10_6', 'lay10_160', 'lay10_96', 'lay10_102', 'lay10_52', 'lay10_122', 'lay10_49', 'lay10_30', 'lay10_125', 'lay10_57', 'lay10_10', 'lay10_20', 'lay10_16', 'lay10_88', 'lay10_79', 'lay10_18', 'lay10_28', 'lay10_155', 'lay10_110', 'lay10_9', 'lay10_47', 'lay10_85', 'lay10_146', 'lay10_127', 'lay10_74', 'lay10_65', 'lay10_8', 'lay10_61', 'lay10_112', 'lay10_95', 'lay10_174', 'lay10_147', 'lay10_46', 'lay10_108', 'lay10_35', 'lay10_71', 'lay10_97', 'lay10_32', 'lay10_26', 'lay10_126', 'lay10_114', 'lay10_128', 'lay10_115', 'lay10_19', 'lay10_94', 'lay10_43', 'lay10_55', 'lay10_78', 'lay10_139', 'lay10_134', 'lay10_82', 'lay10_158', 'lay10_178', 'lay10_75', 'lay10_101', 'lay10_168', 'lay10_192', 'lay10_189', 'lay10_187', 'lay10_37', 'lay10_2', 'lay10_176', 'lay10_24', 'lay10_4', 'lay10_69', 'lay10_120', 'lay10_161', 'lay10_181', 'lay10_175', 'lay10_186', 'lay10_109', 'lay10_166', 'lay10_41', 'lay10_190', 'lay10_14', 'lay10_193', 'lay10_98', 'lay10_117', 'lay10_173', 'lay10_165', 'lay10_17', 'lay10_81', 'lay10_151', 'lay10_123', 'lay10_80', 'lay10_148', 'lay10_129', 'lay10_27', 'lay10_105', 'lay10_170', 'lay10_136', 'lay10_68', 'lay10_51', 'lay10_119', 'lay10_154', 'lay10_141', 'lay10_180', 'lay10_62', 'lay10_0', 'lay10_113', 'lay10_145', 'lay10_59', 'lay10_103', 'lay10_1', 'lay10_172', 'lay10_153', 'lay10_107', 'lay10_87', 'lay10_84', 'lay10_33', 'lay10_13', 'lay10_92', 'lay10_60', 'lay10_137', 'lay10_198', 'lay10_177', 'lay10_7', 'lay10_21', 'lay10_188', 'lay10_70', 'lay10_121', 'lay10_133', 'lay10_140', 'lay10_104', 'lay10_179', 'lay10_150'] filter: 1.0
Solving MIP for lay10_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7293s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7416s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7491s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7510s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7639s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7732s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7912s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7964s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8273s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8626s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7197s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7754s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7741s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7868s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8580s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8516s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7392s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7952s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0994s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7117s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6446s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6759s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8018s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4401s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0101s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7128s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6146s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6231s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6200s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7173s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6232s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6054s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5922s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5684s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5825s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.1654s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6068s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6081s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6748s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6508s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.1624s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5739s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[1e-05,2.9052605760369343] (15,-1; 9,-1), time: 15.6596s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[1e-05,0.649181924840143] (15,-1; 9,-1), time: 19.2779s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7200s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[1e-05,0.7537421765342341] (15,-1; 9,-1), time: 16.7070s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5986s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6053s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.11761072817241724,0.8280499981400571] (9,-1; 9,-1), time: 30.0214s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-0.1350840334257574,0.4756116703976882] (9,-1; 9,-1), time: 30.0166s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6670s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-0.6372313556356435,0.1118404929378046] (9,-1; 9,-1), time: 30.0131s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-0.31221924346017194,0.25026774021760023] (9,-1; 9,-1), time: 30.0164s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.476250235066782,0.08367120106795395] (9,-1; 9,-1), time: 30.0132s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6574s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5975s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6569s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-0.004948649832591083,0.5230380841512778] (9,-1; 9,-1), time: 30.0222s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6382s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.5259153740394162,0.1348103612570283] (9,-1; 9,-1), time: 30.0142s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-0.26691252975907015,0.34690874510470465] (9,-1; 9,-1), time: 30.0169s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6472s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6753s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-0.08347909543770399,0.5866137833625484] (9,-1; 9,-1), time: 30.0152s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.39999263786172834,0.2177385306478674] (9,-1; 9,-1), time: 30.0206s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6740s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5876s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7225s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5677s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5820s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5560s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5757s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6362s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.4409953522527359,0.19382035242694395] (9,-1; 9,-1), time: 30.0401s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6724s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5850s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.7900620282951198] (15,-1; 9,-1), time: 15.7253s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.23629702674433192,0.21536474081004303] (9,-1; 9,-1), time: 30.0114s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6254s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5838s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[1e-05,1.3097849057127748] (15,-1; 9,-1), time: 15.6965s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5742s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6424s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-0.252991768910683,0.43954556690333074] (9,-1; 9,-1), time: 30.0130s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-0.4968868789305772,0.13566142221541086] (9,-1; 9,-1), time: 30.0167s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[1e-05,1.0255363432924045] (15,-1; 9,-1), time: 15.6053s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6810s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6534s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[1e-05,0.6580504298062851] (15,-1; 9,-1), time: 17.6110s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5794s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.8050300650121931] (15,-1; 9,-1), time: 15.6355s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6360s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6443s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6643s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[1e-05,0.6147713807054279] (15,-1; 9,-1), time: 17.9698s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5962s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6208s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5636s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5701s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5775s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[1e-05,1.4532844739245738] (15,-1; 9,-1), time: 15.5863s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5857s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5673s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6558s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5625s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5617s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6485s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6554s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6157s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[1e-05,1.7572503143780036] (15,-1; 9,-1), time: 15.6538s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3803s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5865s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-0.5846392835513448,0.21194239310527482] (9,-1; 9,-1), time: 30.0167s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-0.12149850055887497,0.7500020235232775] (9,-1; 9,-1), time: 30.0137s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5606s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.5698653129710632,0.009065844850517677] (9,-1; 9,-1), time: 30.0123s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5809s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.18462934272082607,0.5824061958721177] (9,-1; 9,-1), time: 30.0136s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6348s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6293s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.5047188766955056,0.30363768637135374] (9,-1; 9,-1), time: 30.0120s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6811s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6030s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.16419427184289473,0.4935608166717354] (9,-1; 9,-1), time: 30.0141s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.18936591442925688,0.34889677796980434] (9,-1; 9,-1), time: 30.0168s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5901s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[-0.1782254019351766,0.44238830876590346] (9,-1; 9,-1), time: 30.0137s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6373s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[1e-05,2.5731511222761707] (15,-1; 9,-1), time: 15.5989s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6404s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.2141846523821734,0.2650892021881612] (9,-1; 9,-1), time: 30.0115s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6046s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5876s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6788s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.1414880625216504] (15,-1; 9,-1), time: 15.6709s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4919s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6583s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6624s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5571s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5676s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6094s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.772821467834337] (15,-1; 9,-1), time: 15.5837s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-0.7172847439476385,0.05772049913111417] (9,-1; 9,-1), time: 30.0137s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5694s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[1e-05,0.8341171451110028] (15,-1; 9,-1), time: 15.6949s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5486s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6665s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.09223691559370861,0.4199334115763889] (9,-1; 9,-1), time: 30.0143s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[1e-05,0.921138065732889] (15,-1; 9,-1), time: 15.6831s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,2.5531423862062765] (15,-1; 9,-1), time: 15.6384s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-0.35927108331307606,0.2455362080332513] (9,-1; 9,-1), time: 30.0117s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5787s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[1e-05,1.7499452580218455] (15,-1; 9,-1), time: 15.6183s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-0.40119033860208186,0.24951595226430937] (9,-1; 9,-1), time: 30.0181s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5479s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6196s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[1e-05,4.962745256144624] (15,-1; 9,-1), time: 15.5858s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[1e-05,1.3117138179646102] (15,-1; 9,-1), time: 15.6191s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5980s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-0.09671584330119211,0.42281779407685083] (9,-1; 9,-1), time: 30.0136s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6098s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-0.7504020335578113,0.17163305256785158] (9,-1; 9,-1), time: 30.1097s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6451s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6406s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[1e-05,1.4461515345195142] (15,-1; 9,-1), time: 15.5932s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-0.7030091085953721,0.0015833795488782534] (9,-1; 9,-1), time: 30.0114s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.41250936798692617,0.12707403114524018] (9,-1; 9,-1), time: 30.0156s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.06105853894842509,0.6108687435034542] (9,-1; 9,-1), time: 30.0158s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5762s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6362s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5992s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6272s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5453s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5435s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5952s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6003s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.38763311833863723,0.20952794770974287] (9,-1; 9,-1), time: 30.0388s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-0.48652116841888676,0.0144444501806752] (9,-1; 9,-1), time: 30.0137s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5753s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6203s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5808s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6475s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-0.09368338834136691,0.46250855010776964] (9,-1; 9,-1), time: 30.0121s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5900s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6825s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.4676408749024749,0.17085978190940823] (9,-1; 9,-1), time: 30.0109s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.2587430945363789,0.3294512871062612] (9,-1; 9,-1), time: 30.1849s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[1e-05,1.2793292833130858] (15,-1; 9,-1), time: 15.6386s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[1e-05,0.866566423731129] (15,-1; 9,-1), time: 16.6187s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[-0.23067575860538586,0.29658831762266624] (9,-1; 9,-1), time: 30.0112s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-0.47985568136082174,0.16941905920687006] (9,-1; 9,-1), time: 30.0150s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.3974s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-0.43925094132974185,0.08573505089476388] (9,-1; 9,-1), time: 30.0155s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.6118444000779805,0.03303379795878947] (9,-1; 9,-1), time: 30.0108s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.21272869346725143,0.37556017664504676] (9,-1; 9,-1), time: 30.0129s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-0.5790913672925398,0.020500201939660737] (9,-1; 9,-1), time: 30.0133s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-0.41793459735771255,0.1269054852120783] (9,-1; 9,-1), time: 30.0123s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-0.5379386847179467,0.09073254801042176] (9,-1; 9,-1), time: 30.0109s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-0.5209113579577035,0.05587127489487774] (9,-1; 9,-1), time: 30.0119s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-0.7960348072126676,0.11607138652314915] (9,-1; 9,-1), time: 30.0123s, #vars: 2151, #constrs: 1549, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(60, -1), (25, -1), (42, -1), (21, -1), (15, -1), (14, -1), (85, -1), (86, -1), (35, -1), (63, -1), (149, 1), (122, -1), (76, -1), (112, -1), (156, 1), (158, -1), (104, -1), (27, -1), (110, -1), (151, -1), (100, -1), (178, -1), (24, 1), (121, -1), (34, -1), (37, -1), (105, -1), (185, -1), (115, 1), (164, -1), (137, -1), (13, -1), (10, -1), (73, -1), (68, -1), (53, 1), (190, 1), (71, -1), (146, -1), (163, 1), (91, -1), (172, -1), (56, -1), (48, 1), (128, -1), (88, -1), (19, -1), (47, -1), (135, -1), (39, -1), (125, -1), (195, -1), (95, -1), (155, 1), (33, -1), (171, 1), (188, -1), (129, -1), (62, -1), (148, -1), (153, -1), (96, -1), (167, 1), (17, -1), (147, -1), (132, -1), (184, -1), (107, -1), (152, -1), (4, 1), (6, -1), (36, -1), (191, -1), (183, 1), (168, 1), (126, -1), (116, -1), (196, -1), (58, -1), (80, -1), (79, -1), (194, -1), (162, 1), (51, -1), (52, -1), (43, -1), (141, -1), (32, -1), (20, -1), (41, -1), (7, 1), (2, -1), (130, -1), (117, 1), (70, -1), (12, -1), (49, 1), (157, 1), (46, -1), (69, -1), (165, 1), (18, 1), (1, 1), (177, 1), (127, 1), (143, -1), (65, 1), (78, 1), (179, 1), (180, -1), (139, -1), (97, -1), (145, -1), (0, 1), (181, 1), (92, 1), (131, -1), (159, 1), (133, -1), (9, -1), (28, 1), (123, -1), (193, 1), (109, 1), (55, -1), (72, -1)]
best_l after optimization: -19.519628524780273 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 10.066828727722168
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.24414253, -0.98444700, -3.21147537, -1.05076218, -2.51740837,
         -2.82778645, -0.59098864, -2.88122272, -3.21139574]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 199.95233154296875, ub improved 424.25750732421875, time 132.8658
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=200, bias=True) 5 12 torch.Size([200])
sorted candidates ['lay12_61', 'lay12_197', 'lay12_58', 'lay12_13', 'lay12_129', 'lay12_183', 'lay12_15', 'lay12_145', 'lay12_187', 'lay12_86', 'lay12_111', 'lay12_152', 'lay12_1', 'lay12_41', 'lay12_118', 'lay12_34', 'lay12_199', 'lay12_98', 'lay12_174', 'lay12_46', 'lay12_117', 'lay12_84', 'lay12_175', 'lay12_142', 'lay12_96', 'lay12_90', 'lay12_160', 'lay12_74', 'lay12_103', 'lay12_35', 'lay12_128', 'lay12_115', 'lay12_139', 'lay12_47', 'lay12_95', 'lay12_30', 'lay12_107', 'lay12_109', 'lay12_82', 'lay12_184', 'lay12_150', 'lay12_97', 'lay12_71', 'lay12_27', 'lay12_125', 'lay12_93', 'lay12_77', 'lay12_8', 'lay12_4', 'lay12_127', 'lay12_148', 'lay12_23', 'lay12_146', 'lay12_21', 'lay12_165', 'lay12_25', 'lay12_154', 'lay12_173', 'lay12_171', 'lay12_65', 'lay12_151', 'lay12_172', 'lay12_119', 'lay12_116', 'lay12_130', 'lay12_55', 'lay12_68', 'lay12_57', 'lay12_63', 'lay12_132', 'lay12_182', 'lay12_9', 'lay12_141', 'lay12_170', 'lay12_24', 'lay12_113', 'lay12_194', 'lay12_83', 'lay12_186', 'lay12_56', 'lay12_104', 'lay12_69', 'lay12_36', 'lay12_190', 'lay12_31', 'lay12_120', 'lay12_75', 'lay12_176', 'lay12_188', 'lay12_28', 'lay12_50', 'lay12_19', 'lay12_163', 'lay12_52', 'lay12_169', 'lay12_17', 'lay12_180', 'lay12_54', 'lay12_42', 'lay12_12', 'lay12_72', 'lay12_106', 'lay12_89', 'lay12_123', 'lay12_108', 'lay12_3', 'lay12_161', 'lay12_94', 'lay12_114', 'lay12_62', 'lay12_91', 'lay12_134', 'lay12_149', 'lay12_66', 'lay12_32', 'lay12_38', 'lay12_124', 'lay12_177', 'lay12_64', 'lay12_122', 'lay12_136', 'lay12_39', 'lay12_79', 'lay12_22', 'lay12_88', 'lay12_147', 'lay12_133', 'lay12_60', 'lay12_14', 'lay12_44', 'lay12_53', 'lay12_45', 'lay12_40', 'lay12_168', 'lay12_85', 'lay12_80', 'lay12_121', 'lay12_2', 'lay12_78', 'lay12_76', 'lay12_179', 'lay12_20', 'lay12_81', 'lay12_18', 'lay12_101', 'lay12_198', 'lay12_51', 'lay12_5', 'lay12_67', 'lay12_156', 'lay12_26', 'lay12_59', 'lay12_153', 'lay12_16', 'lay12_159', 'lay12_110', 'lay12_195', 'lay12_162', 'lay12_137', 'lay12_143', 'lay12_193', 'lay12_10', 'lay12_0', 'lay12_181', 'lay12_140', 'lay12_100', 'lay12_105', 'lay12_43', 'lay12_191', 'lay12_126', 'lay12_112', 'lay12_6', 'lay12_70', 'lay12_87', 'lay12_49', 'lay12_92', 'lay12_192', 'lay12_33', 'lay12_11', 'lay12_135', 'lay12_155', 'lay12_167', 'lay12_7', 'lay12_102', 'lay12_166', 'lay12_131', 'lay12_157', 'lay12_158', 'lay12_189', 'lay12_164', 'lay12_73', 'lay12_196', 'lay12_48', 'lay12_185', 'lay12_178', 'lay12_144', 'lay12_37', 'lay12_99', 'lay12_138', 'lay12_29'] filter: 1.0
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9067s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0658s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0770s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0926s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1330s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1368s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1498s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1659s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2156s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2147s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3626s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9332s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9542s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9623s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9149s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9961s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9785s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0928s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0093s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8811s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8846s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9097s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8450s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0556s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8381s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_103, [-inf,inf]=>[1e-05,1.3571472614688997] (15,-1; 9,-1), time: 15.9584s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[1e-05,1.610966289934616] (15,-1; 9,-1), time: 16.1338s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8805s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8071s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7805s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8727s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-0.4418743511404136,0.12783859498718952] (9,-1; 9,-1), time: 30.0204s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_187, [-inf,inf]=>[-0.773359095294821,0.11534390306308123] (9,-1; 9,-1), time: 30.0357s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_197, [-inf,inf]=>[-0.2249989866723866,0.2717143021614431] (9,-1; 9,-1), time: 30.0408s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_152, [-inf,inf]=>[-0.17919644234272314,0.5010185206144857] (9,-1; 9,-1), time: 30.0374s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_129, [-inf,inf]=>[-0.3188899206425845,0.2779680884587986] (9,-1; 9,-1), time: 30.0699s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7768s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_199, [-inf,inf]=>[-0.5762858700092258,0.07860903959864667] (9,-1; 9,-1), time: 30.0178s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[1e-05,0.6334234425543506] (15,-1; 9,-1), time: 28.0203s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9196s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.23113139021361845,0.5101075051765258] (9,-1; 9,-1), time: 30.0180s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-0.33488774492043544,0.20408293564477775] (9,-1; 9,-1), time: 30.0213s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8081s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8395s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9094s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8332s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_128, [-inf,inf]=>[-0.5594893042130941,0.09846538268534263] (9,-1; 9,-1), time: 30.0163s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8233s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8154s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8288s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7635s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_109, [-inf,inf]=>[-0.7719059567537412,0.14932389952032105] (9,-1; 9,-1), time: 30.0237s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8039s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-0.46425489680120885,0.08171053361546839] (9,-1; 9,-1), time: 30.2665s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7811s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_184, [-inf,inf]=>[-0.34791431692836416,0.3093365590193806] (9,-1; 9,-1), time: 30.3774s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8102s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_150, [-inf,inf]=>[-0.7658234105387148,0.23709544891879325] (9,-1; 9,-1), time: 30.0813s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9563s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8969s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9236s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8187s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.4037s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7669s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8490s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[-0.7212842194658385,0.32942458494667676] (9,-1; 9,-1), time: 30.0356s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.4243s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_182, [-inf,inf]=>[1e-05,1.0242873529196093] (15,-1; 9,-1), time: 16.0154s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8904s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7624s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[1e-05,0.6887385891046672] (15,-1; 9,-1), time: 15.8027s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.18707530880354525,0.5039872090043727] (9,-1; 9,-1), time: 30.0351s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8621s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8549s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.07814014925162432,0.7472601016077755] (9,-1; 9,-1), time: 30.0465s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_148, [-inf,inf]=>[-0.496748727463992,0.13287020586523643] (9,-1; 9,-1), time: 30.3134s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_127, [-inf,inf]=>[-0.11166640272542004,0.48780404866815624] (9,-1; 9,-1), time: 30.3613s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8162s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-0.30353030411752036,0.447902492730149] (9,-1; 9,-1), time: 30.1290s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_173, [-inf,inf]=>[-0.5300644807943898,0.14089601003910085] (9,-1; 9,-1), time: 30.2267s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.3774416034040432,0.29338422589275115] (9,-1; 9,-1), time: 30.0327s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7984s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9165s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9364s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9464s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-0.5723217855734807,0.04907634195442864] (9,-1; 9,-1), time: 30.0155s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-0.5410917834850705,0.18445032467112468] (9,-1; 9,-1), time: 30.0233s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_141, [-inf,inf]=>[-0.17418813032657599,0.3626270027004376] (9,-1; 9,-1), time: 30.0152s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8655s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8509s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-0.294495786675646,0.4644291203620877] (9,-1; 9,-1), time: 30.0384s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8823s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9116s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8589s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8071s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8165s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8071s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2174s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.8263s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,1.2345567668551705] (15,-1; 9,-1), time: 15.9551s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[1e-05,0.8391505736580245] (15,-1; 9,-1), time: 17.9568s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_104, [-inf,inf]=>[-0.5954326514879331,0.05027515968848763] (9,-1; 9,-1), time: 30.0207s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8799s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.5130651119610492,0.10518596685084215] (9,-1; 9,-1), time: 30.4992s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_123, [-inf,inf]=>[1e-05,0.9843660026311113] (15,-1; 9,-1), time: 15.8303s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_120, [-inf,inf]=>[-0.41744304275768435,0.1852420969637229] (9,-1; 9,-1), time: 30.0218s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.01557585655434588,0.8194434308981223] (9,-1; 9,-1), time: 30.0553s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7386s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_176, [-inf,inf]=>[-0.21289967302418675,0.4580296569014659] (9,-1; 9,-1), time: 30.0130s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_149, [-inf,inf]=>[1e-05,1.8225720448300131] (15,-1; 9,-1), time: 16.0036s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7843s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8870s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-0.33814384843724843,0.20879078024944403] (9,-1; 9,-1), time: 30.0849s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.4182065950127303] (15,-1; 9,-1), time: 15.6683s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_163, [-inf,inf]=>[-0.2612054540753501,0.29919573818720147] (9,-1; 9,-1), time: 30.0133s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7515s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-0.46417744647863385,0.19168843139411307] (9,-1; 9,-1), time: 30.0121s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_114, [-inf,inf]=>[-0.5979083933393704,0.26593368644037246] (9,-1; 9,-1), time: 30.1066s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.14489317696055581,0.6033314969004732] (9,-1; 9,-1), time: 30.3265s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8622s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7326s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7261s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_147, [-inf,inf]=>[1e-05,2.8579243234839473] (15,-1; 9,-1), time: 16.1216s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[1e-05,1.4845899142178656] (15,-1; 9,-1), time: 15.8545s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8160s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.2822895665878403,0.6355125609653498] (9,-1; 9,-1), time: 30.0159s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8756s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-0.04888467239603234,0.5643441037776724] (9,-1; 9,-1), time: 30.0723s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8441s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.234129047791421] (15,-1; 9,-1), time: 15.7836s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_177, [-inf,inf]=>[-0.48507244553314965,0.008620637434130905] (9,-1; 9,-1), time: 30.0129s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8826s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.46394209845412426,0.2798163472998888] (9,-1; 9,-1), time: 30.0490s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9054s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_136, [-inf,inf]=>[-1.303725679697777,0.21197418426011636] (9,-1; 9,-1), time: 30.0195s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_122, [-inf,inf]=>[-0.4878909346456139,0.09161867820788255] (9,-1; 9,-1), time: 30.0703s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7502s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-0.5937907862701736,0.07003376363141212] (9,-1; 9,-1), time: 30.0156s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8418s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8834s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8169s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-0.15437198019921905,0.6042694187718188] (9,-1; 9,-1), time: 30.1950s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9093s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[1e-05,4.077561604319867] (15,-1; 9,-1), time: 15.9014s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7884s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7373s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9673s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-0.232814533371081,0.40695317573574197] (9,-1; 9,-1), time: 30.0365s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_193, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8308s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8054s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.30769628478937916,0.38515280168366817] (9,-1; 9,-1), time: 30.0158s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0215s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[1e-05,1.5258767556485942] (15,-1; 9,-1), time: 15.7893s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8551s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_179, [-inf,inf]=>[1e-05,0.8891689171217708] (15,-1; 9,-1), time: 15.8584s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,4.277224639493359] (15,-1; 9,-1), time: 15.8078s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.41859699221100877,0.10320703659433567] (9,-1; 9,-1), time: 30.0115s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7968s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8552s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0331s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[1e-05,1.6667982810119417] (15,-1; 9,-1), time: 15.8521s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7817s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[1e-05,2.7259412874849125] (15,-1; 9,-1), time: 15.9689s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[1e-05,3.1360308469234046] (15,-1; 9,-1), time: 15.7683s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8394s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8556s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.5321850841202757,0.1999264646796759] (9,-1; 9,-1), time: 30.0113s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9779s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_143, [-inf,inf]=>[1e-05,1.3158747510717208] (15,-1; 9,-1), time: 15.9039s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8483s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7778s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.7567s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7934s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[1e-05,1.6399835573539274] (15,-1; 9,-1), time: 16.0743s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8231s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8383s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_126, [-inf,inf]=>[1e-05,0.7104390991853717] (15,-1; 9,-1), time: 17.4651s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7340s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-0.11744592987836543,0.6076900216704934] (9,-1; 9,-1), time: 30.4426s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1307s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_137, [-inf,inf]=>[-0.46266351050680066,0.35999991771907497] (9,-1; 9,-1), time: 30.0357s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1808s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_100, [-inf,inf]=>[-0.795295725869162,0.041126295446966915] (9,-1; 9,-1), time: 30.0135s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_140, [-inf,inf]=>[-0.4337374237910306,0.12779756100040954] (9,-1; 9,-1), time: 30.0451s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_181, [-inf,inf]=>[-0.5515686774777021,0.34559056884958333] (9,-1; 9,-1), time: 30.0691s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8540s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.9569s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_105, [-inf,inf]=>[-0.30205415097280736,0.35653397855601127] (9,-1; 9,-1), time: 30.2751s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8249s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_164, [-inf,inf]=>[1e-05,1.2710431165590417] (15,-1; 9,-1), time: 16.0463s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_112, [-inf,inf]=>[-0.2629470853152922,0.5733586870177043] (9,-1; 9,-1), time: 30.0143s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.4378312751655024,0.21180671133076587] (9,-1; 9,-1), time: 30.0368s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.7096947572484791,0.04108098622622591] (9,-1; 9,-1), time: 30.0565s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_155, [-inf,inf]=>[-0.5463309805746257,0.15708064753964673] (9,-1; 9,-1), time: 30.3219s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_102, [-inf,inf]=>[-0.3768374578980817,0.5325851552731053] (9,-1; 9,-1), time: 30.0354s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[1e-05,1.2885089291688747] (15,-1; 9,-1), time: 16.0597s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_131, [-inf,inf]=>[-0.2089166803425972,0.3558946620589573] (9,-1; 9,-1), time: 30.3629s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_196, [-inf,inf]=>[-0.19552947108309846,0.49335990753420145] (9,-1; 9,-1), time: 30.0227s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_185, [-inf,inf]=>[-0.8661050567560677,0.03859988264035523] (9,-1; 9,-1), time: 30.1175s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_138, [-inf,inf]=>[-0.42263273378174093,0.2792449646290912] (9,-1; 9,-1), time: 30.0123s, #vars: 2445, #constrs: 1890, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 4 has unstable to stable neurons: [(83, -1), (50, -1), (64, -1), (86, -1), (34, -1), (191, -1), (45, -1), (22, -1), (184, 1), (169, -1), (38, -1), (58, -1), (144, 1), (36, -1), (183, -1), (11, -1), (111, -1), (196, -1), (48, -1), (54, -1), (67, -1), (77, -1), (163, -1), (157, -1), (56, -1), (106, -1), (89, -1), (39, -1), (29, -1), (164, -1), (12, -1), (152, -1), (25, -1), (90, -1), (118, -1), (130, -1), (93, -1), (143, -1), (53, -1), (44, -1), (99, -1), (63, -1), (171, 1), (116, -1), (42, -1), (195, -1), (76, 1), (162, -1), (182, -1), (91, 1), (3, -1), (40, -1), (159, -1), (100, -1), (135, -1), (138, 1), (149, -1), (23, -1), (160, -1), (96, -1), (102, -1), (122, 1), (49, -1), (30, -1), (57, -1), (10, -1), (20, -1), (16, -1), (79, -1), (18, 1), (110, -1), (9, 1), (47, -1), (85, -1), (146, -1), (127, 1), (65, 1), (61, -1), (112, -1), (174, -1), (147, -1), (46, -1), (108, -1), (35, -1), (71, -1), (97, 1), (32, -1), (26, -1), (126, -1), (114, -1), (128, -1), (115, -1), (19, -1), (94, -1), (43, -1), (55, 1), (139, -1), (134, -1), (82, -1), (178, -1), (75, 1), (101, 1), (168, -1), (192, -1), (189, -1), (187, -1), (2, -1), (176, -1), (24, 1), (69, 1), (120, -1), (161, -1), (109, -1), (166, -1), (41, -1), (190, -1), (14, -1), (193, 1), (98, -1), (117, -1), (173, -1), (165, -1), (81, -1), (123, 1), (80, -1), (148, -1), (129, 1), (27, -1), (136, 1), (51, -1), (141, -1), (180, -1), (113, -1), (145, -1), (103, -1), (1, -1), (87, -1), (84, -1), (13, -1), (92, -1), (60, 1), (137, -1), (198, -1), (177, -1), (7, -1), (21, 1), (70, -1), (121, -1), (133, -1), (140, -1), (104, -1), (179, -1), (150, -1)]
best_l after optimization: 12.288251876831055 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 10.38004732131958
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.90240812,  2.63011408,  0.48274660,  3.42242074,  1.49499273,
          0.60110688,  2.26373029,  0.79972553, -0.30899334]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 1039.3494873046875, ub improved 1630.880126953125, time 173.6821
maximum relu layer improved by MIP so far 5
Linear(in_features=200, out_features=200, bias=True) 6 14 torch.Size([200])
sorted candidates ['lay14_174', 'lay14_197', 'lay14_7', 'lay14_40', 'lay14_11', 'lay14_126', 'lay14_82', 'lay14_129', 'lay14_106', 'lay14_69', 'lay14_21', 'lay14_16', 'lay14_145', 'lay14_0', 'lay14_134', 'lay14_136', 'lay14_41', 'lay14_167', 'lay14_74', 'lay14_146', 'lay14_47', 'lay14_153', 'lay14_58', 'lay14_193', 'lay14_10', 'lay14_39', 'lay14_184', 'lay14_149', 'lay14_23', 'lay14_70', 'lay14_36', 'lay14_97', 'lay14_61', 'lay14_154', 'lay14_125', 'lay14_118', 'lay14_12', 'lay14_178', 'lay14_114', 'lay14_87', 'lay14_8', 'lay14_163', 'lay14_64', 'lay14_148', 'lay14_102', 'lay14_92', 'lay14_179', 'lay14_34', 'lay14_30', 'lay14_144', 'lay14_113', 'lay14_173', 'lay14_107', 'lay14_150', 'lay14_177', 'lay14_66', 'lay14_181', 'lay14_140', 'lay14_59', 'lay14_56', 'lay14_186', 'lay14_195', 'lay14_170', 'lay14_135', 'lay14_111', 'lay14_26', 'lay14_183', 'lay14_165', 'lay14_89', 'lay14_88', 'lay14_141', 'lay14_121', 'lay14_48', 'lay14_161', 'lay14_128', 'lay14_90', 'lay14_123', 'lay14_6', 'lay14_160', 'lay14_43', 'lay14_81', 'lay14_57', 'lay14_55', 'lay14_157', 'lay14_51', 'lay14_31', 'lay14_77', 'lay14_49', 'lay14_32', 'lay14_127', 'lay14_124', 'lay14_190', 'lay14_27', 'lay14_65', 'lay14_71', 'lay14_14', 'lay14_29', 'lay14_94', 'lay14_4', 'lay14_63', 'lay14_76', 'lay14_25', 'lay14_158', 'lay14_130', 'lay14_52', 'lay14_103', 'lay14_139', 'lay14_104', 'lay14_194', 'lay14_162', 'lay14_166', 'lay14_156', 'lay14_93', 'lay14_147', 'lay14_142', 'lay14_168', 'lay14_98', 'lay14_37', 'lay14_172', 'lay14_95', 'lay14_110', 'lay14_73', 'lay14_151', 'lay14_180', 'lay14_75', 'lay14_99', 'lay14_83', 'lay14_185', 'lay14_143', 'lay14_68', 'lay14_122', 'lay14_155', 'lay14_188', 'lay14_22', 'lay14_28', 'lay14_72', 'lay14_78', 'lay14_38', 'lay14_115', 'lay14_33', 'lay14_24', 'lay14_13', 'lay14_84', 'lay14_19', 'lay14_159', 'lay14_85', 'lay14_117', 'lay14_196', 'lay14_86', 'lay14_79', 'lay14_15', 'lay14_3', 'lay14_54', 'lay14_101', 'lay14_164', 'lay14_45', 'lay14_17', 'lay14_62', 'lay14_109', 'lay14_50', 'lay14_152', 'lay14_176', 'lay14_1', 'lay14_80', 'lay14_67', 'lay14_120', 'lay14_35', 'lay14_53', 'lay14_108', 'lay14_96', 'lay14_198', 'lay14_138', 'lay14_20', 'lay14_169', 'lay14_119', 'lay14_105', 'lay14_175', 'lay14_9', 'lay14_46', 'lay14_132', 'lay14_199', 'lay14_137', 'lay14_5', 'lay14_42', 'lay14_18', 'lay14_131', 'lay14_44', 'lay14_60', 'lay14_187', 'lay14_2', 'lay14_91', 'lay14_171', 'lay14_191', 'lay14_133', 'lay14_192', 'lay14_189', 'lay14_182', 'lay14_112', 'lay14_100', 'lay14_116'] filter: 1.0
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0985s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1801s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2282s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3187s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3734s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3752s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3874s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4210s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4497s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4597s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4708s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5836s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1827s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5473s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3605s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3342s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3920s, #vars: 2769, #constrs: 2276, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 5 has unstable to stable neurons: [(61, -1), (58, -1), (13, -1), (183, -1), (145, -1), (86, -1), (111, -1), (1, -1), (41, -1), (118, -1), (34, -1), (98, -1), (174, -1), (117, -1), (175, -1), (142, -1), (96, -1), (90, -1), (160, -1), (74, -1), (103, 1), (35, -1), (115, -1), (139, -1), (47, -1), (95, 1), (30, 1), (107, -1), (97, -1), (71, -1), (125, -1), (93, -1), (4, -1), (23, -1), (146, -1), (21, -1), (165, -1), (154, -1), (171, -1), (151, -1), (172, -1), (119, -1), (116, -1), (130, -1), (55, -1), (57, -1), (132, -1), (182, 1), (9, -1), (170, -1), (113, -1), (194, -1), (83, 1), (186, -1), (56, -1), (36, -1), (190, -1), (75, -1), (188, -1), (50, -1), (19, 1), (52, 1), (169, -1), (17, -1), (180, -1), (54, -1), (42, -1), (72, -1), (106, -1), (89, -1), (123, 1), (108, -1), (3, -1), (161, -1), (94, -1), (62, -1), (134, -1), (149, 1), (66, 1), (124, -1), (79, -1), (88, -1), (147, 1), (133, -1), (14, 1), (53, -1), (40, 1), (168, -1), (85, -1), (80, 1), (121, -1), (78, 1), (76, -1), (179, 1), (20, -1), (81, 1), (18, -1), (101, -1), (198, -1), (51, 1), (5, 1), (67, 1), (156, -1), (26, -1), (153, -1), (16, -1), (159, -1), (110, -1), (195, -1), (162, -1), (143, 1), (193, -1), (10, -1), (0, -1), (43, 1), (191, -1), (126, 1), (6, -1), (70, -1), (87, -1), (92, -1), (192, -1), (33, -1), (135, -1), (167, -1), (7, -1), (166, -1), (157, -1), (158, -1), (189, -1), (164, 1), (73, -1), (48, -1), (178, -1), (144, -1), (37, 1), (99, -1), (29, -1)]

all verified at 0th iter
best_l after optimization: 22.3095760345459 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.061791181564331055
alpha-CROWN with intermediate bounds by MIP: tensor([[2.06505799, 3.74088430, 1.60448527, 4.73726988, 2.77030706, 1.67188048,
         3.12980270, 1.95687175, 0.63301659]], device='cuda:0') None
min of alpha-CROWN bounds 0.6330165863037109>=0, verified!
MIP finished with 591.1605687141418s
Run final alpha-CROWN after MIP solving on layer 13 and relu idx 6
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 22.3095760345459 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.05883145332336426
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.06505799, 3.74088430, 1.60448527, 4.73726988, 2.77030706, 1.67188048,
         3.12980270, 1.95687175, 0.63301659]], device='cuda:0') None
refined global lb: tensor([[2.06505799],
        [3.74088430],
        [1.60448527],
        [4.73726988],
        [2.77030706],
        [1.67188048],
        [3.12980270],
        [1.95687175],
        [0.63301659]], device='cuda:0') min: tensor(0.63301659, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 606.5998 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):606.5937642129621, max time: 606.5998301506042
mean time for verified SAFE instances(total 1): 606.5998301506042, max time: 606.5998301506042
safe-incomplete-refine (total 1), index: [0]
