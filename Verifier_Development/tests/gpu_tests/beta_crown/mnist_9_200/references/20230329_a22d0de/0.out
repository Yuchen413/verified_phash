Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_200
  path: mnist_9_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 24
  end: 25
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 1500
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 15:00:23 2023 on zeratul
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=200, bias=True)
  (12): ReLU()
  (13): Linear(in_features=200, out_features=200, bias=True)
  (14): ReLU()
  (15): Linear(in_features=200, out_features=200, bias=True)
  (16): ReLU()
  (17): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226457)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_200]_start=24_end=25_iter=20_b=1024_timeout=1500_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundParams(name=/9, inputs=[])
  (/10): BoundParams(name=/10, inputs=[])
  (/11): BoundParams(name=/11, inputs=[])
  (/12): BoundParams(name=/12, inputs=[])
  (/13): BoundParams(name=/13, inputs=[])
  (/14): BoundParams(name=/14, inputs=[])
  (/15): BoundParams(name=/15, inputs=[])
  (/16): BoundParams(name=/16, inputs=[])
  (/17): BoundParams(name=/17, inputs=[])
  (/18): BoundParams(name=/18, inputs=[])
  (/19): BoundShape(name=/19, inputs=[/0])
  (/20): BoundConstant(name=/20, inputs=[])
  (/21): BoundGather(name=/21, inputs=[/19, /20])
  (/22): BoundConstant(name=/22, inputs=[])
  (/23): BoundUnsqueeze(name=/23, inputs=[/21])
  (/24): BoundUnsqueeze(name=/24, inputs=[/22])
  (/25): BoundConcat(name=/25, inputs=[/23, /24])
  (/26): BoundReshape(name=/26, inputs=[/0, /25])
  (/input): BoundLinear(name=/input, inputs=[/26, /1, /2])
  (/28): BoundRelu(name=/28, inputs=[/input])
  (/input.3): BoundLinear(name=/input.3, inputs=[/28, /3, /4])
  (/30): BoundRelu(name=/30, inputs=[/input.3])
  (/input.7): BoundLinear(name=/input.7, inputs=[/30, /5, /6])
  (/32): BoundRelu(name=/32, inputs=[/input.7])
  (/input.11): BoundLinear(name=/input.11, inputs=[/32, /7, /8])
  (/34): BoundRelu(name=/34, inputs=[/input.11])
  (/input.15): BoundLinear(name=/input.15, inputs=[/34, /9, /10])
  (/36): BoundRelu(name=/36, inputs=[/input.15])
  (/input.19): BoundLinear(name=/input.19, inputs=[/36, /11, /12])
  (/38): BoundRelu(name=/38, inputs=[/input.19])
  (/input.23): BoundLinear(name=/input.23, inputs=[/38, /13, /14])
  (/40): BoundRelu(name=/40, inputs=[/input.23])
  (/input.27): BoundLinear(name=/input.27, inputs=[/40, /15, /16])
  (/42): BoundRelu(name=/42, inputs=[/input.27])
  (/43): BoundLinear(name=/43, inputs=[/42, /17, /18])
)
Model prediction is: tensor([[-0.92123216, -2.21978331,  0.80034167, -3.92385435,  7.73549032,
         -1.33190608,  0.63018936, -0.44093281, -0.48657060,  1.78281879]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ -960.60510254, -1598.82568359, -1900.80273438, -2114.29956055,
         -1818.29150391, -1546.59887695, -1461.50622559, -1890.52307129,
         -1596.00012207]], device='cuda:0') None
best_l after optimization: -10399.509765625
alpha/beta optimization time: 13.991617441177368
initial alpha-CROWN bounds: tensor([[ -696.59930420, -1083.29101562, -1338.28369141, -1458.10314941,
         -1290.01025391, -1100.27001953, -1004.36102295, -1309.33081055,
         -1119.26037598]], device='cuda:0')
Worst class: (+ rhs) -1458.1031494140625
Split layers:
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.92123216, -2.21978331,  0.80034167, -3.92385435,  7.73549032,
         -1.33190608,  0.63018936, -0.44093281, -0.48657060,  1.78281879]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.94489616, -1.92305958,  0.52202868, -3.27153730,  6.61248302,
          -1.08669925,  0.41012073, -0.33979654, -0.37520695,  1.86210704],
         [-0.94489616, -1.92305958,  0.52202868, -3.27153730,  6.61248302,
          -1.08669925,  0.41012073, -0.33979654, -0.37520695,  1.86210704]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[7.55737925, 8.53554249, 6.09045410, 9.88401985, 7.69918251,
          6.20236206, 6.95227957, 6.98768997, 4.75037575]]], device='cuda:0')
number of violation:  0
Attack finished in 0.8537 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2024-02-29
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 1200.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_51', 'lay4_55', 'lay4_142', 'lay4_45', 'lay4_194', 'lay4_143', 'lay4_69', 'lay4_99', 'lay4_13', 'lay4_44', 'lay4_175', 'lay4_129', 'lay4_145', 'lay4_151', 'lay4_15', 'lay4_162', 'lay4_12', 'lay4_140', 'lay4_6', 'lay4_53', 'lay4_173', 'lay4_61', 'lay4_59', 'lay4_76', 'lay4_67', 'lay4_43', 'lay4_180', 'lay4_195', 'lay4_101', 'lay4_115', 'lay4_41', 'lay4_187', 'lay4_120', 'lay4_181', 'lay4_11', 'lay4_164', 'lay4_104', 'lay4_93', 'lay4_33', 'lay4_169', 'lay4_176', 'lay4_26', 'lay4_128', 'lay4_7', 'lay4_198', 'lay4_36', 'lay4_196', 'lay4_138', 'lay4_56', 'lay4_30', 'lay4_17', 'lay4_58', 'lay4_178', 'lay4_38', 'lay4_147', 'lay4_137', 'lay4_32', 'lay4_77', 'lay4_103', 'lay4_199', 'lay4_52', 'lay4_8', 'lay4_48', 'lay4_114', 'lay4_80', 'lay4_88', 'lay4_112', 'lay4_111', 'lay4_106'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/Verifier_Development/complete_verifier/data_utils.py:257: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8941s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4752s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3446s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_44, [-inf,inf]=>[-0.49243865819592564,0.18402539161199566] (2,-1; 2,-1), time: 2.3907s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3803s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.2185060401063967,0.5315326627840491] (2,-1; 2,-1), time: 3.8905s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.8448073035599396,0.0476674736325989] (2,-1; 2,-1), time: 4.4400s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_175, [-inf,inf]=>[-0.328189649821843,0.42796078657390035] (2,-1; 2,-1), time: 4.9555s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-0.14452736052655557,0.5370048111818801] (2,-1; 2,-1), time: 4.9875s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8255s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5418s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5614s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.11646837101603026,0.4762184081099913] (2,-1; 2,-1), time: 6.2433s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9795s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-0.11783986452298346,0.39488435361178503] (2,-1; 2,-1), time: 6.5409s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_12, [-inf,inf]=>[-0.4834814566424165,0.12697484350673063] (2,-1; 2,-1), time: 6.1159s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5751s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[-inf,-0.012489901078092794] (-1,-1; 2,-1), time: 0.8824s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[1e-05,0.8810625309502388] (15,-1; 2,-1), time: 2.2299s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_151, [-inf,inf]=>[-0.5437798835682346,0.1445844565938128] (2,-1; 2,-1), time: 7.8415s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_15, [-inf,inf]=>[-0.30338434958668475,0.24319234816708238] (2,-1; 2,-1), time: 8.1265s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.1677678385301004,0.37486912381794685] (2,-1; 2,-1), time: 8.5829s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.5184537628282647,0.052709262484709335] (2,-1; 2,-1), time: 4.8122s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_140, [-inf,inf]=>[-0.5058078516053589,0.18054749796826644] (2,-1; 2,-1), time: 7.5282s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5108s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-0.3987043093742443,0.27631061741960805] (2,-1; 2,-1), time: 9.2435s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[-0.5469404506062456,0.006886114950533949] (2,-1; 2,-1), time: 7.0988s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9966s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4111s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_173, [-inf,inf]=>[-0.40055293606115294,0.24820171750733988] (2,-1; 2,-1), time: 6.2137s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4384s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4399s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0206s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.1434405945297188,0.4331727785245869] (2,-1; 2,-1), time: 4.9164s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5584s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_164, [-inf,inf]=>[-0.17766181063979214,0.4339702626094168] (2,-1; 2,-1), time: 3.5215s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_120, [-inf,inf]=>[-0.31293488128908564,0.3431180068346137] (2,-1; 2,-1), time: 4.2930s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_181, [-inf,inf]=>[-0.5945421982942533,0.07921653106360649] (2,-1; 2,-1), time: 4.7965s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8202s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.1917s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4398s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.0825671494249203] (15,-1; 2,-1), time: 1.7162s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_55, [-inf,inf]=>[-0.5156364196676491,0.07108212258390127] (2,-1; 2,-1), time: 13.0547s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-0.004173003981235253,0.5446849213258729] (2,-1; 2,-1), time: 13.7861s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2622s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.15910245609781767,0.4828235290723406] (2,-1; 2,-1), time: 7.2274s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.0790s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5740s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[1e-05,0.7454261552113874] (15,-1; 2,-1), time: 2.5476s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3622s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4132s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_195, [-inf,inf]=>[-0.26156684942251013,0.22508547283744781] (2,-1; 2,-1), time: 10.2841s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_17, [-inf,inf]=>[-0.027768632498874332,0.5048863820467397] (2,-1; 2,-1), time: 5.1876s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_114, [-inf,inf]=>[-inf,-4.933444711639756e-05] (-1,-1; 2,-1), time: 2.1927s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.500283325705759,0.08002608070241636] (2,-1; 2,-1), time: 7.0574s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5122s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.11830008936208439,0.5779612855427971] (2,-1; 2,-1), time: 6.0853s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_56, [-inf,inf]=>[-0.1666513614462175,0.45387743385429946] (2,-1; 2,-1), time: 6.9249s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-0.29111567274432637,0.3638115143180963] (2,-1; 2,-1), time: 3.6416s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_104, [-inf,inf]=>[-0.3532819133313713,0.1563650335182238] (2,-1; 2,-1), time: 10.1517s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-0.3356650280132676,0.26411325976618666] (2,-1; 2,-1), time: 6.6894s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_176, [-inf,inf]=>[-0.5418075923348067,0.08575058236764796] (2,-1; 2,-1), time: 9.7863s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_32, [-inf,inf]=>[-0.49668100031509343,0.03896570590897404] (2,-1; 2,-1), time: 6.4157s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-0.36907996269583637,0.14756779413418242] (2,-1; 2,-1), time: 6.3344s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.005055543037348942,0.46522348780987843] (2,-1; 2,-1), time: 5.2776s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.44176291978666776,0.3920275920255242] (2,-1; 2,-1), time: 5.5885s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.10309428957900296,0.49884930589770926] (2,-1; 2,-1), time: 4.8497s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_169, [-inf,inf]=>[-0.24228287187404926,0.3573803274481427] (2,-1; 2,-1), time: 11.4348s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_106, [-inf,inf]=>[-0.5564003582012192,0.03395666975956048] (2,-1; 2,-1), time: 4.6603s, #vars: 1289, #constrs: 556, improved: True
PGD done for relu layer 2
MIP improved 69 nodes out of 69 unstable nodes, lb improved 9.909479141235352, ub improved 12.975462913513184, time 23.5776
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_159', 'lay6_62', 'lay6_124', 'lay6_118', 'lay6_106', 'lay6_10', 'lay6_41', 'lay6_100', 'lay6_7', 'lay6_22', 'lay6_32', 'lay6_30', 'lay6_190', 'lay6_3', 'lay6_68', 'lay6_125', 'lay6_143', 'lay6_34', 'lay6_54', 'lay6_44', 'lay6_160', 'lay6_20', 'lay6_79', 'lay6_158', 'lay6_8', 'lay6_109', 'lay6_131', 'lay6_65', 'lay6_115', 'lay6_127', 'lay6_67', 'lay6_73', 'lay6_60', 'lay6_162', 'lay6_87', 'lay6_114', 'lay6_95', 'lay6_197', 'lay6_112', 'lay6_55', 'lay6_148', 'lay6_123', 'lay6_150', 'lay6_97', 'lay6_23', 'lay6_166', 'lay6_181', 'lay6_163', 'lay6_94', 'lay6_102', 'lay6_15', 'lay6_101', 'lay6_43', 'lay6_50', 'lay6_78', 'lay6_5', 'lay6_155', 'lay6_25', 'lay6_71', 'lay6_42', 'lay6_64', 'lay6_130', 'lay6_176', 'lay6_81', 'lay6_18', 'lay6_135', 'lay6_1', 'lay6_119', 'lay6_184', 'lay6_192', 'lay6_72', 'lay6_74', 'lay6_19', 'lay6_179', 'lay6_164', 'lay6_185', 'lay6_12', 'lay6_138', 'lay6_117', 'lay6_136', 'lay6_75', 'lay6_141', 'lay6_139', 'lay6_156', 'lay6_111', 'lay6_83', 'lay6_92', 'lay6_167', 'lay6_161', 'lay6_186', 'lay6_70', 'lay6_145', 'lay6_170', 'lay6_85', 'lay6_53', 'lay6_29', 'lay6_4', 'lay6_104', 'lay6_199', 'lay6_69', 'lay6_120', 'lay6_61', 'lay6_107', 'lay6_132', 'lay6_122', 'lay6_0', 'lay6_137', 'lay6_147', 'lay6_113', 'lay6_47', 'lay6_110', 'lay6_144'] filter: 1.0
Solving MIP for lay6_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6839s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5711s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3394s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4424s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5005s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5098s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5518s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8292s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3055s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4947s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6598s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3596s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3763s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5658s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3361s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.9213s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.6443s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7234s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.6432s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6546s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5891s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4998s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5905s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[1e-05,0.5993314544477563] (15,-1; 9,-1), time: 16.4868s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4925s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4152s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5770s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.42620734549072714,0.11728567950479929] (9,-1; 2,-1), time: 21.6953s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4810s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5655s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.44460217320959455,0.0232616359171528] (2,-1; 9,-1), time: 24.3250s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5009s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.3375622480381245,0.1266910149374216] (9,-1; 2,-1), time: 25.0997s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.29092192170418363,0.1363963838889765] (2,-1; 9,-1), time: 26.4577s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9266s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9363s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-0.38474359286713744,0.0634578833856886] (9,-1; 9,-1), time: 30.0164s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.07809085841323735,0.3629851761827455] (9,-1; 9,-1), time: 30.0164s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_100, [-inf,inf]=>[-0.4459635592233007,0.03846848144371277] (9,-1; 9,-1), time: 30.0228s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[-0.11930220835901498,0.3018555062271765] (9,-1; 9,-1), time: 30.0279s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.42681777901196544,0.04273306373758625] (9,-1; 9,-1), time: 30.0287s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5484s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6487s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_155, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0594s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1761s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6572s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-0.33291755478062685,0.2712020380061588] (9,-1; 9,-1), time: 30.0315s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.5675922544291926] (15,-1; 2,-1), time: 19.8778s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.7501s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_115, [-inf,inf]=>[-0.007792725828902477,0.46565746032159283] (9,-1; 2,-1), time: 28.8702s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7579s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7168s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2701s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6555s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_127, [-inf,inf]=>[-0.17313458979524077,0.3662084349300512] (9,-1; 9,-1), time: 30.1042s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4866s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6575s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5085s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6420s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4730s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.3810s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5264s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.6275591531391953,0.009740441970665658] (9,-1; 2,-1), time: 27.9704s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.5610118376410506,0.0036912386867169666] (9,-1; 2,-1), time: 25.1356s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[1e-05,0.9698213609457803] (15,-1; 2,-1), time: 12.6379s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-0.7210839345910676,0.02752250551093367] (9,-1; 2,-1), time: 27.4187s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.816636757342265,0.014545622972194253] (9,-1; 2,-1), time: 22.2124s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3353s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[1e-05,1.031314453421508] (15,-1; 9,-1), time: 16.0760s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8528s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5953s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_179, [-inf,inf]=>[1e-05,0.8200025870588821] (15,-1; 9,-1), time: 15.5236s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8108s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[1e-05,1.890227024668396] (15,-1; 2,-1), time: 5.9093s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6883s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.2665097974578944,0.24116775166567303] (9,-1; 9,-1), time: 30.0148s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-0.4175037865426658,0.056890262432619215] (9,-1; 2,-1), time: 27.1455s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[1e-05,0.6282992439512533] (15,-1; 9,-1), time: 16.3909s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5058s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-0.2614742480242348,0.14378331756333684] (9,-1; 9,-1), time: 30.0387s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6575s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-0.2186254739683864,0.3756541689197682] (9,-1; 9,-1), time: 30.0139s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.4276934809562298,0.07515781323762885] (9,-1; 9,-1), time: 30.0152s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_130, [-inf,inf]=>[-0.3622586903624877,0.17868447665318413] (9,-1; 9,-1), time: 30.0138s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.26866046819263,0.30883527060680316] (2,-1; 2,-1), time: 23.6329s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5179564389157499,0.23895261608178053] (9,-1; 9,-1), time: 30.0164s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_185, [-inf,inf]=>[-0.145616945259751,0.44461413968445523] (9,-1; 9,-1), time: 30.0171s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9589s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7096s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[1e-05,0.9285697553987003] (15,-1; 2,-1), time: 9.3218s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_156, [-inf,inf]=>[-0.22091026138722814,0.21690579413070202] (9,-1; 2,-1), time: 24.6476s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_145, [-inf,inf]=>[1e-05,0.9113364451794721] (15,-1; 9,-1), time: 16.5467s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[-0.14958916841182235,0.36035678577310093] (9,-1; 2,-1), time: 26.4228s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5126s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.5318s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-0.4531599156168348,0.07671467346415706] (9,-1; 9,-1), time: 30.0272s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[1e-05,0.9994971158480894] (15,-1; 9,-1), time: 15.6509s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_199, [-inf,inf]=>[1e-05,0.5947083255067751] (15,-1; 9,-1), time: 16.1695s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[1e-05,1.0099599071184604] (15,-1; 2,-1), time: 8.9327s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.5985623284836903,0.45092783667466685] (2,-1; 9,-1), time: 19.3369s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[1e-05,0.8446725840279447] (15,-1; 9,-1), time: 15.6626s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.2954681344058467,0.3013606608633142] (9,-1; 9,-1), time: 30.0252s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.5657849319754357,0.22819344494764982] (9,-1; 2,-1), time: 23.6794s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.3669896131889833,0.1103204065350696] (9,-1; 9,-1), time: 30.0126s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[-0.3573720992140525,0.16341608630258514] (9,-1; 9,-1), time: 30.0143s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[1e-05,0.9137408396688772] (15,-1; 9,-1), time: 15.7819s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-0.15223859559044148,0.21830445591833145] (9,-1; 9,-1), time: 30.0123s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[1e-05,1.271248798405704] (15,-1; 2,-1), time: 11.2281s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.2149505658972501] (15,-1; 2,-1), time: 11.4900s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_104, [-inf,inf]=>[-0.2754602506528094,0.21573074302281003] (9,-1; 9,-1), time: 30.2990s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_47, [-inf,inf]=>[1e-05,1.166243045778242] (15,-1; 9,-1), time: 15.4000s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_147, [-inf,inf]=>[-0.1532983117348593,0.36067369126398313] (9,-1; 9,-1), time: 30.0111s, #vars: 1567, #constrs: 873, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(51, -1), (194, -1), (143, -1), (53, -1), (59, -1), (76, -1), (67, 1), (43, -1), (180, -1), (101, -1), (41, -1), (11, -1), (93, -1), (33, -1), (26, -1), (128, -1), (198, -1), (36, -1), (196, -1), (138, -1), (30, 1), (58, -1), (38, 1), (137, -1), (77, -1), (199, -1), (114, -1), (80, -1), (88, -1), (111, -1)]
best_l after optimization: -1924.97216796875
beta sum per layer: []
alpha/beta optimization time: 16.378401517868042
alpha-CROWN with intermediate bounds by MIP: tensor([[-129.18309021, -200.31538391, -247.47105408, -269.47732544,
         -239.13262939, -203.43276978, -185.63676453, -242.77761841,
         -207.54568481]], device='cuda:0') None
MIP improved 112 nodes out of 112 unstable nodes, lb improved 21.74101448059082, ub improved 34.52243423461914, time 104.3767
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_140', 'lay8_60', 'lay8_25', 'lay8_42', 'lay8_54', 'lay8_21', 'lay8_15', 'lay8_14', 'lay8_85', 'lay8_86', 'lay8_118', 'lay8_35', 'lay8_113', 'lay8_63', 'lay8_149', 'lay8_142', 'lay8_122', 'lay8_23', 'lay8_76', 'lay8_112', 'lay8_102', 'lay8_156', 'lay8_158', 'lay8_170', 'lay8_104', 'lay8_187', 'lay8_27', 'lay8_144', 'lay8_110', 'lay8_151', 'lay8_100', 'lay8_178', 'lay8_61', 'lay8_24', 'lay8_121', 'lay8_37', 'lay8_34', 'lay8_105', 'lay8_185', 'lay8_115', 'lay8_94', 'lay8_164', 'lay8_89', 'lay8_137', 'lay8_169', 'lay8_13', 'lay8_10', 'lay8_73', 'lay8_166', 'lay8_50', 'lay8_29', 'lay8_68', 'lay8_190', 'lay8_189', 'lay8_120', 'lay8_53', 'lay8_161', 'lay8_154', 'lay8_45', 'lay8_71', 'lay8_146', 'lay8_163', 'lay8_172', 'lay8_91', 'lay8_150', 'lay8_56', 'lay8_59', 'lay8_48', 'lay8_128', 'lay8_88', 'lay8_19', 'lay8_47', 'lay8_135', 'lay8_174', 'lay8_106', 'lay8_84', 'lay8_39', 'lay8_40', 'lay8_125', 'lay8_195', 'lay8_95', 'lay8_155', 'lay8_33', 'lay8_171', 'lay8_129', 'lay8_83', 'lay8_188', 'lay8_62', 'lay8_103', 'lay8_148', 'lay8_96', 'lay8_75', 'lay8_153', 'lay8_167', 'lay8_17', 'lay8_147', 'lay8_132', 'lay8_184', 'lay8_93', 'lay8_107', 'lay8_152', 'lay8_134', 'lay8_4', 'lay8_6', 'lay8_36', 'lay8_198', 'lay8_191', 'lay8_182', 'lay8_199', 'lay8_183', 'lay8_168', 'lay8_116', 'lay8_126', 'lay8_44', 'lay8_108', 'lay8_90', 'lay8_196', 'lay8_173', 'lay8_58', 'lay8_31', 'lay8_80', 'lay8_79', 'lay8_11', 'lay8_194', 'lay8_162', 'lay8_51', 'lay8_52', 'lay8_43', 'lay8_141', 'lay8_16', 'lay8_32', 'lay8_41', 'lay8_20', 'lay8_81', 'lay8_64', 'lay8_7', 'lay8_2', 'lay8_57', 'lay8_130', 'lay8_117', 'lay8_70', 'lay8_99', 'lay8_12', 'lay8_111', 'lay8_157', 'lay8_49', 'lay8_101', 'lay8_8', 'lay8_82', 'lay8_46', 'lay8_69', 'lay8_165', 'lay8_18', 'lay8_1', 'lay8_177', 'lay8_143', 'lay8_127', 'lay8_65', 'lay8_179', 'lay8_78', 'lay8_3', 'lay8_180', 'lay8_74', 'lay8_97', 'lay8_145', 'lay8_197', 'lay8_30', 'lay8_139', 'lay8_0', 'lay8_181', 'lay8_92', 'lay8_131', 'lay8_159', 'lay8_133', 'lay8_9', 'lay8_28', 'lay8_5', 'lay8_123', 'lay8_193', 'lay8_109', 'lay8_55', 'lay8_72'] filter: 1.0
Solving MIP for lay8_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6400s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6653s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7071s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7969s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8946s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6559s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7290s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8038s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8468s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8706s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4158s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8084s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8373s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6879s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.0953s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6746s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6640s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.7473s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.8760s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6886s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7007s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6478s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8144s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6972s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[1e-05,1.3178673508306558] (15,-1; 9,-1), time: 15.6479s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.258279312683229,0.13251813534241239] (9,-1; 9,-1), time: 30.0203s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-0.7416976491974687,0.06477752634321206] (9,-1; 9,-1), time: 30.0250s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[-0.005569960316394845,0.625515974361237] (9,-1; 9,-1), time: 30.0153s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-0.2880103749908026,0.28771023820003416] (9,-1; 9,-1), time: 30.0250s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-0.25334299247628805,0.23585846304811395] (9,-1; 9,-1), time: 30.0184s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-0.6310314882357473,0.028636004074289713] (9,-1; 9,-1), time: 30.0620s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6204s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.431253597369956,0.1862199096691165] (9,-1; 9,-1), time: 30.0186s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7169s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7233s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6905s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-0.03389419934521301,0.532958431811517] (9,-1; 9,-1), time: 30.0223s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[1e-05,0.4952774599613142] (15,-1; 9,-1), time: 19.4308s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5860s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5873s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.035997853412681934,0.5238184177555258] (9,-1; 9,-1), time: 30.0351s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[1e-05,0.8603799787015468] (15,-1; 9,-1), time: 15.7109s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.4302449412741334,0.09518201673523054] (9,-1; 9,-1), time: 30.0180s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.3025077561556933,0.23929233193069654] (9,-1; 9,-1), time: 30.0264s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7262s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6914s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[-0.5257980819783951,0.0034105159701786165] (9,-1; 9,-1), time: 30.0344s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6104s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5077s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.19949066789200792,0.30298349609432196] (9,-1; 9,-1), time: 30.0204s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6618s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.17596441642959093,0.29359456551841734] (9,-1; 9,-1), time: 30.0495s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.41541887209467504,0.26727593011585] (9,-1; 9,-1), time: 30.0146s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-0.545580251420741,0.08225304349852727] (9,-1; 9,-1), time: 30.0393s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.17971326275792127,0.24291518519252261] (9,-1; 9,-1), time: 30.0148s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.18326554368081036,0.27948201904144315] (9,-1; 9,-1), time: 30.0108s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.5759950102741226,0.09814743538980557] (9,-1; 9,-1), time: 30.0219s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[1e-05,0.7354446028685276] (15,-1; 9,-1), time: 29.8753s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7589s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[-0.1793024777976311,0.31240405328309284] (9,-1; 9,-1), time: 30.0208s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-0.3366192314117468,0.08336751677433532] (9,-1; 9,-1), time: 30.0282s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.006762684857364959,0.5373348645331604] (9,-1; 9,-1), time: 30.0163s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6331s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6802s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7313s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[-0.4894220810500936,0.029559534750662333] (9,-1; 9,-1), time: 30.0112s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7390s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6051s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6832s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7203s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-0.4240351442706492,0.09755414947183376] (9,-1; 9,-1), time: 30.0698s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-0.24296814309909226,0.28596004758813265] (9,-1; 9,-1), time: 30.0171s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4712s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6203s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[1e-05,0.7103671257805471] (15,-1; 9,-1), time: 15.7460s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7035s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5979s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7473s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5983s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6571s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6246s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[1e-05,0.39839403107352145] (15,-1; 9,-1), time: 29.5501s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6283s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5878s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6730s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5777s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6000s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9547s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6155s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.4609754969582528,0.08894150851451027] (9,-1; 9,-1), time: 30.0570s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6215s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6154s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.0442109198594504,0.3447351246418994] (9,-1; 9,-1), time: 30.0203s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[1e-05,1.402437393699844] (15,-1; 9,-1), time: 15.9019s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[1e-05,1.9482935131241217] (15,-1; 9,-1), time: 15.7925s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[1e-05,0.9736320211118668] (15,-1; 9,-1), time: 15.7486s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5957s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6941s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,0.6759972494726975] (15,-1; 9,-1), time: 15.5917s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-0.09434102516998194,0.41681862732730823] (9,-1; 9,-1), time: 30.0170s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.1906522109282687,0.21808369457099255] (9,-1; 9,-1), time: 30.0131s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.4060181620629073,0.07236348854937531] (9,-1; 9,-1), time: 30.0168s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.37711461229557447,0.11823500690140842] (9,-1; 9,-1), time: 30.0225s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6365s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.2673220920103162,0.5845020648746966] (9,-1; 9,-1), time: 30.0301s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-0.3504134930206246,0.1547557857504043] (9,-1; 9,-1), time: 30.0145s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.20183401489597644,0.23543019432845408] (9,-1; 9,-1), time: 30.0101s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7168s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4929s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.3747493757145957] (15,-1; 9,-1), time: 15.6431s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[1e-05,0.6889981984794712] (15,-1; 9,-1), time: 15.7343s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7039s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-0.31476331744464037,0.3985925195756003] (9,-1; 9,-1), time: 30.0145s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6112s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6320s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6557s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-0.28257389548572476,0.2376893667486745] (9,-1; 9,-1), time: 30.0145s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7334s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7212s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6353s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6741s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7745s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7254s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-0.46834914645343273,0.03370270079298107] (9,-1; 9,-1), time: 30.0137s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-0.13212191507545704,0.28008486095439905] (9,-1; 9,-1), time: 30.0153s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.4923936294946737,0.0536936896840433] (9,-1; 9,-1), time: 30.0331s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6838s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6163s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.5907s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[1e-05,2.5424858603099443] (15,-1; 9,-1), time: 15.6080s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.2356442699458428,0.20774134186339663] (9,-1; 9,-1), time: 30.0890s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-0.4122403832281682,0.0948162647217583] (9,-1; 9,-1), time: 30.0185s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[1e-05,1.2668355997645966] (15,-1; 9,-1), time: 15.6220s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[1e-05,1.4176276016935079] (15,-1; 9,-1), time: 15.7228s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5609s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5693s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.48394728667614434,0.11912948972761167] (9,-1; 9,-1), time: 30.0175s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.5098664350166418,0.1884693699368624] (9,-1; 9,-1), time: 30.0124s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[1e-05,1.0210895036573708] (15,-1; 9,-1), time: 15.6546s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-0.10929178893932959,0.3525106997231158] (9,-1; 9,-1), time: 30.0146s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6460s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.4358514899722115,0.045674814110755406] (9,-1; 9,-1), time: 30.0146s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-0.4764663609198876,0.16578861849744503] (9,-1; 9,-1), time: 30.0122s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-0.3055365494283411,0.17777839336285287] (9,-1; 9,-1), time: 30.0177s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,1.635302291394691] (15,-1; 9,-1), time: 15.6086s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.05859926075204339,0.6851903057392618] (9,-1; 9,-1), time: 30.0295s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-0.34444290268015665,0.1973824364175505] (9,-1; 9,-1), time: 30.0257s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5040s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5819s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5493s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.4655975861614087,0.01593264952753956] (9,-1; 9,-1), time: 30.0202s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-0.3289396181775025,0.1529873179207991] (9,-1; 9,-1), time: 30.0237s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.5921s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[1e-05,1.2579896010739975] (15,-1; 9,-1), time: 15.7761s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[1e-05,0.8222015356561604] (15,-1; 9,-1), time: 15.6411s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[1e-05,0.6112405986867416] (15,-1; 9,-1), time: 15.7115s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6511s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[1e-05,1.3348326729205946] (15,-1; 9,-1), time: 15.7550s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[1e-05,1.4130431369409193] (15,-1; 9,-1), time: 15.6519s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6102s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6476s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.0275217189591233] (15,-1; 9,-1), time: 15.5641s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-0.45843547526731643,0.15278774931653571] (9,-1; 9,-1), time: 30.0128s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.19814050434210018,0.2533560407154925] (9,-1; 9,-1), time: 30.0159s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-0.01972510234710759,0.4084012248611737] (9,-1; 9,-1), time: 30.0324s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5871s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6648s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5969s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[-0.0033988117209432754,0.5859621442394739] (9,-1; 9,-1), time: 30.1116s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[1e-05,0.9029238094281726] (15,-1; 9,-1), time: 15.7075s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[1e-05,1.3003434999083532] (15,-1; 9,-1), time: 15.6248s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,1.8823632958288448] (15,-1; 9,-1), time: 15.7257s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[1e-05,0.8991657413586102] (15,-1; 9,-1), time: 15.5457s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[-2.1914707424688755e-05,0.529140691392435] (9,-1; 9,-1), time: 30.0309s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-0.45114383497991195,0.026791301189322873] (9,-1; 9,-1), time: 30.0167s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,2.1192559191391753] (15,-1; 9,-1), time: 15.6328s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-0.3570171088079106,0.09495499739355442] (9,-1; 9,-1), time: 30.0139s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,1.9281353852870313] (15,-1; 9,-1), time: 15.4276s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,1.1236557188214897] (15,-1; 9,-1), time: 15.6124s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-0.46677088647656945,0.0886425251567884] (9,-1; 9,-1), time: 30.0554s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.06169633916920995,0.4180733956367768] (9,-1; 9,-1), time: 30.0230s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.3607839825022008,0.03337415825149057] (9,-1; 9,-1), time: 30.0185s, #vars: 1839, #constrs: 1181, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(159, -1), (62, -1), (118, -1), (22, -1), (32, -1), (190, -1), (3, -1), (125, -1), (143, -1), (34, -1), (54, -1), (20, 1), (79, -1), (158, -1), (8, -1), (109, -1), (131, -1), (65, -1), (67, -1), (73, 1), (60, -1), (162, -1), (114, -1), (95, -1), (197, -1), (112, -1), (55, -1), (148, -1), (97, -1), (23, -1), (166, -1), (181, -1), (163, -1), (15, -1), (43, -1), (50, -1), (5, -1), (155, -1), (25, -1), (64, -1), (176, -1), (81, -1), (18, -1), (135, -1), (1, 1), (119, -1), (184, -1), (72, 1), (74, -1), (19, -1), (179, 1), (164, -1), (12, -1), (117, 1), (136, -1), (75, -1), (139, 1), (83, -1), (92, -1), (161, -1), (145, 1), (85, -1), (29, -1), (199, 1), (69, 1), (120, 1), (61, 1), (107, -1), (132, -1), (122, 1), (0, 1), (137, -1), (113, -1), (47, 1), (110, 1), (144, 1)]
best_l after optimization: -274.34716796875
beta sum per layer: []
alpha/beta optimization time: 15.84520936012268
alpha-CROWN with intermediate bounds by MIP: tensor([[-19.69355965, -28.58338547, -34.98865509, -37.17353439, -34.02767181,
         -29.49082375, -25.87388229, -34.69303131, -29.82265472]],
       device='cuda:0') None
MIP improved 182 nodes out of 182 unstable nodes, lb improved 75.66407012939453, ub improved 109.20266723632812, time 170.8265
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_83', 'lay10_31', 'lay10_50', 'lay10_64', 'lay10_86', 'lay10_34', 'lay10_191', 'lay10_45', 'lay10_22', 'lay10_184', 'lay10_72', 'lay10_169', 'lay10_38', 'lay10_58', 'lay10_144', 'lay10_36', 'lay10_183', 'lay10_11', 'lay10_111', 'lay10_196', 'lay10_48', 'lay10_54', 'lay10_67', 'lay10_77', 'lay10_163', 'lay10_157', 'lay10_56', 'lay10_106', 'lay10_156', 'lay10_199', 'lay10_15', 'lay10_89', 'lay10_39', 'lay10_29', 'lay10_164', 'lay10_12', 'lay10_152', 'lay10_66', 'lay10_25', 'lay10_142', 'lay10_90', 'lay10_194', 'lay10_118', 'lay10_130', 'lay10_93', 'lay10_124', 'lay10_197', 'lay10_143', 'lay10_53', 'lay10_99', 'lay10_44', 'lay10_63', 'lay10_73', 'lay10_171', 'lay10_116', 'lay10_167', 'lay10_42', 'lay10_132', 'lay10_131', 'lay10_195', 'lay10_76', 'lay10_162', 'lay10_182', 'lay10_91', 'lay10_3', 'lay10_5', 'lay10_159', 'lay10_40', 'lay10_100', 'lay10_135', 'lay10_185', 'lay10_138', 'lay10_149', 'lay10_6', 'lay10_23', 'lay10_96', 'lay10_160', 'lay10_102', 'lay10_52', 'lay10_122', 'lay10_49', 'lay10_30', 'lay10_125', 'lay10_57', 'lay10_10', 'lay10_20', 'lay10_16', 'lay10_88', 'lay10_79', 'lay10_155', 'lay10_28', 'lay10_47', 'lay10_18', 'lay10_110', 'lay10_9', 'lay10_146', 'lay10_127', 'lay10_85', 'lay10_74', 'lay10_65', 'lay10_8', 'lay10_61', 'lay10_112', 'lay10_95', 'lay10_174', 'lay10_147', 'lay10_46', 'lay10_108', 'lay10_35', 'lay10_71', 'lay10_97', 'lay10_32', 'lay10_26', 'lay10_126', 'lay10_114', 'lay10_115', 'lay10_128', 'lay10_19', 'lay10_94', 'lay10_78', 'lay10_43', 'lay10_55', 'lay10_139', 'lay10_134', 'lay10_82', 'lay10_158', 'lay10_178', 'lay10_101', 'lay10_75', 'lay10_168', 'lay10_192', 'lay10_189', 'lay10_4', 'lay10_187', 'lay10_69', 'lay10_2', 'lay10_176', 'lay10_24', 'lay10_37', 'lay10_120', 'lay10_161', 'lay10_181', 'lay10_175', 'lay10_186', 'lay10_109', 'lay10_166', 'lay10_41', 'lay10_190', 'lay10_14', 'lay10_193', 'lay10_98', 'lay10_117', 'lay10_173', 'lay10_165', 'lay10_17', 'lay10_81', 'lay10_151', 'lay10_123', 'lay10_80', 'lay10_148', 'lay10_27', 'lay10_129', 'lay10_170', 'lay10_105', 'lay10_136', 'lay10_68', 'lay10_119', 'lay10_51', 'lay10_154', 'lay10_141', 'lay10_180', 'lay10_62', 'lay10_0', 'lay10_113', 'lay10_145', 'lay10_59', 'lay10_103', 'lay10_172', 'lay10_153', 'lay10_1', 'lay10_87', 'lay10_107', 'lay10_84', 'lay10_33', 'lay10_13', 'lay10_92', 'lay10_7', 'lay10_60', 'lay10_137', 'lay10_198', 'lay10_177', 'lay10_21', 'lay10_188', 'lay10_70', 'lay10_121', 'lay10_133', 'lay10_140', 'lay10_104', 'lay10_179', 'lay10_150'] filter: 1.0
Solving MIP for lay10_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0278s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0310s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0934s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1608s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2058s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2518s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2878s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3008s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4223s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0110s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0036s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9994s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1050s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3931s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0968s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1255s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6700s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2390s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0165s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9713s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2261s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0259s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1602s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6332s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9306s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.1579s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9605s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1619s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1190s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0692s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0969s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1371s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9297s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0186s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0049s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0614s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9834s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1016s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[1e-05,2.9319514392502466] (15,-1; 9,-1), time: 16.1153s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.7627s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9720s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9166s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[1e-05,0.7949485839503987] (15,-1; 9,-1), time: 18.3306s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-0.17478543849623063,0.5116562146450947] (9,-1; 9,-1), time: 30.0274s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.16531033478355361,0.8555663739330961] (9,-1; 9,-1), time: 30.1159s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[-0.010343263419275772,0.667604323154662] (9,-1; 9,-1), time: 30.1256s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9621s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-0.6833107569117698,0.028836570494589805] (9,-1; 9,-1), time: 30.0333s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0783s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9093s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-0.6849172861923531,0.13746747292212974] (9,-1; 9,-1), time: 30.0321s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-0.3542435156982106,0.274875938458112] (9,-1; 9,-1), time: 30.0840s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.5112183575993937,0.12013521744109651] (9,-1; 9,-1), time: 30.1888s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0503s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0653s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0215s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-0.040515291985582846,0.5493258096908494] (9,-1; 9,-1), time: 30.0503s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.570299808465343,0.15475523454222995] (9,-1; 9,-1), time: 30.0954s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-0.30751200337825324,0.37128301138292935] (9,-1; 9,-1), time: 30.0285s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9398s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9958s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.6969s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0289s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-0.12010770916251345,0.6051791762532457] (9,-1; 9,-1), time: 30.1503s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0143s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.43521207841372606,0.2524219884852438] (9,-1; 9,-1), time: 30.1729s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0291s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1258s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0596s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9324s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0003s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0111s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9045s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.48874654933032013,0.2547819685983205] (9,-1; 9,-1), time: 30.0255s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1284s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0372s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0147s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.8062092577924715] (15,-1; 9,-1), time: 15.9236s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.26732114450415206,0.251536786931682] (9,-1; 9,-1), time: 30.0385s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[1e-05,1.3406153411149997] (15,-1; 9,-1), time: 16.0072s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0466s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-0.2762243801746125,0.4744011379695188] (9,-1; 9,-1), time: 30.0385s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0093s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[1e-05,1.0727200896522642] (15,-1; 9,-1), time: 16.0061s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4855s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[1e-05,0.7017825033483795] (15,-1; 9,-1), time: 21.0733s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9323s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-0.5306792616817814,0.16557894913089777] (9,-1; 9,-1), time: 30.0608s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9329s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0020s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9257s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0334s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-0.5984083705436358,0.23403560216332356] (9,-1; 9,-1), time: 30.0113s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9455s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.8571691817122202] (15,-1; 9,-1), time: 15.9790s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0150s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[1e-05,1.525510565731093] (15,-1; 9,-1), time: 16.0493s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-0.16268995403044917,0.7840754360101452] (9,-1; 9,-1), time: 30.0815s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9960s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.6115038456174314,0.06853245870295645] (9,-1; 9,-1), time: 30.0826s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0377s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4476s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0413s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0694s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9607s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.22311930954020506,0.645778529420104] (9,-1; 9,-1), time: 30.0174s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1248s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9586s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[1e-05,1.8021882786305505] (15,-1; 9,-1), time: 16.0591s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1380s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.5709932871588665,0.3481152802272331] (9,-1; 9,-1), time: 30.0789s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9705s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9752s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0611s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9979s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.23535549926273042,0.5441401796687149] (9,-1; 9,-1), time: 30.0790s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9041s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9874s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[-0.17903485208472422,0.4762330009660156] (9,-1; 9,-1), time: 30.0168s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.2196983903517231,0.3650538519130823] (9,-1; 9,-1), time: 30.0158s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1445s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0315s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9451s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9206s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.014679570844683132,0.6484246553503721] (9,-1; 9,-1), time: 30.0943s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9696s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7293s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.2507514536472788,0.29301119401988135] (9,-1; 9,-1), time: 30.0145s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.9640s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[1e-05,2.6099221964014006] (15,-1; 9,-1), time: 16.0674s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0558s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0759s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0680s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.2064515896470553] (15,-1; 9,-1), time: 15.9785s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9583s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[1e-05,0.8567843272016561] (15,-1; 9,-1), time: 15.9739s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.7995877631375174] (15,-1; 9,-1), time: 15.9582s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-0.7515498177631541,0.07121442516802137] (9,-1; 9,-1), time: 30.0271s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9903s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9725s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9633s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,2.5713205353357056] (15,-1; 9,-1), time: 15.8980s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9099s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7117s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[1e-05,0.9440094618608365] (15,-1; 9,-1), time: 15.9869s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0690s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.2733s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9716s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9056s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.10967573960289972,0.45612526399325654] (9,-1; 9,-1), time: 30.0144s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-0.3957538423761274,0.28350480900572606] (9,-1; 9,-1), time: 30.0517s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-0.47831395603193716,0.2858431776386522] (9,-1; 9,-1), time: 30.0936s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9597s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[1e-05,1.7738581611836144] (15,-1; 9,-1), time: 15.9090s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-0.765967798476121,0.18823590944452806] (9,-1; 9,-1), time: 30.0530s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9321s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9913s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-0.1233464100961629,0.4709894741636779] (9,-1; 9,-1), time: 30.2213s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[1e-05,5.060272461311838] (15,-1; 9,-1), time: 16.1948s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0079s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-0.7441613930013853,0.016543879765198374] (9,-1; 9,-1), time: 30.0170s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0926s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[1e-05,1.3371161220107244] (15,-1; 9,-1), time: 16.0941s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9710s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[1e-05,1.487559778002189] (15,-1; 9,-1), time: 15.9702s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.4387352651925139,0.161332947004233] (9,-1; 9,-1), time: 30.0737s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8789s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0680s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9927s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9166s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9353s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9731s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.11760419405813254,0.650925949457356] (9,-1; 9,-1), time: 30.0253s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9656s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9196s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0214s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.4117415533517914,0.24530362649646986] (9,-1; 9,-1), time: 30.0286s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-0.519320378533112,0.03878642448913925] (9,-1; 9,-1), time: 30.0549s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9664s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.49902947190890123,0.2330010470833948] (9,-1; 9,-1), time: 30.0453s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-0.11925482125843588,0.49987310819811803] (9,-1; 9,-1), time: 30.0566s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9050s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1179s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.2899884329970105,0.34698177194203955] (9,-1; 9,-1), time: 30.0217s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9654s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9989s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.1378s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[1e-05,1.3032805656826911] (15,-1; 9,-1), time: 15.9406s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[-0.26994059161134515,0.3212435428278482] (9,-1; 9,-1), time: 30.0228s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-0.5700844800734473,0.18952787400677185] (9,-1; 9,-1), time: 30.0686s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-0.46566066256434774,0.11275423568715051] (9,-1; 9,-1), time: 30.0665s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.6543115867820956,0.09511517167030624] (9,-1; 9,-1), time: 30.0347s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[1e-05,0.8924577450709319] (15,-1; 9,-1), time: 18.4625s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.25011024758353356,0.4114870520696578] (9,-1; 9,-1), time: 30.0689s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-0.6004672514860245,0.05985452597608417] (9,-1; 9,-1), time: 30.0705s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-0.4548379014281554,0.14888380313838429] (9,-1; 9,-1), time: 30.1314s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-0.5728873861960468,0.1467396937498197] (9,-1; 9,-1), time: 30.0167s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-0.5428634886278663,0.08515598775622131] (9,-1; 9,-1), time: 30.0187s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-0.8549049428723479,0.15012789412652705] (9,-1; 9,-1), time: 30.0238s, #vars: 2161, #constrs: 1564, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-0.7556072781601904,0.0047792476096111414] (9,-1; 9,-1), time: 30.0212s, #vars: 2161, #constrs: 1564, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(60, -1), (25, -1), (42, -1), (21, -1), (15, -1), (14, -1), (85, -1), (86, -1), (35, -1), (63, -1), (122, -1), (76, -1), (112, -1), (156, 1), (158, -1), (104, -1), (27, -1), (110, -1), (100, -1), (178, -1), (24, 1), (121, -1), (37, -1), (34, -1), (105, -1), (185, -1), (115, 1), (164, -1), (137, -1), (13, -1), (10, -1), (73, -1), (68, -1), (190, 1), (71, -1), (146, -1), (163, 1), (172, -1), (91, -1), (56, -1), (48, 1), (128, -1), (88, -1), (19, -1), (47, -1), (135, -1), (39, -1), (125, -1), (195, -1), (95, -1), (155, 1), (33, -1), (171, 1), (129, -1), (188, -1), (62, -1), (148, -1), (96, -1), (153, -1), (167, 1), (17, -1), (147, -1), (132, -1), (184, -1), (107, -1), (152, -1), (4, 1), (6, -1), (36, -1), (191, -1), (183, 1), (168, 1), (116, -1), (126, -1), (196, -1), (58, -1), (80, -1), (79, -1), (194, -1), (162, 1), (51, -1), (52, -1), (43, -1), (141, -1), (32, -1), (41, -1), (20, -1), (7, 1), (2, -1), (130, -1), (117, 1), (70, -1), (12, -1), (157, 1), (49, 1), (46, -1), (69, -1), (18, 1), (1, 1), (177, 1), (143, -1), (127, 1), (65, 1), (78, 1), (180, -1), (97, -1), (145, -1), (139, -1), (0, 1), (181, 1), (92, 1), (131, -1), (159, 1), (133, -1), (9, -1), (28, 1), (123, -1), (193, 1), (109, 1), (55, -1), (72, -1)]
best_l after optimization: -36.266971588134766
beta sum per layer: []
alpha/beta optimization time: 15.30277132987976
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.52977276, -2.88134956, -5.22477722, -3.41555977, -4.59031677,
         -4.58303642, -2.27043915, -4.89357758, -4.87814188]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 204.5234375, ub improved 421.77313232421875, time 148.1609
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=200, bias=True) 5 12 torch.Size([200])
sorted candidates ['lay12_61', 'lay12_197', 'lay12_58', 'lay12_13', 'lay12_129', 'lay12_183', 'lay12_15', 'lay12_145', 'lay12_187', 'lay12_86', 'lay12_111', 'lay12_152', 'lay12_1', 'lay12_41', 'lay12_118', 'lay12_34', 'lay12_199', 'lay12_98', 'lay12_174', 'lay12_46', 'lay12_117', 'lay12_84', 'lay12_175', 'lay12_142', 'lay12_96', 'lay12_90', 'lay12_160', 'lay12_74', 'lay12_103', 'lay12_35', 'lay12_128', 'lay12_115', 'lay12_139', 'lay12_47', 'lay12_95', 'lay12_107', 'lay12_30', 'lay12_109', 'lay12_82', 'lay12_184', 'lay12_97', 'lay12_150', 'lay12_71', 'lay12_27', 'lay12_125', 'lay12_77', 'lay12_93', 'lay12_8', 'lay12_4', 'lay12_127', 'lay12_148', 'lay12_23', 'lay12_146', 'lay12_21', 'lay12_165', 'lay12_25', 'lay12_154', 'lay12_173', 'lay12_65', 'lay12_171', 'lay12_151', 'lay12_172', 'lay12_119', 'lay12_116', 'lay12_55', 'lay12_130', 'lay12_68', 'lay12_57', 'lay12_63', 'lay12_132', 'lay12_182', 'lay12_9', 'lay12_141', 'lay12_170', 'lay12_24', 'lay12_113', 'lay12_194', 'lay12_186', 'lay12_83', 'lay12_104', 'lay12_56', 'lay12_36', 'lay12_69', 'lay12_31', 'lay12_190', 'lay12_120', 'lay12_75', 'lay12_188', 'lay12_176', 'lay12_28', 'lay12_19', 'lay12_50', 'lay12_163', 'lay12_52', 'lay12_169', 'lay12_17', 'lay12_180', 'lay12_54', 'lay12_42', 'lay12_72', 'lay12_12', 'lay12_106', 'lay12_89', 'lay12_3', 'lay12_161', 'lay12_123', 'lay12_108', 'lay12_94', 'lay12_114', 'lay12_62', 'lay12_91', 'lay12_134', 'lay12_149', 'lay12_66', 'lay12_32', 'lay12_38', 'lay12_124', 'lay12_177', 'lay12_64', 'lay12_122', 'lay12_136', 'lay12_39', 'lay12_79', 'lay12_88', 'lay12_22', 'lay12_147', 'lay12_133', 'lay12_60', 'lay12_44', 'lay12_14', 'lay12_53', 'lay12_45', 'lay12_40', 'lay12_168', 'lay12_85', 'lay12_80', 'lay12_2', 'lay12_78', 'lay12_121', 'lay12_76', 'lay12_179', 'lay12_18', 'lay12_20', 'lay12_81', 'lay12_101', 'lay12_198', 'lay12_51', 'lay12_5', 'lay12_67', 'lay12_156', 'lay12_26', 'lay12_16', 'lay12_59', 'lay12_181', 'lay12_153', 'lay12_159', 'lay12_110', 'lay12_195', 'lay12_162', 'lay12_137', 'lay12_143', 'lay12_193', 'lay12_10', 'lay12_0', 'lay12_140', 'lay12_100', 'lay12_105', 'lay12_70', 'lay12_43', 'lay12_191', 'lay12_126', 'lay12_112', 'lay12_6', 'lay12_87', 'lay12_49', 'lay12_92', 'lay12_192', 'lay12_33', 'lay12_11', 'lay12_135', 'lay12_155', 'lay12_167', 'lay12_102', 'lay12_166', 'lay12_7', 'lay12_131', 'lay12_157', 'lay12_158', 'lay12_189', 'lay12_164', 'lay12_73', 'lay12_196', 'lay12_48', 'lay12_185', 'lay12_178', 'lay12_144', 'lay12_37', 'lay12_99', 'lay12_138', 'lay12_29'] filter: 1.0
Solving MIP for lay12_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4274s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4433s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5168s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5462s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5541s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5632s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5791s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6007s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6144s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6337s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6691s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2051s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3518s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3228s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4027s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4467s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5712s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5153s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7568s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4030s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4794s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3656s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4444s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4272s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4608s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3439s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_103, [-inf,inf]=>[1e-05,1.3947148284081337] (15,-1; 9,-1), time: 16.5571s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[1e-05,1.6428464679270105] (15,-1; 9,-1), time: 16.3259s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.2048s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3051s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_129, [-inf,inf]=>[-0.4046958895433479,0.31170022190570934] (9,-1; 9,-1), time: 30.1186s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_152, [-inf,inf]=>[-0.2134757403522392,0.5618405393695998] (9,-1; 9,-1), time: 30.1631s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_197, [-inf,inf]=>[-0.3097946118818451,0.2968790134647914] (9,-1; 9,-1), time: 30.2099s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_187, [-inf,inf]=>[-0.8187343098583066,0.20234707864280507] (9,-1; 9,-1), time: 30.2386s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-0.4827418147922653,0.19105634385052273] (9,-1; 9,-1), time: 30.3829s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3797s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3307s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.28333671695402346,0.5562909977079307] (9,-1; 9,-1), time: 30.0717s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_199, [-inf,inf]=>[-0.6199560552185369,0.1473584015764444] (9,-1; 9,-1), time: 30.5670s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-0.42281288743450474,0.2624833855147477] (9,-1; 9,-1), time: 30.6586s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2853s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3474s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3145s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_128, [-inf,inf]=>[-0.6130592556340102,0.16344617063963401] (9,-1; 9,-1), time: 30.1136s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3184s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2458s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2853s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1376s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[-0.0661288521400816,0.6865199797861564] (9,-1; 9,-1), time: 30.1476s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-0.5090055731239408,0.14414875648055173] (9,-1; 9,-1), time: 30.1797s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_184, [-inf,inf]=>[-0.3949875420826846,0.350671657673183] (9,-1; 9,-1), time: 30.1548s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_109, [-inf,inf]=>[-0.8922595475527094,0.18881384273933594] (9,-1; 9,-1), time: 30.3502s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3240s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3796s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3716s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3946s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3788s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3268s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_150, [-inf,inf]=>[-0.8225742910829787,0.3205471264472175] (9,-1; 9,-1), time: 30.8129s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.6456s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4018s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1249s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2001s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[-0.770706989967207,0.36796525280574643] (9,-1; 9,-1), time: 30.5949s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_182, [-inf,inf]=>[1e-05,1.0736531933362945] (15,-1; 9,-1), time: 16.4240s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2569s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.2818368451909241,0.5411900231216795] (9,-1; 9,-1), time: 30.4646s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2948s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_127, [-inf,inf]=>[-0.16470526256799992,0.5164994075401284] (9,-1; 9,-1), time: 30.1601s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_148, [-inf,inf]=>[-0.5403280851327452,0.20451340906620682] (9,-1; 9,-1), time: 30.1152s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.19356328474458961,0.7656407667659106] (9,-1; 9,-1), time: 30.4466s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4842s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4227s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-0.3585667518386477,0.5035476553987028] (9,-1; 9,-1), time: 30.1054s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.4240266753703257,0.3318536003827584] (9,-1; 9,-1), time: 30.2675s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4698s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_173, [-inf,inf]=>[-0.6227366567834959,0.17254674293338693] (9,-1; 9,-1), time: 30.5348s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-0.6511894000798465,0.1142579693347221] (9,-1; 9,-1), time: 30.0394s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-0.5952884335420782,0.22279458560943627] (9,-1; 9,-1), time: 30.3142s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_141, [-inf,inf]=>[-0.23680897050160413,0.42367144331148837] (9,-1; 9,-1), time: 30.1469s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-0.6639369754500349,0.04813551142994198] (9,-1; 9,-1), time: 30.3581s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1660s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5066s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-0.38450669140349425,0.4986186377543043] (9,-1; 9,-1), time: 30.2009s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.5579s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4737s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3461s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_194, [-inf,inf]=>[-0.937742741203861,0.04558496520694569] (9,-1; 9,-1), time: 30.1792s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4052s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3076s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1808s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4454s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[-0.00403405724574854,0.7415294737122576] (9,-1; 9,-1), time: 30.4785s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3360s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2899s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4802s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.6669s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_104, [-inf,inf]=>[-0.6500912380038751,0.07303342418345118] (9,-1; 9,-1), time: 30.1551s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,1.2842757291617866] (15,-1; 9,-1), time: 16.4497s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.5602915684644607,0.14917675819232215] (9,-1; 9,-1), time: 30.0663s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_123, [-inf,inf]=>[1e-05,1.036780919826364] (15,-1; 9,-1), time: 16.4434s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2637s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.10908618991901534,0.8491822612515292] (9,-1; 9,-1), time: 30.4113s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_120, [-inf,inf]=>[-0.48678014005677406,0.2237983717429156] (9,-1; 9,-1), time: 30.5809s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[1e-05,0.8647215480504717] (15,-1; 9,-1), time: 28.4250s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_176, [-inf,inf]=>[-0.2703009571039264,0.5119730978264072] (9,-1; 9,-1), time: 30.3885s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-0.3755887777024307,0.2408639493522483] (9,-1; 9,-1), time: 30.2389s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_163, [-inf,inf]=>[-0.29411318426615257,0.3838691829025647] (9,-1; 9,-1), time: 30.2333s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2173s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_149, [-inf,inf]=>[1e-05,1.832985518743322] (15,-1; 9,-1), time: 16.3201s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.4781750660494573] (15,-1; 9,-1), time: 16.4021s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.4749s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-0.8570173150133444,0.04300366021224841] (9,-1; 9,-1), time: 30.2437s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-0.5375924716863762,0.2428042517260123] (9,-1; 9,-1), time: 30.2482s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3887s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2287s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_114, [-inf,inf]=>[-0.6454829633709027,0.30611082115628796] (9,-1; 9,-1), time: 30.4946s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.18896037298644852,0.6693039074668753] (9,-1; 9,-1), time: 30.3503s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_134, [-inf,inf]=>[-0.7481169126517787,0.013425629361168721] (9,-1; 9,-1), time: 30.3859s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5351s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5239s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_147, [-inf,inf]=>[1e-05,2.880973942479963] (15,-1; 9,-1), time: 16.3687s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.3887680346125385,0.6654791209737154] (9,-1; 9,-1), time: 30.3698s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1099s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3375s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[1e-05,1.5081818740830815] (15,-1; 9,-1), time: 16.2457s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3177s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-0.11336993038169096,0.5959274209892569] (9,-1; 9,-1), time: 30.3413s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2488s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_177, [-inf,inf]=>[-0.5170826105929016,0.04766947272501521] (9,-1; 9,-1), time: 30.1519s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.2816867831483993] (15,-1; 9,-1), time: 16.3407s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.5629181110467633,0.3234866766918536] (9,-1; 9,-1), time: 30.6201s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3753s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3734s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[1e-05,4.0961747192059255] (15,-1; 9,-1), time: 16.4671s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3474s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_122, [-inf,inf]=>[-0.5261808955167812,0.13793972699000281] (9,-1; 9,-1), time: 30.1695s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3566s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4080s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_136, [-inf,inf]=>[-1.355336988825979,0.29273991271104893] (9,-1; 9,-1), time: 30.2357s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3421s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-0.6731395966557766,0.09938579722198317] (9,-1; 9,-1), time: 30.3256s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3778s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2919s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3369s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-0.20458786351364772,0.6541181100662986] (9,-1; 9,-1), time: 30.3781s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2311s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_193, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2169s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1859s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3031s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-0.3245136634804023,0.44076854086195344] (9,-1; 9,-1), time: 30.2793s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[1e-05,1.573203577534664] (15,-1; 9,-1), time: 16.4352s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.40016387605710246,0.4253279791493134] (9,-1; 9,-1), time: 30.2163s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2985s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.45469193983233713,0.15666293660625177] (9,-1; 9,-1), time: 30.1366s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1751s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_179, [-inf,inf]=>[1e-05,0.9212573672742268] (15,-1; 9,-1), time: 16.5749s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4092s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,4.327172174871722] (15,-1; 9,-1), time: 16.3290s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[1e-05,1.696785175021584] (15,-1; 9,-1), time: 16.3593s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.5950083579572701,0.2716810141964018] (9,-1; 9,-1), time: 30.0472s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[1e-05,2.7521974370583] (15,-1; 9,-1), time: 16.4204s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[1e-05,3.1716873552749703] (15,-1; 9,-1), time: 16.3843s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3508s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5267s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4261s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1693s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_143, [-inf,inf]=>[1e-05,1.3535565558615108] (15,-1; 9,-1), time: 16.3334s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2903s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1824s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[1e-05,1.6804369187936823] (15,-1; 9,-1), time: 16.3594s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2199s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_181, [-inf,inf]=>[-0.6647597081097673,0.39107400920084084] (9,-1; 9,-1), time: 30.2602s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-0.17663733736459578,0.6421956322690981] (9,-1; 9,-1), time: 30.3544s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3563s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_137, [-inf,inf]=>[-0.5662182940403552,0.38928483900122424] (9,-1; 9,-1), time: 30.0507s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2682s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1907s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_140, [-inf,inf]=>[-0.49597104512438506,0.18387575643609397] (9,-1; 9,-1), time: 30.0755s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_100, [-inf,inf]=>[-0.8926795722545111,0.06752720607636076] (9,-1; 9,-1), time: 30.1019s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3676s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_105, [-inf,inf]=>[-0.3449242744624577,0.403785977148774] (9,-1; 9,-1), time: 30.4151s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4494s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4771s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_126, [-inf,inf]=>[-0.010065086810605903,0.7874271458554556] (9,-1; 9,-1), time: 30.1302s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_112, [-inf,inf]=>[-0.34298509501763963,0.6018186101531183] (9,-1; 9,-1), time: 30.0158s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2777s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.4805456611229101,0.26305026425781447] (9,-1; 9,-1), time: 30.0979s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-1.0330583447062218,0.02734274549832197] (9,-1; 9,-1), time: 30.2012s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_192, [-inf,inf]=>[-0.8341006560769142,0.029043511569780883] (9,-1; 9,-1), time: 30.1431s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.7644934823992142,0.09737453487165294] (9,-1; 9,-1), time: 30.0622s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_155, [-inf,inf]=>[-0.5934935737714667,0.21048117003914554] (9,-1; 9,-1), time: 30.2367s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_102, [-inf,inf]=>[-0.4263040359103972,0.5775474322110847] (9,-1; 9,-1), time: 30.1888s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_164, [-inf,inf]=>[1e-05,1.3066898313912554] (15,-1; 9,-1), time: 16.9434s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_131, [-inf,inf]=>[-0.26318807587799176,0.38481893665951694] (9,-1; 9,-1), time: 30.0983s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[1e-05,1.317741740185] (15,-1; 9,-1), time: 16.3624s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_158, [-inf,inf]=>[-0.8622603248225734,0.047885216326515566] (9,-1; 9,-1), time: 30.5772s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_196, [-inf,inf]=>[-0.24580498677718074,0.5235433927950135] (9,-1; 9,-1), time: 30.0399s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_185, [-inf,inf]=>[-0.9185668280048632,0.10688816251584704] (9,-1; 9,-1), time: 30.2848s, #vars: 2463, #constrs: 1917, improved: True
Solving MIP for lay12_138, [-inf,inf]=>[-0.5119693641918712,0.31134339204058326] (9,-1; 9,-1), time: 30.0105s, #vars: 2463, #constrs: 1917, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 4 has unstable to stable neurons: [(83, -1), (50, -1), (64, -1), (86, -1), (34, -1), (191, -1), (45, -1), (22, -1), (169, -1), (38, -1), (58, -1), (144, 1), (36, -1), (11, -1), (111, -1), (196, -1), (48, -1), (54, -1), (67, -1), (77, -1), (163, -1), (157, -1), (56, -1), (106, -1), (89, -1), (39, -1), (29, -1), (164, -1), (12, -1), (152, -1), (25, -1), (90, -1), (118, -1), (130, -1), (93, -1), (143, -1), (53, -1), (99, -1), (44, -1), (63, -1), (171, 1), (116, -1), (42, -1), (195, -1), (76, 1), (162, -1), (182, -1), (91, 1), (3, -1), (159, -1), (40, -1), (100, -1), (135, -1), (138, 1), (149, -1), (23, -1), (96, -1), (160, -1), (102, -1), (122, 1), (49, -1), (30, -1), (57, -1), (10, -1), (20, -1), (16, -1), (79, -1), (47, -1), (110, -1), (9, 1), (146, -1), (127, 1), (85, -1), (65, 1), (61, -1), (112, -1), (174, -1), (147, -1), (46, -1), (108, -1), (35, -1), (71, -1), (97, 1), (32, -1), (26, -1), (126, -1), (114, -1), (115, -1), (128, -1), (19, -1), (94, -1), (43, -1), (55, 1), (139, -1), (134, -1), (82, -1), (178, -1), (101, 1), (75, 1), (168, -1), (192, -1), (189, -1), (187, -1), (69, 1), (2, -1), (176, -1), (24, 1), (120, -1), (161, -1), (109, -1), (166, -1), (41, -1), (190, -1), (14, -1), (193, 1), (98, -1), (117, -1), (173, -1), (165, -1), (81, -1), (123, 1), (80, -1), (148, -1), (27, -1), (129, 1), (136, 1), (51, -1), (141, -1), (180, -1), (113, -1), (145, -1), (103, -1), (1, -1), (87, -1), (84, -1), (13, -1), (92, -1), (7, -1), (60, 1), (137, -1), (198, -1), (177, -1), (21, 1), (70, -1), (121, -1), (133, -1), (140, -1), (179, -1), (150, -1)]
best_l after optimization: -6.032582759857178
beta sum per layer: []
alpha/beta optimization time: 15.27125597000122
alpha-CROWN with intermediate bounds by MIP: tensor([[-1.05401278,  0.54967451, -1.61051130,  0.86439228, -0.81688976,
         -1.37731886,  0.66370726, -1.30499506, -1.94662905]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 1134.749755859375, ub improved 1626.7515869140625, time 190.1284
maximum relu layer improved by MIP so far 5
Linear(in_features=200, out_features=200, bias=True) 6 14 torch.Size([200])
sorted candidates ['lay14_174', 'lay14_197', 'lay14_7', 'lay14_40', 'lay14_11', 'lay14_126', 'lay14_82', 'lay14_129', 'lay14_106', 'lay14_69', 'lay14_21', 'lay14_16', 'lay14_145', 'lay14_0', 'lay14_134', 'lay14_136', 'lay14_41', 'lay14_167', 'lay14_74', 'lay14_146', 'lay14_47', 'lay14_153', 'lay14_58', 'lay14_193', 'lay14_10', 'lay14_39', 'lay14_184', 'lay14_149', 'lay14_23', 'lay14_70', 'lay14_36', 'lay14_97', 'lay14_61', 'lay14_154', 'lay14_125', 'lay14_118', 'lay14_12', 'lay14_178', 'lay14_114', 'lay14_87', 'lay14_8', 'lay14_163', 'lay14_64', 'lay14_148', 'lay14_102', 'lay14_92', 'lay14_179', 'lay14_34', 'lay14_30', 'lay14_144', 'lay14_113', 'lay14_173', 'lay14_107', 'lay14_150', 'lay14_177', 'lay14_66', 'lay14_181', 'lay14_140', 'lay14_59', 'lay14_56', 'lay14_186', 'lay14_195', 'lay14_170', 'lay14_135', 'lay14_111', 'lay14_26', 'lay14_183', 'lay14_165', 'lay14_89', 'lay14_88', 'lay14_141', 'lay14_121', 'lay14_48', 'lay14_161', 'lay14_128', 'lay14_90', 'lay14_123', 'lay14_6', 'lay14_160', 'lay14_43', 'lay14_81', 'lay14_57', 'lay14_55', 'lay14_157', 'lay14_51', 'lay14_31', 'lay14_77', 'lay14_32', 'lay14_49', 'lay14_127', 'lay14_124', 'lay14_190', 'lay14_27', 'lay14_65', 'lay14_71', 'lay14_14', 'lay14_94', 'lay14_29', 'lay14_4', 'lay14_63', 'lay14_76', 'lay14_25', 'lay14_158', 'lay14_130', 'lay14_52', 'lay14_103', 'lay14_104', 'lay14_139', 'lay14_194', 'lay14_162', 'lay14_166', 'lay14_156', 'lay14_93', 'lay14_147', 'lay14_142', 'lay14_168', 'lay14_98', 'lay14_37', 'lay14_172', 'lay14_95', 'lay14_110', 'lay14_73', 'lay14_151', 'lay14_180', 'lay14_75', 'lay14_99', 'lay14_83', 'lay14_185', 'lay14_143', 'lay14_68', 'lay14_122', 'lay14_155', 'lay14_188', 'lay14_22', 'lay14_28', 'lay14_72', 'lay14_78', 'lay14_38', 'lay14_115', 'lay14_33', 'lay14_24', 'lay14_13', 'lay14_84', 'lay14_19', 'lay14_159', 'lay14_85', 'lay14_117', 'lay14_196', 'lay14_86', 'lay14_79', 'lay14_15', 'lay14_3', 'lay14_54', 'lay14_101', 'lay14_164', 'lay14_45', 'lay14_17', 'lay14_62', 'lay14_109', 'lay14_50', 'lay14_152', 'lay14_176', 'lay14_1', 'lay14_80', 'lay14_67', 'lay14_120', 'lay14_35', 'lay14_53', 'lay14_108', 'lay14_96', 'lay14_198', 'lay14_20', 'lay14_169', 'lay14_119', 'lay14_105', 'lay14_175', 'lay14_138', 'lay14_9', 'lay14_46', 'lay14_132', 'lay14_137', 'lay14_5', 'lay14_42', 'lay14_199', 'lay14_18', 'lay14_131', 'lay14_44', 'lay14_60', 'lay14_187', 'lay14_2', 'lay14_91', 'lay14_191', 'lay14_171', 'lay14_133', 'lay14_192', 'lay14_189', 'lay14_182', 'lay14_112', 'lay14_100', 'lay14_116'] filter: 1.0
Solving MIP for lay14_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8217s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9035s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9046s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9107s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9198s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9797s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0596s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1407s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1476s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1851s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2271s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4153s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6233s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9855s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9401s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1502s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0012s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7222s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.9037s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0209s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0422s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.2405s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8472s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7572s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9280s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6320s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_0, [-inf,inf]=>[-0.8472874427617786,0.10071377101194617] (9,-1; 9,-1), time: 30.0339s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_106, [-inf,inf]=>[-1.3008295862783346,0.1811146666172082] (9,-1; 9,-1), time: 30.2478s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_16, [-inf,inf]=>[-0.9032014386495081,0.21256693450523342] (9,-1; 9,-1), time: 30.3217s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-1.0801109049867743,0.05497314335935072] (9,-1; 9,-1), time: 30.5428s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[-1.3554425610729686,0.012628766788161383] (9,-1; 9,-1), time: 30.1343s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_167, [-inf,inf]=>[-1.2654763720958655,0.0641527624176371] (9,-1; 9,-1), time: 30.0548s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_146, [-inf,inf]=>[-0.6782035806397329,0.3249704654889763] (9,-1; 9,-1), time: 30.2200s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_74, [-inf,inf]=>[-1.418726017475508,0.13191832058369227] (9,-1; 9,-1), time: 30.6439s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_39, [-inf,inf]=>[-0.13778026758761586,0.8755087944671842] (9,-1; 9,-1), time: 30.4142s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_193, [-inf,inf]=>[-0.6109258701984259,0.3464993702304088] (9,-1; 9,-1), time: 30.4810s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9746s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7079s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7697s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_70, [-inf,inf]=>[-0.47369189771498377,0.46318001060447617] (9,-1; 9,-1), time: 30.4326s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_36, [-inf,inf]=>[-0.16578519172080697,1.0894069548403034] (9,-1; 9,-1), time: 30.1966s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0795s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8813s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7343s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7601s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_12, [-inf,inf]=>[-0.45357909600937074,0.6302148292400157] (9,-1; 9,-1), time: 30.2468s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_87, [-inf,inf]=>[-1.3188276920042437,0.0076235351590154266] (9,-1; 9,-1), time: 30.8423s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8481s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2354s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_8, [-inf,inf]=>[-0.7079941148250111,0.29274560755472395] (9,-1; 9,-1), time: 30.5076s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_163, [-inf,inf]=>[-1.089906053104254,0.012120447052686889] (9,-1; 9,-1), time: 30.6425s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8025s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9102s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9686s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_64, [-inf,inf]=>[-0.40054151570992413,0.7294543782735046] (9,-1; 9,-1), time: 30.3755s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_148, [-inf,inf]=>[-0.8886479895947164,0.07653483426689864] (9,-1; 9,-1), time: 30.2443s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_102, [-inf,inf]=>[-0.690512553524791,0.2579608347064] (9,-1; 9,-1), time: 30.2192s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_92, [-inf,inf]=>[-0.7452886117484055,0.2980106304302855] (9,-1; 9,-1), time: 30.1860s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_34, [-inf,inf]=>[-0.29826997458536625,0.616163469287931] (9,-1; 9,-1), time: 30.0162s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6177s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_30, [-inf,inf]=>[-0.8892745353664484,0.29466166443137104] (9,-1; 9,-1), time: 30.1385s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_107, [-inf,inf]=>[-0.6260346053811805,0.34960479650983334] (9,-1; 9,-1), time: 30.0773s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_150, [-inf,inf]=>[-0.7994573655941272,0.3832411075419606] (9,-1; 9,-1), time: 30.3274s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_177, [-inf,inf]=>[-1.0844416591247503,0.1615108619475799] (9,-1; 9,-1), time: 30.3817s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_140, [-inf,inf]=>[-1.0992774903771703,0.04899854133582214] (9,-1; 9,-1), time: 30.1739s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6060s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.3212s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_59, [-inf,inf]=>[-1.1460671552547128,0.02633987618305788] (9,-1; 9,-1), time: 30.1841s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2038s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7787s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_170, [-inf,inf]=>[-0.5170025831835977,0.449887451242914] (9,-1; 9,-1), time: 30.4247s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_26, [-inf,inf]=>[-0.7673365184565528,0.3613709024593137] (9,-1; 9,-1), time: 30.0174s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_165, [-inf,inf]=>[-0.3131511627820434,0.7926356868635518] (9,-1; 9,-1), time: 30.2502s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_89, [-inf,inf]=>[-0.2876812232409039,0.6306552972482719] (9,-1; 9,-1), time: 30.0990s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8612s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_88, [-inf,inf]=>[-1.0152246986346798,0.07525622382330809] (9,-1; 9,-1), time: 30.2024s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0764s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0988s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1504s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_161, [-inf,inf]=>[1e-05,3.3878640271469553] (15,-1; 9,-1), time: 17.0528s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_123, [-inf,inf]=>[1e-05,1.732194880486056] (15,-1; 9,-1), time: 16.9427s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9571s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0186s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.1688s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.5915s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_121, [-inf,inf]=>[-0.27915552210525857,0.9112980957073374] (9,-1; 9,-1), time: 30.2024s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_128, [-inf,inf]=>[-1.0394192435125535,0.056598370312798824] (9,-1; 9,-1), time: 30.1751s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_90, [-inf,inf]=>[-1.171147346534365,0.0981171800488654] (9,-1; 9,-1), time: 30.1492s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5525s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_160, [-inf,inf]=>[-0.564495696630392,0.5162710672153462] (9,-1; 9,-1), time: 30.2310s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_81, [-inf,inf]=>[-1.0328869754053267,0.3931706623299678] (9,-1; 9,-1), time: 30.2841s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_55, [-inf,inf]=>[-0.6822297731110466,0.2882432907906205] (9,-1; 9,-1), time: 30.1735s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_57, [-inf,inf]=>[-0.8132390363200948,0.16651461214403052] (9,-1; 9,-1), time: 30.2964s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_94, [-inf,inf]=>[1e-05,1.5560484823176872] (15,-1; 9,-1), time: 16.7850s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8926s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_51, [-inf,inf]=>[-0.7360121088803565,0.6728740430402764] (9,-1; 9,-1), time: 30.2783s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_31, [-inf,inf]=>[-0.26921981184406246,0.7805918666699448] (9,-1; 9,-1), time: 30.1836s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_77, [-inf,inf]=>[-0.7227260712239356,0.526881750611847] (9,-1; 9,-1), time: 30.2555s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_127, [-inf,inf]=>[-0.320673400980768,1.2059475295445399] (9,-1; 9,-1), time: 30.1035s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.6006s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_49, [-inf,inf]=>[-0.15066736581534448,1.258267315343842] (9,-1; 9,-1), time: 30.1635s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9016s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6069s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8025s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_27, [-inf,inf]=>[-0.5725082678892374,0.4132802119169962] (9,-1; 9,-1), time: 30.6071s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6371s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8675s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_76, [-inf,inf]=>[1e-05,1.9963111709128534] (15,-1; 9,-1), time: 17.0315s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1423s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8482s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_4, [-inf,inf]=>[-0.9391869111264584,0.2480539730204256] (9,-1; 9,-1), time: 30.1895s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_139, [-inf,inf]=>[1e-05,1.43705937161782] (15,-1; 9,-1), time: 16.5006s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9611s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_93, [-inf,inf]=>[1e-05,1.6289941321035395] (15,-1; 9,-1), time: 16.9607s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6045s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_25, [-inf,inf]=>[-0.9197799757921167,0.29058936300557253] (9,-1; 9,-1), time: 30.1670s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_130, [-inf,inf]=>[-1.1451268853951706,0.04015846401693476] (9,-1; 9,-1), time: 30.3789s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_52, [-inf,inf]=>[-0.7043196597726146,0.8434854745188839] (9,-1; 9,-1), time: 30.3007s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_194, [-inf,inf]=>[-0.7002704217051283,0.3640060304724444] (9,-1; 9,-1), time: 30.7120s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_156, [-inf,inf]=>[-0.006944250937165303,1.069342402602711] (9,-1; 9,-1), time: 30.2287s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_166, [-inf,inf]=>[-1.0004881938176868,0.09734116570980908] (9,-1; 9,-1), time: 30.7095s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_83, [-inf,inf]=>[1e-05,1.863895440862632] (15,-1; 9,-1), time: 17.0405s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6964s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_147, [-inf,inf]=>[-0.3230318191501187,0.573403316107829] (9,-1; 9,-1), time: 30.1700s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_143, [-inf,inf]=>[1e-05,1.9137934686694484] (15,-1; 9,-1), time: 17.1646s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7918s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_98, [-inf,inf]=>[-0.27454834451932525,0.8695452519167448] (9,-1; 9,-1), time: 30.6154s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6753s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_37, [-inf,inf]=>[-0.8556615300527981,0.3622967166546751] (9,-1; 9,-1), time: 30.3692s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_122, [-inf,inf]=>[1e-05,2.0931044944246464] (15,-1; 9,-1), time: 17.2303s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_110, [-inf,inf]=>[-0.6564525826600074,0.4354740784203546] (9,-1; 9,-1), time: 30.0632s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_151, [-inf,inf]=>[-1.2036350382988257,0.19979451911064128] (9,-1; 9,-1), time: 30.5942s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5882s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_75, [-inf,inf]=>[-0.5482485495297176,0.8107720918553927] (9,-1; 9,-1), time: 30.1643s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_99, [-inf,inf]=>[-0.30463349782215565,0.7520371697505458] (9,-1; 9,-1), time: 30.1183s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_188, [-inf,inf]=>[1e-05,5.543771551218511] (15,-1; 9,-1), time: 17.0683s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8306s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_78, [-inf,inf]=>[1e-05,3.273592821822064] (15,-1; 9,-1), time: 16.9647s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_115, [-inf,inf]=>[1e-05,2.5673044245118226] (15,-1; 9,-1), time: 16.7611s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8508s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_155, [-inf,inf]=>[-0.5589199831139031,0.5028229298657552] (9,-1; 9,-1), time: 30.1203s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_22, [-inf,inf]=>[-0.28585006489306103,0.746840017338248] (9,-1; 9,-1), time: 30.2179s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_196, [-inf,inf]=>[1e-05,1.2255891465927595] (15,-1; 9,-1), time: 19.7974s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_28, [-inf,inf]=>[-0.42829743383478536,0.6230784456666345] (9,-1; 9,-1), time: 30.1237s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_72, [-inf,inf]=>[-0.217166154804326,1.086869932292936] (9,-1; 9,-1), time: 30.0878s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7646s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9096s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.2805s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_13, [-inf,inf]=>[-0.7110059058356739,0.40613089115602125] (9,-1; 9,-1), time: 30.2718s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_159, [-inf,inf]=>[-1.0702250969301814,0.16238777863866033] (9,-1; 9,-1), time: 30.0723s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_19, [-inf,inf]=>[-1.095136731701984,0.13918126672853898] (9,-1; 9,-1), time: 30.1561s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_84, [-inf,inf]=>[-0.8300156329175126,0.5207147637300822] (9,-1; 9,-1), time: 30.2908s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_85, [-inf,inf]=>[-0.22322865395219083,1.0820839049508133] (9,-1; 9,-1), time: 30.1484s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9931s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_86, [-inf,inf]=>[-0.5706254471214888,0.5256209586410188] (9,-1; 9,-1), time: 30.0734s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_15, [-inf,inf]=>[-0.6818835633478803,0.5286232433512563] (9,-1; 9,-1), time: 30.1477s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7780s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_54, [-inf,inf]=>[-0.3041524362173851,0.644587171000328] (9,-1; 9,-1), time: 30.1510s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_3, [-inf,inf]=>[-0.7139238910539917,0.28395405748740854] (9,-1; 9,-1), time: 30.7941s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8297s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.0366s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_101, [-inf,inf]=>[-0.1769528061435215,0.9764523303664163] (9,-1; 9,-1), time: 30.1798s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8443s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_45, [-inf,inf]=>[-0.426473074435233,0.408365216858779] (9,-1; 9,-1), time: 30.1596s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_67, [-inf,inf]=>[1e-05,1.6675332969271626] (15,-1; 9,-1), time: 16.8813s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5332s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_17, [-inf,inf]=>[-0.8874926551164121,0.21908045361721176] (9,-1; 9,-1), time: 30.2472s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.1602s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9281s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_62, [-inf,inf]=>[-0.7682758212987819,0.39606429245048347] (9,-1; 9,-1), time: 30.1724s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7572s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0364s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_176, [-inf,inf]=>[-0.2329510107895456,0.7994413369489142] (9,-1; 9,-1), time: 30.3002s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9573s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.9698s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_1, [-inf,inf]=>[-0.9014057476133337,0.0304306157514124] (9,-1; 9,-1), time: 30.2569s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4637s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8418s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6739s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5466s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_80, [-inf,inf]=>[-0.8468983165754307,0.20836299702617608] (9,-1; 9,-1), time: 30.1186s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9598s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_53, [-inf,inf]=>[-0.4997567985463408,0.3268483452205023] (9,-1; 9,-1), time: 30.1943s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7925s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_120, [-inf,inf]=>[-0.9599446275376755,0.20341372371308694] (9,-1; 9,-1), time: 30.7177s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_108, [-inf,inf]=>[-0.7441550928764555,0.25026608432747427] (9,-1; 9,-1), time: 30.2355s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7071s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_96, [-inf,inf]=>[-0.18720692560486857,1.020480247400588] (9,-1; 9,-1), time: 30.2353s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_105, [-inf,inf]=>[-1.1842205787024795,0.17958073439462874] (9,-1; 9,-1), time: 30.1348s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_119, [-inf,inf]=>[-0.6581779766024891,0.3952309943512272] (9,-1; 9,-1), time: 30.6141s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_175, [-inf,inf]=>[-1.1571420608469667,0.11134850977012452] (9,-1; 9,-1), time: 30.5750s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_138, [-inf,inf]=>[-0.7631499005590169,0.31544501915178824] (9,-1; 9,-1), time: 30.6118s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_137, [-inf,inf]=>[-0.6326699276771384,0.4720700162292067] (9,-1; 9,-1), time: 30.0983s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_5, [-inf,inf]=>[-0.934156677415496,0.08752375978525402] (9,-1; 9,-1), time: 30.0764s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_199, [-inf,inf]=>[-0.7487921876923281,0.19672672879162437] (9,-1; 9,-1), time: 30.1433s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_171, [-inf,inf]=>[-0.8930138126368313,0.12084721524714795] (9,-1; 9,-1), time: 30.2810s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_133, [-inf,inf]=>[-1.1647088767635874,0.06478525005908027] (9,-1; 9,-1), time: 30.4130s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_192, [-inf,inf]=>[-1.1240980653799997,0.006580691691887859] (9,-1; 9,-1), time: 30.2836s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_100, [-inf,inf]=>[-1.2445065478384474,0.05124779837505439] (9,-1; 9,-1), time: 30.1379s, #vars: 2807, #constrs: 2333, improved: True
Solving MIP for lay14_116, [-inf,inf]=>[-1.4148799759902744,0.07392165520578364] (9,-1; 9,-1), time: 30.0724s, #vars: 2807, #constrs: 2333, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 5 has unstable to stable neurons: [(61, -1), (58, -1), (13, -1), (183, -1), (145, -1), (86, -1), (111, -1), (1, -1), (41, -1), (118, -1), (34, -1), (98, -1), (174, -1), (117, -1), (175, -1), (142, -1), (96, -1), (90, -1), (160, -1), (74, -1), (103, 1), (35, -1), (115, -1), (139, -1), (47, -1), (95, 1), (107, -1), (97, -1), (71, -1), (125, -1), (93, -1), (4, -1), (23, -1), (146, -1), (21, -1), (165, -1), (154, -1), (171, -1), (151, -1), (172, -1), (119, -1), (116, -1), (55, -1), (130, -1), (57, -1), (132, -1), (182, 1), (170, -1), (113, -1), (186, -1), (56, -1), (36, -1), (190, -1), (75, -1), (188, -1), (19, 1), (50, -1), (52, 1), (169, -1), (17, -1), (180, -1), (54, -1), (72, -1), (106, -1), (89, -1), (3, -1), (161, -1), (123, 1), (108, -1), (94, -1), (62, -1), (149, 1), (66, 1), (124, -1), (79, -1), (88, -1), (147, 1), (133, -1), (14, 1), (53, -1), (40, 1), (168, -1), (85, -1), (80, 1), (78, 1), (121, -1), (76, -1), (179, 1), (18, -1), (20, -1), (81, 1), (101, -1), (198, -1), (51, 1), (5, 1), (67, 1), (156, -1), (26, -1), (16, -1), (153, -1), (159, -1), (110, -1), (195, -1), (162, -1), (143, 1), (193, -1), (10, -1), (0, -1), (70, -1), (43, 1), (191, -1), (6, -1), (92, -1), (33, -1), (135, -1), (167, -1), (166, -1), (7, -1), (157, -1), (189, -1), (164, 1), (73, -1), (48, -1), (178, -1), (144, -1), (37, 1), (99, -1), (29, -1)]
best_l after optimization: 3.4727816581726074
beta sum per layer: []
alpha/beta optimization time: 15.275667905807495
alpha-CROWN with intermediate bounds by MIP: tensor([[-0.10407639,  1.61437368, -0.51448154,  2.18078613,  0.37089634,
         -0.33952856,  1.50531006, -0.18382311, -1.05667496]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 4771.3701171875, ub improved 6493.73828125, time 226.0678
maximum relu layer improved by MIP so far 6
Linear(in_features=200, out_features=200, bias=True) 7 16 torch.Size([200])
sorted candidates ['lay16_17', 'lay16_194', 'lay16_113', 'lay16_185', 'lay16_15', 'lay16_92', 'lay16_84', 'lay16_111', 'lay16_95', 'lay16_98', 'lay16_28', 'lay16_107', 'lay16_177', 'lay16_118', 'lay16_82', 'lay16_147', 'lay16_154', 'lay16_6', 'lay16_178', 'lay16_193', 'lay16_121', 'lay16_151', 'lay16_155', 'lay16_162', 'lay16_153', 'lay16_119', 'lay16_170', 'lay16_187', 'lay16_138', 'lay16_12', 'lay16_180', 'lay16_88', 'lay16_106', 'lay16_199', 'lay16_59', 'lay16_161', 'lay16_91', 'lay16_164', 'lay16_126', 'lay16_93', 'lay16_90', 'lay16_179', 'lay16_73', 'lay16_40', 'lay16_85', 'lay16_69', 'lay16_160', 'lay16_105', 'lay16_181', 'lay16_133', 'lay16_117', 'lay16_10', 'lay16_42', 'lay16_37', 'lay16_32', 'lay16_54', 'lay16_5', 'lay16_140', 'lay16_127', 'lay16_99', 'lay16_66', 'lay16_143', 'lay16_3', 'lay16_184', 'lay16_87', 'lay16_35', 'lay16_58', 'lay16_0', 'lay16_108', 'lay16_61', 'lay16_141', 'lay16_163', 'lay16_157', 'lay16_158', 'lay16_169', 'lay16_27', 'lay16_26', 'lay16_34', 'lay16_29', 'lay16_9', 'lay16_116', 'lay16_1', 'lay16_62', 'lay16_197', 'lay16_72', 'lay16_18', 'lay16_89', 'lay16_71', 'lay16_120', 'lay16_20', 'lay16_109', 'lay16_49', 'lay16_166', 'lay16_75', 'lay16_11', 'lay16_175', 'lay16_114', 'lay16_68', 'lay16_190', 'lay16_38', 'lay16_103', 'lay16_48', 'lay16_135', 'lay16_2', 'lay16_149', 'lay16_110', 'lay16_150', 'lay16_145', 'lay16_25', 'lay16_4', 'lay16_86', 'lay16_45', 'lay16_165', 'lay16_77', 'lay16_81', 'lay16_142', 'lay16_100', 'lay16_192', 'lay16_64', 'lay16_23', 'lay16_196', 'lay16_55', 'lay16_112', 'lay16_102', 'lay16_47', 'lay16_33', 'lay16_63', 'lay16_67', 'lay16_144', 'lay16_52', 'lay16_43', 'lay16_46', 'lay16_128', 'lay16_176', 'lay16_137', 'lay16_78', 'lay16_74', 'lay16_186', 'lay16_16', 'lay16_171', 'lay16_122', 'lay16_159', 'lay16_104', 'lay16_125', 'lay16_195', 'lay16_129', 'lay16_134', 'lay16_65', 'lay16_50', 'lay16_123', 'lay16_188', 'lay16_30', 'lay16_79', 'lay16_146', 'lay16_7', 'lay16_101', 'lay16_132', 'lay16_24', 'lay16_115', 'lay16_148', 'lay16_173', 'lay16_152', 'lay16_139', 'lay16_41', 'lay16_97', 'lay16_8', 'lay16_51', 'lay16_124', 'lay16_44', 'lay16_56', 'lay16_31', 'lay16_131', 'lay16_60', 'lay16_21', 'lay16_19', 'lay16_130', 'lay16_39', 'lay16_36', 'lay16_96', 'lay16_22', 'lay16_136', 'lay16_156', 'lay16_189', 'lay16_76', 'lay16_198', 'lay16_80', 'lay16_83', 'lay16_13', 'lay16_94', 'lay16_183', 'lay16_14', 'lay16_167', 'lay16_182', 'lay16_174', 'lay16_191', 'lay16_172', 'lay16_168', 'lay16_70', 'lay16_53', 'lay16_57'] filter: 1.0
Solving MIP for lay16_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4531s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7170s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0415s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_111, [-inf,inf]=>[-2.0512614598958887,0.14757847444061067] (9,-1; 9,-1), time: 30.2332s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_15, [-inf,inf]=>[-0.8012157481328744,0.8122499386735289] (9,-1; 9,-1), time: 30.3726s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_177, [-inf,inf]=>[-1.677599053986854,0.5221466978202076] (9,-1; 9,-1), time: 30.5907s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_28, [-inf,inf]=>[-1.9382302316595967,0.058020212378551914] (9,-1; 9,-1), time: 30.6038s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_95, [-inf,inf]=>[-1.2218750343569176,0.3521137506319263] (9,-1; 9,-1), time: 30.6197s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_92, [-inf,inf]=>[-1.7155797192200164,0.17644370288233094] (9,-1; 9,-1), time: 30.6782s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_84, [-inf,inf]=>[-0.9762309384766651,0.3198936328261599] (9,-1; 9,-1), time: 30.6962s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_113, [-inf,inf]=>[-1.087194254339441,0.8369534983487155] (9,-1; 9,-1), time: 30.7598s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_107, [-inf,inf]=>[-1.1418483391867411,0.51849664174139] (9,-1; 9,-1), time: 30.7859s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_82, [-inf,inf]=>[-1.387229950024241,0.6232227611786356] (9,-1; 9,-1), time: 30.9409s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_17, [-inf,inf]=>[-1.6909699387918564,0.29546622055740507] (9,-1; 9,-1), time: 30.9713s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_118, [-inf,inf]=>[-1.6404606291223338,0.05956950805391846] (9,-1; 9,-1), time: 31.3086s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_185, [-inf,inf]=>[-1.4747692137020578,0.2884456088139167] (9,-1; 9,-1), time: 31.3566s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2694s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2636s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_154, [-inf,inf]=>[-1.088357069980483,0.38559680601560886] (9,-1; 9,-1), time: 30.4906s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4515s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2155s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_6, [-inf,inf]=>[-1.626781063902574,0.15007643332067752] (9,-1; 9,-1), time: 30.9393s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5463s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_178, [-inf,inf]=>[-0.9304588752533118,0.6596585870182627] (9,-1; 9,-1), time: 30.8525s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0529s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5384s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.0720s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6369s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.6348s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9023s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_193, [-inf,inf]=>[-0.8893238906030383,1.1107376946229048] (9,-1; 9,-1), time: 30.3655s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_151, [-inf,inf]=>[-1.5205629432270804,0.3488248933354062] (9,-1; 9,-1), time: 30.4214s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_155, [-inf,inf]=>[-0.7679976000811235,0.6892178755716939] (9,-1; 9,-1), time: 30.7815s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_119, [-inf,inf]=>[-1.4496521096562751,0.2322350698012672] (9,-1; 9,-1), time: 30.7354s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_187, [-inf,inf]=>[-1.4388707365670417,0.38344141306259094] (9,-1; 9,-1), time: 30.8255s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_138, [-inf,inf]=>[-1.9258829739474241,0.3584959818217868] (9,-1; 9,-1), time: 30.6889s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_59, [-inf,inf]=>[-1.007964399939809,0.797295456374813] (9,-1; 9,-1), time: 30.0254s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_199, [-inf,inf]=>[-0.835709204345092,0.7170473407609909] (9,-1; 9,-1), time: 30.4880s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_106, [-inf,inf]=>[-1.1316876128563003,0.5406550079960766] (9,-1; 9,-1), time: 30.9784s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_161, [-inf,inf]=>[-1.3689897803937099,0.39449300540737564] (9,-1; 9,-1), time: 30.5681s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_93, [-inf,inf]=>[-0.6649133926646712,0.8378368799520994] (9,-1; 9,-1), time: 30.2303s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5825s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_164, [-inf,inf]=>[-1.6829393465159799,0.12987215138336108] (9,-1; 9,-1), time: 30.8221s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9001s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4778s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5146s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4487s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_90, [-inf,inf]=>[-1.357678864189881,0.35114692284392834] (9,-1; 9,-1), time: 30.7891s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2992s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3376s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_73, [-inf,inf]=>[-0.9300186143785731,0.6964594712792967] (9,-1; 9,-1), time: 30.8463s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_40, [-inf,inf]=>[-1.2578531636197356,0.552712841517828] (9,-1; 9,-1), time: 30.1581s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7166s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4839s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5640s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_69, [-inf,inf]=>[-2.1208707518734577,0.1801150604491358] (9,-1; 9,-1), time: 30.8726s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_160, [-inf,inf]=>[-2.5984825258147635,0.11649540648254517] (9,-1; 9,-1), time: 30.5066s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_133, [-inf,inf]=>[-1.5534111590427875,0.23856899558750727] (9,-1; 9,-1), time: 30.2109s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_105, [-inf,inf]=>[-0.8895680872277537,0.47493196965024537] (9,-1; 9,-1), time: 30.8123s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_181, [-inf,inf]=>[-1.4763156384478615,0.23996763697997067] (9,-1; 9,-1), time: 30.6724s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_10, [-inf,inf]=>[-1.354462380378235,0.28542311685464095] (9,-1; 9,-1), time: 31.0814s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4638s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_140, [-inf,inf]=>[-0.1257284263958584,1.8571004646876992] (9,-1; 9,-1), time: 30.0917s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2825s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_5, [-inf,inf]=>[-1.1897343896138668,0.7878927144455925] (9,-1; 9,-1), time: 30.4282s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_127, [-inf,inf]=>[-0.7918686475630851,0.6955123336858746] (9,-1; 9,-1), time: 30.3171s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_3, [-inf,inf]=>[-2.4535838619094217,0.02424813635452067] (9,-1; 9,-1), time: 30.0481s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_66, [-inf,inf]=>[-1.8101684994516436,0.011713809104908622] (9,-1; 9,-1), time: 30.4514s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4171s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2987s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5579s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_184, [-inf,inf]=>[-1.285052621592185,0.36286180064840545] (9,-1; 9,-1), time: 30.5092s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_35, [-inf,inf]=>[-1.6808368714967832,0.33365520794183845] (9,-1; 9,-1), time: 30.5109s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6000s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_58, [-inf,inf]=>[-0.8213198180826686,1.836795843245666] (9,-1; 9,-1), time: 30.9408s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1927s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_61, [-inf,inf]=>[-0.5665705507768954,1.1044456795689697] (9,-1; 9,-1), time: 30.3491s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_141, [-inf,inf]=>[-1.377770601478661,0.26329406482013906] (9,-1; 9,-1), time: 30.9542s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5771s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_163, [-inf,inf]=>[-1.3410465350731011,0.076669857390921] (9,-1; 9,-1), time: 31.0883s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_157, [-inf,inf]=>[-1.1415587963950027,0.5444936122331816] (9,-1; 9,-1), time: 30.5742s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_169, [-inf,inf]=>[-1.0282031664415805,0.3842932582378038] (9,-1; 9,-1), time: 30.5966s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_26, [-inf,inf]=>[-2.132377850731256,0.06152308256676208] (9,-1; 9,-1), time: 31.3261s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_9, [-inf,inf]=>[-1.5590201100973713,0.1785589841967633] (9,-1; 9,-1), time: 30.9474s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_1, [-inf,inf]=>[-1.1448609636172666,0.7018851595587278] (9,-1; 9,-1), time: 30.5627s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_62, [-inf,inf]=>[-0.8072225665128913,0.6813491879331226] (9,-1; 9,-1), time: 30.4208s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_197, [-inf,inf]=>[-0.960492591815836,0.676871030251584] (9,-1; 9,-1), time: 30.4000s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8482s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_72, [-inf,inf]=>[-1.1932617847659963,0.8726519477303827] (9,-1; 9,-1), time: 30.9040s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_71, [-inf,inf]=>[-1.5674275740984562,0.14305862949683013] (9,-1; 9,-1), time: 30.2771s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_89, [-inf,inf]=>[-1.3484725248371954,0.5197322803433424] (9,-1; 9,-1), time: 30.6330s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1640s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5055s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_120, [-inf,inf]=>[-0.46461266977674487,0.9351346511277091] (9,-1; 9,-1), time: 30.6802s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_109, [-inf,inf]=>[-0.7535187634139012,0.6706888986392368] (9,-1; 9,-1), time: 30.6102s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_49, [-inf,inf]=>[-0.8252173405069397,0.4600509905921116] (9,-1; 9,-1), time: 30.6945s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_75, [-inf,inf]=>[-1.2831700126908991,0.6137836127380935] (9,-1; 9,-1), time: 30.2241s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_11, [-inf,inf]=>[-0.7474727095041523,0.8837434642460926] (9,-1; 9,-1), time: 30.0167s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5684s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_175, [-inf,inf]=>[-0.6234656116675555,1.1209064048847432] (9,-1; 9,-1), time: 30.7302s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.7881s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1195s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_114, [-inf,inf]=>[-1.860370613414206,0.15119279828569107] (9,-1; 9,-1), time: 30.5583s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_68, [-inf,inf]=>[-0.8966504679192808,0.49290750874064126] (9,-1; 9,-1), time: 30.6661s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1283s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_103, [-inf,inf]=>[-1.7588732845483421,0.20183048652446087] (9,-1; 9,-1), time: 30.5397s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_38, [-inf,inf]=>[-0.8555146031620376,0.5311474803565481] (9,-1; 9,-1), time: 30.7784s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_48, [-inf,inf]=>[-1.1246650194694885,0.3136536534764067] (9,-1; 9,-1), time: 30.1041s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_149, [-inf,inf]=>[-1.7634203171763756,0.1687629742875103] (9,-1; 9,-1), time: 30.3585s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_150, [-inf,inf]=>[-1.0604377667119862,0.37350961657124143] (9,-1; 9,-1), time: 30.0198s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8111s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_110, [-inf,inf]=>[-1.589744059409102,0.22965573487092772] (9,-1; 9,-1), time: 31.4705s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_145, [-inf,inf]=>[-1.2916047785023268,0.28827822274757786] (9,-1; 9,-1), time: 30.5970s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_25, [-inf,inf]=>[-1.0780609355311372,0.49392035053015804] (9,-1; 9,-1), time: 30.2087s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4666s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_4, [-inf,inf]=>[-0.888425004630423,1.1069172383127812] (9,-1; 9,-1), time: 30.7340s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9611s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_86, [-inf,inf]=>[-0.5518798070103896,0.7727813028384757] (9,-1; 9,-1), time: 30.7557s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2084s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4788s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.3508s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6100s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_100, [-inf,inf]=>[1e-05,3.5725831073833123] (15,-1; 9,-1), time: 17.9045s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_165, [-inf,inf]=>[-1.2699466985198182,0.3577956219071825] (9,-1; 9,-1), time: 30.6292s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2960s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_81, [-inf,inf]=>[-1.3037475319547902,0.3651506102167223] (9,-1; 9,-1), time: 30.1147s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.9326s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4242s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2127s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3230s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.9166s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_192, [-inf,inf]=>[-1.1451838160236611,0.43695714538194363] (9,-1; 9,-1), time: 31.3199s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_64, [-inf,inf]=>[-1.0864310357986358,0.5281478640920512] (9,-1; 9,-1), time: 30.4067s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1857s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_196, [-inf,inf]=>[-0.45987249185510026,1.1748210268233983] (9,-1; 9,-1), time: 30.3963s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_55, [-inf,inf]=>[-1.1660167103396357,0.58018867794209] (9,-1; 9,-1), time: 30.5457s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6771s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_33, [-inf,inf]=>[-1.5273191258762622,0.10115627851379237] (9,-1; 9,-1), time: 30.6735s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_43, [-inf,inf]=>[-1.4675316635914695,0.3046632322554187] (9,-1; 9,-1), time: 30.7580s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_128, [-inf,inf]=>[-1.0477212591875351,0.5653919696516999] (9,-1; 9,-1), time: 30.6195s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9311s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_176, [-inf,inf]=>[-1.6809611264407274,0.47190780138626615] (9,-1; 9,-1), time: 30.7522s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_137, [-inf,inf]=>[-0.8903938120284816,0.72066773964958] (9,-1; 9,-1), time: 30.9794s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3402s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_186, [-inf,inf]=>[-0.3710896108144161,1.3509367378160626] (9,-1; 9,-1), time: 30.5251s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1489s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_16, [-inf,inf]=>[-1.6996378530831422,0.15620867160382929] (9,-1; 9,-1), time: 30.7628s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_159, [-inf,inf]=>[-1.003638715139683,0.8985097491828291] (9,-1; 9,-1), time: 30.3545s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_171, [-inf,inf]=>[-1.4294011681639938,0.42518537483725743] (9,-1; 9,-1), time: 30.9496s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_104, [-inf,inf]=>[-1.2048070883417488,0.5686500754483321] (9,-1; 9,-1), time: 30.5769s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8507s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_129, [-inf,inf]=>[-0.13932079790557522,1.6695478214777384] (9,-1; 9,-1), time: 30.2329s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9179s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_134, [-inf,inf]=>[-0.8692277265346974,0.7045812733189408] (9,-1; 9,-1), time: 30.5991s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3548s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0342s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_65, [-inf,inf]=>[-0.2027319613122047,1.5981779326504844] (9,-1; 9,-1), time: 31.0663s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_123, [-inf,inf]=>[-0.07637052920953821,1.8059099393417952] (9,-1; 9,-1), time: 30.4297s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_30, [-inf,inf]=>[-0.46383832695158234,1.1359368781388948] (9,-1; 9,-1), time: 31.4189s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_146, [-inf,inf]=>[-1.4410765944118662,0.14316665752858942] (9,-1; 9,-1), time: 30.8990s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3949s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_132, [-inf,inf]=>[-0.8740252342307508,0.8036857288820846] (9,-1; 9,-1), time: 30.4166s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_24, [-inf,inf]=>[-1.236919612800991,0.41536397569536715] (9,-1; 9,-1), time: 30.4976s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_7, [-inf,inf]=>[-0.8900591330941362,0.4006262890936392] (9,-1; 9,-1), time: 31.2698s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7164s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_173, [-inf,inf]=>[-0.0993552297743737,1.7878138471885399] (9,-1; 9,-1), time: 30.5686s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_152, [-inf,inf]=>[-2.1002765775208,0.23844608746855225] (9,-1; 9,-1), time: 30.6880s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7075s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_97, [-inf,inf]=>[-1.7577757564006846,0.3611219892284963] (9,-1; 9,-1), time: 30.5619s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_139, [-inf,inf]=>[-1.031340890509549,0.41509582326213224] (9,-1; 9,-1), time: 31.0260s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_8, [-inf,inf]=>[-0.8495558730438173,0.95334629632999] (9,-1; 9,-1), time: 30.5596s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_51, [-inf,inf]=>[-1.4664009925212986,0.06222359444410801] (9,-1; 9,-1), time: 30.8135s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_124, [-inf,inf]=>[-0.5312391008419407,1.0782041855392304] (9,-1; 9,-1), time: 30.7241s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_31, [-inf,inf]=>[-1.951274790359633,0.09318043539554768] (9,-1; 9,-1), time: 30.4148s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_131, [-inf,inf]=>[-0.48898691027235175,0.969126359674451] (9,-1; 9,-1), time: 30.4249s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_130, [-inf,inf]=>[1e-05,4.452593317919058] (15,-1; 9,-1), time: 17.7033s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_60, [-inf,inf]=>[-1.530973083935425,0.2514778400560097] (9,-1; 9,-1), time: 30.7060s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_156, [-inf,inf]=>[1e-05,4.424539355500281] (15,-1; 9,-1), time: 18.0426s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_80, [-inf,inf]=>[1e-05,3.306714107369371] (15,-1; 9,-1), time: 17.7400s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_83, [-inf,inf]=>[1e-05,2.4994604045996947] (15,-1; 9,-1), time: 17.5648s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_21, [-inf,inf]=>[-0.05091247260307538,1.7971080966225292] (9,-1; 9,-1), time: 30.5169s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5246s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_13, [-inf,inf]=>[1e-05,2.3983650125861122] (15,-1; 9,-1), time: 21.3836s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5010s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_94, [-inf,inf]=>[1e-05,2.3781621039030107] (15,-1; 9,-1), time: 18.9022s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_36, [-inf,inf]=>[-1.1478101767476572,0.8174043632296438] (9,-1; 9,-1), time: 30.5890s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_96, [-inf,inf]=>[-1.458269223157345,0.04377062225571088] (9,-1; 9,-1), time: 30.5600s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_22, [-inf,inf]=>[-1.3595116591312522,0.3227945902221039] (9,-1; 9,-1), time: 30.7158s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5952s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_167, [-inf,inf]=>[1e-05,1.6384437429860852] (15,-1; 9,-1), time: 17.5320s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_189, [-inf,inf]=>[-1.035638991694092,0.6235194981371602] (9,-1; 9,-1), time: 31.2901s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_76, [-inf,inf]=>[-1.02067802770214,0.5421516748467692] (9,-1; 9,-1), time: 31.0259s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_198, [-inf,inf]=>[-1.5881198913528967,0.16179935102892912] (9,-1; 9,-1), time: 31.1435s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_172, [-inf,inf]=>[1e-05,2.0745906352420427] (15,-1; 9,-1), time: 16.9278s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_183, [-inf,inf]=>[-1.198962665233097,0.27797776120690165] (9,-1; 9,-1), time: 30.4240s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_14, [-inf,inf]=>[-1.330940263389692,0.44280153569076236] (9,-1; 9,-1), time: 31.0716s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_182, [-inf,inf]=>[-2.069681044755159,0.08830450249487581] (9,-1; 9,-1), time: 31.0352s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_174, [-inf,inf]=>[-1.9072000001918956,0.016719171507125978] (9,-1; 9,-1), time: 30.5283s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_191, [-inf,inf]=>[-1.8737210687240198,0.023952682966365435] (9,-1; 9,-1), time: 30.1626s, #vars: 3197, #constrs: 2818, improved: True
Solving MIP for lay16_70, [-inf,inf]=>[-1.635384264537497,0.34353391481180956] (9,-1; 9,-1), time: 30.2115s, #vars: 3197, #constrs: 2818, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 6 has unstable to stable neurons: [(174, -1), (197, -1), (7, -1), (11, -1), (126, -1), (82, -1), (129, -1), (69, -1), (21, -1), (145, -1), (134, -1), (136, -1), (47, -1), (153, -1), (58, -1), (10, -1), (184, -1), (149, -1), (23, -1), (97, -1), (61, -1), (154, -1), (125, -1), (118, -1), (178, -1), (114, -1), (179, -1), (144, -1), (113, -1), (173, -1), (66, -1), (181, -1), (56, -1), (186, -1), (195, -1), (135, -1), (111, -1), (183, -1), (141, -1), (48, -1), (161, 1), (123, 1), (6, -1), (43, -1), (157, -1), (32, -1), (124, -1), (190, -1), (65, -1), (71, -1), (14, -1), (94, 1), (29, -1), (63, -1), (76, 1), (158, -1), (103, -1), (104, -1), (139, 1), (162, -1), (93, 1), (142, -1), (168, -1), (172, -1), (95, -1), (73, -1), (180, -1), (83, 1), (185, -1), (143, 1), (68, -1), (122, 1), (188, 1), (78, 1), (38, -1), (115, 1), (33, -1), (24, -1), (117, -1), (196, 1), (79, -1), (164, -1), (109, -1), (50, -1), (152, -1), (67, 1), (35, -1), (198, -1), (20, -1), (169, -1), (9, -1), (46, -1), (132, -1), (42, -1), (18, -1), (131, -1), (44, -1), (60, -1), (187, -1), (2, -1), (91, -1), (191, -1), (189, -1), (182, -1), (112, -1)]
best_l after optimization: 8.086084365844727
beta sum per layer: []
alpha/beta optimization time: 14.976178407669067
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.43788576,  2.11048889,  0.01159191,  2.80421209,  0.96328497,
          0.16923189,  1.88585782,  0.33889771, -0.63536692]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 23701.99609375, ub improved 23667.439453125, time 280.4057
maximum relu layer improved by MIP so far 7
Linear(in_features=200, out_features=10, bias=True) 8 18 torch.Size([9, 1])
MIP finished with 1150.3632469177246s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
best_l after optimization: 10.44704818725586
beta sum per layer: []
alpha/beta optimization time: 12.690958499908447
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 0.59436035,  2.39304328,  0.27961731,  3.18792009,  1.28273296,
          0.38032746,  2.07647777,  0.60449934, -0.35193086]], device='cuda:0') None
Split layers:
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
refined global lb: tensor([[ 0.59436035],
        [ 2.39304328],
        [ 0.27961731],
        [ 3.18792009],
        [ 1.28273296],
        [ 0.38032746],
        [ 2.07647777],
        [ 0.60449934],
        [-0.35193086]], device='cuda:0') min: tensor(-0.35193086, device='cuda:0')
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200])]

Properties batch 0, size 1
Remaining timeout: 315.3613405227661
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.5943603515625.

Properties batch 1, size 1
Remaining timeout: 315.2328407764435
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.393043279647827.

Properties batch 2, size 1
Remaining timeout: 315.1653461456299
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.2796173095703125.

Properties batch 3, size 1
Remaining timeout: 315.10000681877136
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 3.187920093536377.

Properties batch 4, size 1
Remaining timeout: 315.03507828712463
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.2827329635620117.

Properties batch 5, size 1
Remaining timeout: 314.9694848060608
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.3803274631500244.

Properties batch 6, size 1
Remaining timeout: 314.9046652317047
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.0764777660369873.

Properties batch 7, size 1
Remaining timeout: 314.83993554115295
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.604499340057373.

Properties batch 8, size 1
Remaining timeout: 314.7756848335266
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.35193086]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundParams(name=/9, inputs=[])
  (/10): BoundParams(name=/10, inputs=[])
  (/11): BoundParams(name=/11, inputs=[])
  (/12): BoundParams(name=/12, inputs=[])
  (/13): BoundParams(name=/13, inputs=[])
  (/14): BoundParams(name=/14, inputs=[])
  (/15): BoundParams(name=/15, inputs=[])
  (/16): BoundParams(name=/16, inputs=[])
  (/17): BoundParams(name=/17, inputs=[])
  (/18): BoundParams(name=/18, inputs=[])
  (/19): BoundShape(name=/19, inputs=[/0])
  (/20): BoundConstant(name=/20, inputs=[])
  (/21): BoundGather(name=/21, inputs=[/19, /20])
  (/22): BoundConstant(name=/22, inputs=[])
  (/23): BoundUnsqueeze(name=/23, inputs=[/21])
  (/24): BoundUnsqueeze(name=/24, inputs=[/22])
  (/25): BoundConcat(name=/25, inputs=[/23, /24])
  (/26): BoundReshape(name=/26, inputs=[/0, /25])
  (/input): BoundLinear(name=/input, inputs=[/26, /1, /2])
  (/28): BoundRelu(name=/28, inputs=[/input])
  (/input.3): BoundLinear(name=/input.3, inputs=[/28, /3, /4])
  (/30): BoundRelu(name=/30, inputs=[/input.3])
  (/input.7): BoundLinear(name=/input.7, inputs=[/30, /5, /6])
  (/32): BoundRelu(name=/32, inputs=[/input.7])
  (/input.11): BoundLinear(name=/input.11, inputs=[/32, /7, /8])
  (/34): BoundRelu(name=/34, inputs=[/input.11])
  (/input.15): BoundLinear(name=/input.15, inputs=[/34, /9, /10])
  (/36): BoundRelu(name=/36, inputs=[/input.15])
  (/input.19): BoundLinear(name=/input.19, inputs=[/36, /11, /12])
  (/38): BoundRelu(name=/38, inputs=[/input.19])
  (/input.23): BoundLinear(name=/input.23, inputs=[/38, /13, /14])
  (/40): BoundRelu(name=/40, inputs=[/input.23])
  (/input.27): BoundLinear(name=/input.27, inputs=[/40, /15, /16])
  (/42): BoundRelu(name=/42, inputs=[/input.27])
  (/43): BoundLinear(name=/43, inputs=[/42, /17, /18])
)
Model prediction is: tensor([-0.92123216, -2.21978331,  0.80034167, -3.92385435,  7.73549032,
        -1.33190608,  0.63018936, -0.44093281, -0.48657060,  1.78281879],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /28 start_node /43 with alignment adjustment
setting alpha for layer /30 start_node /43 with alignment adjustment
setting alpha for layer /32 start_node /43 with alignment adjustment
setting alpha for layer /34 start_node /43 with alignment adjustment
setting alpha for layer /36 start_node /43 with alignment adjustment
setting alpha for layer /38 start_node /43 with alignment adjustment
setting alpha for layer /40 start_node /43 with alignment adjustment
setting alpha for layer /42 start_node /43 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.35193086]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.27,/input.15,/input.23,/input.11,/input,/input.19,/43
Split layers:
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
Keeping slopes for these layers: ['/43']
Keeping slopes for these layers: ['/43']
Node /28 input 0: size torch.Size([200]) unstable 52
Node /30 input 0: size torch.Size([200]) unstable 39
Node /32 input 0: size torch.Size([200]) unstable 36
Node /34 input 0: size torch.Size([200]) unstable 61
Node /36 input 0: size torch.Size([200]) unstable 51
Node /38 input 0: size torch.Size([200]) unstable 72
Node /40 input 0: size torch.Size([200]) unstable 95
Node /42 input 0: size torch.Size([200]) unstable 124
-----------------
# of unstable neurons: 530
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.27, 5] 
split level 1: [/input.27, 72] 
split level 2: [/input.27, 4] 
split level 3: [/input.27, 84] 
split level 4: [/input.27, 177] 
split level 5: [/input.27, 15] 
pruning_in_iteration open status: False
ratio of positive domain = 3 / 64 = 0.046875
pruning-in-iteration extra time: 0.0002269744873046875
Time: prepare 0.0182    beta_bound 0.7747    bound 0.7748    transfer 0.0007    finalize 0.0110    func 0.8051    
Accumulated time: func 0.8051    prepare 0.0194    bound 0.7748    beta_bound 0.7747    transfer 0.0007    finalize 0.0110    
batch bounding time:  0.8052749633789062
Current worst splitting domains lb-rhs (depth):
-0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), -0.35193 (6), 
length of domains: 61
Time: pickout 0.0019    decision 0.2649    set_bounds 0.0033    solve 0.8053    add 0.0038    
Accumulated time: pickout 0.0019    decision 0.2649    set_bounds 0.0033    solve 0.8053    add 0.0038    
Current (lb-rhs): -0.3519308567047119
61 domains visited
Cumulative time: 1.1353111267089844

BaB round 2
batch: 61
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.27, 175] [/input.27, 175] [/input.27, 175] [/input.27, 175] [/input.27, 175] [/input.27, 175] [/input.27, 175] [/input.27, 17] [/input.27, 175] [/input.27, 175] 
pruning_in_iteration open status: True
ratio of positive domain = 81 / 122 = 0.6639344262295082
pruning-in-iteration extra time: 0.016684770584106445
Time: prepare 0.0410    beta_bound 0.6077    bound 0.6078    transfer 0.0008    finalize 0.0181    func 0.6677    
Accumulated time: func 1.4728    prepare 0.0611    bound 1.3826    beta_bound 1.3824    transfer 0.0015    finalize 0.0291    
batch bounding time:  0.6678838729858398
Current worst splitting domains lb-rhs (depth):
-0.35193 (7), -0.35193 (7), -0.35193 (7), -0.35193 (7), -0.34049 (7), -0.33122 (7), -0.30952 (7), -0.30797 (7), -0.29643 (7), -0.29518 (7), -0.29103 (7), -0.27807 (7), -0.25770 (7), -0.25524 (7), -0.22452 (7), -0.20795 (7), -0.20661 (7), -0.20176 (7), -0.19996 (7), -0.19081 (7), 
length of domains: 41
Time: pickout 0.0026    decision 0.0638    set_bounds 0.0075    solve 0.6679    add 0.0022    
Accumulated time: pickout 0.0046    decision 0.3287    set_bounds 0.0108    solve 1.4732    add 0.0060    
Current (lb-rhs): -0.3519308567047119
102 domains visited
Cumulative time: 1.8811142444610596

BaB round 3
batch: 41
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.27, 17] [/input.27, 17] [/input.27, 151] [/input.27, 151] [/input.27, 151] [/input.27, 17] [/input.27, 151] [/input.27, 17] [/input.27, 17] [/input.27, 151] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 82 = 0.7926829268292683
pruning-in-iteration extra time: 0.016297340393066406
Time: prepare 0.0202    beta_bound 0.6257    bound 0.6258    transfer 0.0008    finalize 0.0127    func 0.6595    
Accumulated time: func 2.1323    prepare 0.0819    bound 2.0084    beta_bound 2.0081    transfer 0.0023    finalize 0.0418    
batch bounding time:  0.65962815284729
Current worst splitting domains lb-rhs (depth):
-0.17328 (8), -0.11093 (8), -0.09948 (8), -0.08142 (8), -0.08132 (8), -0.07660 (8), -0.06534 (8), -0.05966 (8), -0.05791 (8), -0.04181 (8), -0.03751 (8), -0.03614 (8), -0.03605 (8), -0.02287 (8), -0.01406 (8), -0.01303 (8), -0.01019 (8), 
length of domains: 17
Time: pickout 0.0017    decision 0.0395    set_bounds 0.0032    solve 0.6596    add 0.0017    
Accumulated time: pickout 0.0063    decision 0.3682    set_bounds 0.0139    solve 2.1329    add 0.0077    
Current (lb-rhs): -0.17327880859375
119 domains visited
Cumulative time: 2.588407039642334

BaB round 4
batch: 17
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.27, 151] [/input.27, 175] [/input.27, 151] [/input.27, 175] [/input.27, 175] [/input.27, 175] [/input.27, 175] [/input.27, 151] [/input.27, 175] [/input.27, 175] 
split level 1: [/input, 22] [/input, 22] [/input, 22] [/input, 22] [/input, 22] [/input.27, 17] [/input, 22] [/input.27, 1] [/input, 22] [/input, 22] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 68 / 68 = 1.0
pruning-in-iteration extra time: 9.012222290039062e-05
Time: prepare 0.0175    beta_bound 0.0131    bound 0.0132    transfer 0.0004    finalize 0.0113    func 0.0424    
Accumulated time: func 2.1747    prepare 0.0999    bound 2.0216    beta_bound 2.0212    transfer 0.0027    finalize 0.0531    
batch bounding time:  0.042526960372924805
length of domains: 0
Time: pickout 0.0016    decision 0.0385    set_bounds 0.0034    solve 0.0425    add 0.0002    
Accumulated time: pickout 0.0079    decision 0.4067    set_bounds 0.0173    solve 2.1754    add 0.0078    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
119 domains visited
Cumulative time: 2.6760823726654053

Result: safe in 1188.0521 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):1188.0402684162855, max time: 1188.0521488189697
mean time for verified SAFE instances(total 1): 1188.0521488189697, max time: 1188.0521488189697
safe (total 1), index: [0]
