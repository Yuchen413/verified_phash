Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_200
  path: mnist_9_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 29
  end: 30
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 1500
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 15:20:15 2023 on zeratul
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=200, bias=True)
  (12): ReLU()
  (13): Linear(in_features=200, out_features=200, bias=True)
  (14): ReLU()
  (15): Linear(in_features=200, out_features=200, bias=True)
  (16): ReLU()
  (17): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226457)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_200]_start=29_end=30_iter=20_b=1024_timeout=1500_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundParams(name=/9, inputs=[])
  (/10): BoundParams(name=/10, inputs=[])
  (/11): BoundParams(name=/11, inputs=[])
  (/12): BoundParams(name=/12, inputs=[])
  (/13): BoundParams(name=/13, inputs=[])
  (/14): BoundParams(name=/14, inputs=[])
  (/15): BoundParams(name=/15, inputs=[])
  (/16): BoundParams(name=/16, inputs=[])
  (/17): BoundParams(name=/17, inputs=[])
  (/18): BoundParams(name=/18, inputs=[])
  (/19): BoundShape(name=/19, inputs=[/0])
  (/20): BoundConstant(name=/20, inputs=[])
  (/21): BoundGather(name=/21, inputs=[/19, /20])
  (/22): BoundConstant(name=/22, inputs=[])
  (/23): BoundUnsqueeze(name=/23, inputs=[/21])
  (/24): BoundUnsqueeze(name=/24, inputs=[/22])
  (/25): BoundConcat(name=/25, inputs=[/23, /24])
  (/26): BoundReshape(name=/26, inputs=[/0, /25])
  (/input): BoundLinear(name=/input, inputs=[/26, /1, /2])
  (/28): BoundRelu(name=/28, inputs=[/input])
  (/input.3): BoundLinear(name=/input.3, inputs=[/28, /3, /4])
  (/30): BoundRelu(name=/30, inputs=[/input.3])
  (/input.7): BoundLinear(name=/input.7, inputs=[/30, /5, /6])
  (/32): BoundRelu(name=/32, inputs=[/input.7])
  (/input.11): BoundLinear(name=/input.11, inputs=[/32, /7, /8])
  (/34): BoundRelu(name=/34, inputs=[/input.11])
  (/input.15): BoundLinear(name=/input.15, inputs=[/34, /9, /10])
  (/36): BoundRelu(name=/36, inputs=[/input.15])
  (/input.19): BoundLinear(name=/input.19, inputs=[/36, /11, /12])
  (/38): BoundRelu(name=/38, inputs=[/input.19])
  (/input.23): BoundLinear(name=/input.23, inputs=[/38, /13, /14])
  (/40): BoundRelu(name=/40, inputs=[/input.23])
  (/input.27): BoundLinear(name=/input.27, inputs=[/40, /15, /16])
  (/42): BoundRelu(name=/42, inputs=[/input.27])
  (/43): BoundLinear(name=/43, inputs=[/42, /17, /18])
)
Model prediction is: tensor([[-2.16338587,  5.30384159, -1.20036483, -1.64464474, -1.12465811,
         -0.42532018, -0.87205619,  0.64180905, -0.16331565, -0.73634005]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [54]; unstable size 54; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 89 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 127 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [89]; unstable size 89; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 127 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [127]; unstable size 127; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 187; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1580.42041016, -2390.69702148, -2224.83496094, -2375.12768555,
         -2344.69653320, -2217.63549805, -2045.18115234, -2443.73046875,
         -2620.33105469]], device='cuda:0') None
best_l after optimization: -13277.23046875
alpha/beta optimization time: 14.524753332138062
initial alpha-CROWN bounds: tensor([[-1039.54113770, -1594.15795898, -1478.18164062, -1562.81079102,
         -1585.20898438, -1481.22705078, -1257.20410156, -1581.47277832,
         -1697.42614746]], device='cuda:0')
Worst class: (+ rhs) -1697.4261474609375
Split layers:
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.16338587,  5.30384159, -1.20036483, -1.64464474, -1.12465811,
         -0.42532018, -0.87205619,  0.64180905, -0.16331565, -0.73634005]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.87137818,  4.45604897, -1.00063682, -1.39739656, -0.94871616,
          -0.27915666, -0.75021571,  0.53442430, -0.02167797, -0.57753003],
         [-1.87137818,  4.45604897, -1.00063682, -1.39739656, -0.94871616,
          -0.27915666, -0.75021571,  0.53442430, -0.02167797, -0.57753003]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[6.32742691, 5.45668602, 5.85344553, 5.40476513, 4.73520565,
          5.20626450, 3.92162466, 4.47772694, 5.03357887]]], device='cuda:0')
number of violation:  0
Attack finished in 0.8941 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [54]; unstable size 54; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 89 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 127 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [89]; unstable size 89; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 127 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [127]; unstable size 127; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 187; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2024-02-29
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 1200.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_9', 'lay4_121', 'lay4_73', 'lay4_87', 'lay4_95', 'lay4_27', 'lay4_6', 'lay4_92', 'lay4_13', 'lay4_93', 'lay4_81', 'lay4_60', 'lay4_145', 'lay4_167', 'lay4_141', 'lay4_77', 'lay4_45', 'lay4_136', 'lay4_137', 'lay4_43', 'lay4_19', 'lay4_97', 'lay4_175', 'lay4_51', 'lay4_50', 'lay4_8', 'lay4_128', 'lay4_139', 'lay4_88', 'lay4_84', 'lay4_1', 'lay4_99', 'lay4_124', 'lay4_178', 'lay4_138', 'lay4_30', 'lay4_184', 'lay4_168', 'lay4_115', 'lay4_42', 'lay4_116', 'lay4_39', 'lay4_194', 'lay4_173', 'lay4_192', 'lay4_183', 'lay4_120', 'lay4_15', 'lay4_90', 'lay4_5', 'lay4_53', 'lay4_165', 'lay4_3', 'lay4_114', 'lay4_172', 'lay4_98', 'lay4_199', 'lay4_37', 'lay4_133', 'lay4_123', 'lay4_64', 'lay4_20', 'lay4_134', 'lay4_171', 'lay4_154', 'lay4_57', 'lay4_122', 'lay4_75', 'lay4_35', 'lay4_65', 'lay4_26', 'lay4_197', 'lay4_25', 'lay4_186', 'lay4_103', 'lay4_112', 'lay4_58', 'lay4_28', 'lay4_91', 'lay4_54', 'lay4_18', 'lay4_33', 'lay4_162', 'lay4_166', 'lay4_70', 'lay4_153'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/Verifier_Development/complete_verifier/data_utils.py:257: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7713s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7510s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7839s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_27, [-inf,inf]=>[1e-05,0.7459145455323938] (15,-1; 2,-1), time: 5.8372s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.6319620606990809,0.06227725013007369] (2,-1; 2,-1), time: 5.8723s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_141, [-inf,inf]=>[-0.555952959227405,0.06884021910895982] (2,-1; 2,-1), time: 6.1652s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-0.043988372537498516,0.7757135432325036] (2,-1; 2,-1), time: 6.2193s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.2661835479753408,0.3518768736240824] (2,-1; 2,-1), time: 7.2167s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_73, [-inf,inf]=>[-0.3780663790181703,0.28580824624834156] (2,-1; 2,-1), time: 7.8264s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6258s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-0.15451243798553574,0.3742027827979972] (2,-1; 2,-1), time: 7.9621s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_81, [-inf,inf]=>[-0.4707430001568571,0.026353424025239578] (2,-1; 2,-1), time: 8.4650s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-0.5107990265568708,0.12933199812419402] (2,-1; 2,-1), time: 8.5470s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7821s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_167, [-inf,inf]=>[-0.5004409858359824,0.051869970870324716] (2,-1; 2,-1), time: 8.8397s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-0.0490837672088773,0.5088614851070649] (2,-1; 2,-1), time: 9.5257s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[-0.44437092591593097,0.08027021073721004] (2,-1; 2,-1), time: 9.5377s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9655s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_121, [-inf,inf]=>[-0.339463315030439,0.25843007504824367] (2,-1; 2,-1), time: 9.9541s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_175, [-inf,inf]=>[1e-05,0.8849737518495977] (15,-1; 2,-1), time: 3.9564s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-0.6229778580242591,0.01763780272769957] (2,-1; 2,-1), time: 6.9520s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7089s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-0.39818154295176067,0.06495285494340443] (2,-1; 2,-1), time: 10.5913s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_97, [-inf,inf]=>[1e-05,0.9157496251407905] (15,-1; 2,-1), time: 4.4560s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1905s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4133s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.1102s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5606s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_60, [-inf,inf]=>[-0.4125144543214833,0.11345827659097502] (2,-1; 2,-1), time: 12.5736s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.9009s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4145s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-0.24663034905727854,0.33677988089521327] (2,-1; 2,-1), time: 8.3274s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.7913s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_42, [-inf,inf]=>[1e-05,0.9558036488311855] (15,-1; 2,-1), time: 3.9135s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_124, [-inf,inf]=>[-0.10417670404997066,0.6502865479319506] (2,-1; 2,-1), time: 5.2668s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_19, [-inf,inf]=>[-0.5705577993318811,0.06226437709209684] (2,-1; 2,-1), time: 9.0998s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.1845564491893376,0.3675770091778945] (2,-1; 2,-1), time: 7.2497s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4564s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3923s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-0.5932315286240365,0.037712558157335985] (2,-1; 2,-1), time: 8.1117s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[-0.319201151406141,0.39864247556706767] (2,-1; 2,-1), time: 6.9197s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.3482086676580128,0.45104804454385183] (2,-1; 2,-1), time: 7.0678s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4958s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.8005s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3551s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_192, [-inf,inf]=>[-0.5608711570776167,0.04956978324653924] (2,-1; 2,-1), time: 5.9570s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_50, [-inf,inf]=>[-0.08827438308440412,0.456657574256996] (2,-1; 2,-1), time: 10.7441s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4952s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4923s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4837s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.5860622986174632,0.016355810350067293] (2,-1; 2,-1), time: 9.3264s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_90, [-inf,inf]=>[1e-05,0.6585988522070607] (15,-1; 2,-1), time: 6.1419s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4843s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_37, [-inf,inf]=>[1e-05,0.8993064154045313] (15,-1; 2,-1), time: 2.6843s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[-0.43693929678972965,0.06353508424249885] (2,-1; 2,-1), time: 10.5419s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_116, [-inf,inf]=>[-0.431298756579826,0.02231122500329516] (2,-1; 2,-1), time: 10.0688s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_183, [-inf,inf]=>[-0.002220354322910717,0.5553214173375365] (2,-1; 2,-1), time: 7.3774s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5625s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4529s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_120, [-inf,inf]=>[-0.24677346040180137,0.37261524802947743] (2,-1; 2,-1), time: 7.3742s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9566s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-0.3626826635880096,0.24222309587204732] (2,-1; 2,-1), time: 7.3688s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4511s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4207s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[1e-05,0.8773129295812724] (15,-1; 2,-1), time: 3.0189s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_123, [-inf,inf]=>[-0.11883765745560962,0.37862460560409567] (2,-1; 2,-1), time: 6.0871s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_15, [-inf,inf]=>[-0.43922523658146484,0.03185895378927697] (2,-1; 2,-1), time: 11.4596s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_172, [-inf,inf]=>[1e-05,0.5189997114459652] (15,-1; 2,-1), time: 10.6808s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_64, [-inf,inf]=>[-0.31944386870640595,0.291351482236874] (2,-1; 2,-1), time: 8.4707s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_18, [-inf,inf]=>[1e-05,0.709298820784929] (15,-1; 2,-1), time: 3.5547s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_171, [-inf,inf]=>[1e-05,0.570412574837573] (15,-1; 2,-1), time: 8.6492s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.5652926307980469,0.0028629150669195053] (2,-1; 2,-1), time: 6.5812s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_114, [-inf,inf]=>[-0.1490166813824405,0.3061662416898252] (2,-1; 2,-1), time: 12.9083s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-0.40086254139476035,0.19173887763804784] (2,-1; 2,-1), time: 6.6504s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[0.0005051436023066086,0.646143504212042] (2,-1; 2,-1), time: 8.0625s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_186, [-inf,inf]=>[-0.6009566271786412,0.0018757783888790015] (2,-1; 2,-1), time: 7.5431s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_57, [-inf,inf]=>[-0.48886498393346073,0.043639640723222295] (2,-1; 2,-1), time: 9.0634s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_166, [-inf,inf]=>[1e-05,0.7532757315270597] (15,-1; 2,-1), time: 3.1244s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.1481s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_35, [-inf,inf]=>[-0.295840102364168,0.17864844519116857] (2,-1; 2,-1), time: 9.4417s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[1e-05,0.8004213937746226] (15,-1; 2,-1), time: 4.5260s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-0.5112445670120116,0.014844659569014908] (2,-1; 2,-1), time: 9.4052s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-0.7092869000633703,0.12659608496363317] (2,-1; 2,-1), time: 6.4434s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-0.6933712658744371,0.0778587618068713] (2,-1; 2,-1), time: 4.4221s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_153, [-inf,inf]=>[-0.4172450320405586,0.38564967970955055] (2,-1; 2,-1), time: 6.2394s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_20, [-inf,inf]=>[-0.2368358921602922,0.2976763819918069] (2,-1; 2,-1), time: 17.4160s, #vars: 1293, #constrs: 562, improved: True
PGD done for relu layer 2
MIP improved 86 nodes out of 86 unstable nodes, lb improved 13.453923225402832, ub improved 15.386375427246094, time 38.5945
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_159', 'lay6_8', 'lay6_34', 'lay6_61', 'lay6_10', 'lay6_190', 'lay6_124', 'lay6_18', 'lay6_189', 'lay6_35', 'lay6_133', 'lay6_172', 'lay6_62', 'lay6_36', 'lay6_123', 'lay6_75', 'lay6_179', 'lay6_106', 'lay6_111', 'lay6_192', 'lay6_30', 'lay6_90', 'lay6_154', 'lay6_167', 'lay6_49', 'lay6_132', 'lay6_88', 'lay6_145', 'lay6_72', 'lay6_21', 'lay6_100', 'lay6_96', 'lay6_31', 'lay6_58', 'lay6_55', 'lay6_110', 'lay6_1', 'lay6_105', 'lay6_139', 'lay6_118', 'lay6_183', 'lay6_17', 'lay6_9', 'lay6_130', 'lay6_93', 'lay6_65', 'lay6_43', 'lay6_101', 'lay6_152', 'lay6_138', 'lay6_135', 'lay6_4', 'lay6_146', 'lay6_2', 'lay6_144', 'lay6_153', 'lay6_68', 'lay6_78', 'lay6_163', 'lay6_69', 'lay6_136', 'lay6_76', 'lay6_84', 'lay6_141', 'lay6_186', 'lay6_122', 'lay6_156', 'lay6_41', 'lay6_20', 'lay6_109', 'lay6_199', 'lay6_15', 'lay6_42', 'lay6_12', 'lay6_117', 'lay6_170', 'lay6_3', 'lay6_95', 'lay6_158', 'lay6_85', 'lay6_0', 'lay6_94', 'lay6_103', 'lay6_187', 'lay6_5', 'lay6_164', 'lay6_149', 'lay6_140', 'lay6_127', 'lay6_47', 'lay6_74', 'lay6_161', 'lay6_134', 'lay6_51', 'lay6_180', 'lay6_191', 'lay6_162', 'lay6_83', 'lay6_29', 'lay6_107', 'lay6_165', 'lay6_27', 'lay6_175', 'lay6_137', 'lay6_53', 'lay6_188', 'lay6_86', 'lay6_119', 'lay6_147', 'lay6_81', 'lay6_112', 'lay6_82', 'lay6_46', 'lay6_73', 'lay6_142', 'lay6_28', 'lay6_37', 'lay6_166'] filter: 1.0
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5781s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5813s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6088s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6874s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7641s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2379s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6661s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5761s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3550s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0194s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5037s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5941s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.0150s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.3935s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.8800s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.2814s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5607s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.0441s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6019s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7660s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6955s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5305s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5817s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6908s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.9578s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[1e-05,0.6316949930129576] (15,-1; 9,-1), time: 20.8712s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-0.5853815749972452,0.14714969501794467] (9,-1; 2,-1), time: 23.4831s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.41952156033429017,0.3781158247800968] (9,-1; 2,-1), time: 24.8566s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-0.5568290620380987,0.07878689471709642] (2,-1; 9,-1), time: 25.1044s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.44617260117724705,0.12582888082926277] (9,-1; 2,-1), time: 25.3347s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5972s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4633s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_31, [-inf,inf]=>[1e-05,0.8827211368544124] (15,-1; 9,-1), time: 15.7452s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4445s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[-0.5658048523859422,0.07444215215535457] (2,-1; 9,-1), time: 25.9832s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[-0.5509202809394382,0.12354443485757567] (9,-1; 9,-1), time: 30.3383s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[-0.1670649508734981,0.324071221490263] (9,-1; 9,-1), time: 30.5058s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5258s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5273s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_154, [-inf,inf]=>[-0.4331934372660907,0.08126543079155807] (9,-1; 9,-1), time: 30.3573s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_145, [-inf,inf]=>[-0.2629915381510701,0.2667359390195645] (9,-1; 9,-1), time: 30.0190s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.5280s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5925s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.4618204980626545,0.07737807555565443] (9,-1; 2,-1), time: 28.6155s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-0.43446470451930014,0.01396101940366804] (9,-1; 2,-1), time: 29.1330s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5450s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-0.2007913675906085,0.2521035280183044] (9,-1; 2,-1), time: 28.3748s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5505s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_152, [-inf,inf]=>[1e-05,0.9637646781522688] (15,-1; 9,-1), time: 15.5120s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4849s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3756s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5331s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-0.5017966213114103,0.002296886076942205] (9,-1; 9,-1), time: 30.0422s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5809s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_183, [-inf,inf]=>[-0.5179668914964375,0.0012992141178435803] (9,-1; 9,-1), time: 30.0432s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_17, [-inf,inf]=>[-0.07786695042933757,0.3970637816165215] (9,-1; 2,-1), time: 23.9440s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.20577256717705023,0.3112931250071818] (2,-1; 2,-1), time: 21.3906s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-0.30829372255043347,0.19858548981401813] (2,-1; 9,-1), time: 22.9070s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-0.3639275792463413,0.12795538778210314] (9,-1; 9,-1), time: 30.0702s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4856s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[-0.20120395011922346,0.3090633384787306] (9,-1; 9,-1), time: 30.0207s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_146, [-inf,inf]=>[-0.2984668061734324,0.177452972757412] (9,-1; 9,-1), time: 30.0155s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[-0.49213387426633304,0.08341492482970823] (9,-1; 9,-1), time: 30.0486s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_153, [-inf,inf]=>[-0.10225178052880084,0.43485346731879515] (9,-1; 9,-1), time: 30.1258s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9333s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-0.08332891668710452,0.45391361623611154] (9,-1; 9,-1), time: 30.0100s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-0.3231156136720767,0.20300191629206013] (9,-1; 9,-1), time: 30.0157s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4209s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-0.19279059811578322,0.2445202440368058] (9,-1; 9,-1), time: 30.0765s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6114s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[-0.405142862732043,0.1272012811964057] (9,-1; 9,-1), time: 30.1233s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4724s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5024s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-0.2683308505078687,0.41447378114422107] (9,-1; 9,-1), time: 30.0138s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_109, [-inf,inf]=>[-0.07240259804338381,0.469620326789187] (9,-1; 2,-1), time: 26.3435s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6137s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4849s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[-0.44951329888550806,0.017284419551904604] (2,-1; 9,-1), time: 28.2857s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4989s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_199, [-inf,inf]=>[-0.33931440567439164,0.15761196122319335] (9,-1; 9,-1), time: 30.0314s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4709s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4837s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-0.28437990925009937,0.31815194428897153] (9,-1; 9,-1), time: 30.5806s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[1e-05,0.7191391933903749] (15,-1; 9,-1), time: 15.6121s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5922s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_187, [-inf,inf]=>[1e-05,0.7653749659378142] (15,-1; 2,-1), time: 13.6999s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_158, [-inf,inf]=>[1e-05,0.7114034968898035] (15,-1; 9,-1), time: 15.6329s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.24168980833299497,0.19652022589452853] (9,-1; 9,-1), time: 30.0241s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-0.49787317142523424,0.0019550049815886053] (9,-1; 9,-1), time: 30.0148s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1639s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.5949s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5760s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-0.4798709072695432,0.03711465497096136] (9,-1; 9,-1), time: 30.0149s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.1019s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-0.1098039022106993,0.3476309568327479] (9,-1; 9,-1), time: 30.0298s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[1e-05,1.4565131065431844] (15,-1; 2,-1), time: 9.7689s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_161, [-inf,inf]=>[1e-05,0.6657769225290923] (15,-1; 9,-1), time: 16.2924s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[1e-05,0.9672713626611743] (15,-1; 2,-1), time: 8.9778s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9344s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_147, [-inf,inf]=>[1e-05,1.1241339349693775] (15,-1; 2,-1), time: 8.0273s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.020409993836591932,0.5185886779276947] (9,-1; 9,-1), time: 30.0249s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_103, [-inf,inf]=>[-0.5247831067957431,0.11681846417630043] (9,-1; 9,-1), time: 30.0265s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6041s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_164, [-inf,inf]=>[-0.1844536053687127,0.25089683500239857] (9,-1; 9,-1), time: 30.0116s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-0.32058190911638657,0.3031266947935771] (9,-1; 2,-1), time: 21.0585s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[1e-05,0.952740180137842] (15,-1; 9,-1), time: 15.5677s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_127, [-inf,inf]=>[-0.27645179639117534,0.3186676470638858] (9,-1; 9,-1), time: 30.5713s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[1e-05,0.7542948950507984] (15,-1; 9,-1), time: 15.4259s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_134, [-inf,inf]=>[-0.4604628181247854,0.023236362840038584] (9,-1; 9,-1), time: 30.0488s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[1e-05,1.2102711979557474] (15,-1; 9,-1), time: 15.5204s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_180, [-inf,inf]=>[-0.54405753230353,0.04994131235723694] (9,-1; 9,-1), time: 30.1604s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_142, [-inf,inf]=>[1e-05,0.9529946503649871] (15,-1; 9,-1), time: 15.4242s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-0.0713568900617532,0.46130455321019914] (9,-1; 9,-1), time: 30.0272s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_188, [-inf,inf]=>[-0.07626438128975582,0.38697857458584395] (2,-1; 9,-1), time: 26.7497s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_82, [-inf,inf]=>[1e-05,0.601303026972131] (15,-1; 9,-1), time: 20.1879s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[1e-05,0.6831021071020849] (15,-1; 9,-1), time: 20.8382s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[1e-05,0.5426991807430387] (15,-1; 9,-1), time: 16.6407s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[1e-05,1.1259774375059355] (15,-1; 9,-1), time: 15.5102s, #vars: 1581, #constrs: 894, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(27, 1), (92, -1), (45, -1), (136, -1), (97, 1), (175, 1), (51, -1), (128, -1), (139, -1), (84, -1), (1, -1), (99, -1), (178, -1), (184, -1), (168, -1), (42, 1), (194, -1), (173, -1), (90, 1), (5, -1), (53, -1), (165, -1), (172, 1), (98, -1), (199, -1), (37, 1), (133, -1), (134, -1), (171, 1), (154, -1), (122, -1), (75, 1), (65, -1), (26, 1), (197, -1), (25, -1), (28, -1), (91, -1), (54, -1), (18, 1), (162, 1), (166, 1)]
best_l after optimization: -1780.27734375
beta sum per layer: []
alpha/beta optimization time: 15.974249839782715
alpha-CROWN with intermediate bounds by MIP: tensor([[-139.44538879, -213.03190613, -197.98506165, -209.66029358,
         -213.09996033, -197.91496277, -168.57684326, -212.15293884,
         -228.40991211]], device='cuda:0') None
MIP improved 118 nodes out of 118 unstable nodes, lb improved 27.320953369140625, ub improved 37.47987365722656, time 110.2077
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_193', 'lay8_160', 'lay8_36', 'lay8_119', 'lay8_91', 'lay8_29', 'lay8_76', 'lay8_124', 'lay8_130', 'lay8_155', 'lay8_18', 'lay8_162', 'lay8_28', 'lay8_34', 'lay8_71', 'lay8_170', 'lay8_181', 'lay8_125', 'lay8_19', 'lay8_22', 'lay8_190', 'lay8_114', 'lay8_85', 'lay8_100', 'lay8_15', 'lay8_52', 'lay8_149', 'lay8_167', 'lay8_118', 'lay8_156', 'lay8_40', 'lay8_65', 'lay8_113', 'lay8_102', 'lay8_195', 'lay8_12', 'lay8_154', 'lay8_176', 'lay8_158', 'lay8_92', 'lay8_134', 'lay8_20', 'lay8_39', 'lay8_142', 'lay8_37', 'lay8_140', 'lay8_44', 'lay8_35', 'lay8_60', 'lay8_45', 'lay8_33', 'lay8_186', 'lay8_128', 'lay8_0', 'lay8_30', 'lay8_122', 'lay8_105', 'lay8_4', 'lay8_187', 'lay8_131', 'lay8_83', 'lay8_56', 'lay8_189', 'lay8_179', 'lay8_98', 'lay8_188', 'lay8_111', 'lay8_93', 'lay8_84', 'lay8_117', 'lay8_94', 'lay8_42', 'lay8_151', 'lay8_8', 'lay8_141', 'lay8_104', 'lay8_137', 'lay8_168', 'lay8_129', 'lay8_192', 'lay8_157', 'lay8_50', 'lay8_103', 'lay8_163', 'lay8_139', 'lay8_184', 'lay8_153', 'lay8_73', 'lay8_173', 'lay8_90', 'lay8_126', 'lay8_133', 'lay8_66', 'lay8_199', 'lay8_145', 'lay8_183', 'lay8_96', 'lay8_99', 'lay8_1', 'lay8_13', 'lay8_49', 'lay8_185', 'lay8_43', 'lay8_95', 'lay8_164', 'lay8_53', 'lay8_79', 'lay8_194', 'lay8_6', 'lay8_46', 'lay8_51', 'lay8_97', 'lay8_5', 'lay8_16', 'lay8_48', 'lay8_63', 'lay8_68', 'lay8_135', 'lay8_70', 'lay8_69', 'lay8_198', 'lay8_177', 'lay8_64', 'lay8_101', 'lay8_75', 'lay8_81', 'lay8_57', 'lay8_78', 'lay8_25', 'lay8_3', 'lay8_116', 'lay8_47', 'lay8_21', 'lay8_175', 'lay8_174', 'lay8_159', 'lay8_166', 'lay8_123', 'lay8_150', 'lay8_115', 'lay8_144', 'lay8_82', 'lay8_14', 'lay8_59', 'lay8_178', 'lay8_54', 'lay8_172', 'lay8_74', 'lay8_152', 'lay8_32', 'lay8_10', 'lay8_132', 'lay8_58', 'lay8_11', 'lay8_112', 'lay8_107', 'lay8_86', 'lay8_7', 'lay8_9', 'lay8_72', 'lay8_180', 'lay8_147', 'lay8_171', 'lay8_165', 'lay8_110', 'lay8_121', 'lay8_38', 'lay8_27', 'lay8_55', 'lay8_169', 'lay8_26', 'lay8_196', 'lay8_23', 'lay8_17', 'lay8_120', 'lay8_2', 'lay8_106', 'lay8_143', 'lay8_109', 'lay8_87', 'lay8_127', 'lay8_88'] filter: 1.0
Solving MIP for lay8_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7291s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7620s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8080s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8437s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8511s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8556s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8785s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8889s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9662s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9822s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8154s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9393s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8148s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6851s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7452s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6668s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0550s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7538s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7246s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7407s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7099s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7344s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8924s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_114, [-inf,inf]=>[1e-05,0.8126577534937393] (15,-1; 9,-1), time: 15.7900s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[1e-05,0.8777175727841643] (15,-1; 9,-1), time: 15.8083s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[1e-05,0.6197601739756909] (15,-1; 9,-1), time: 19.1179s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6987s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7680s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7570s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[1e-05,0.6533109076005713] (15,-1; 9,-1), time: 16.7533s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_160, [-inf,inf]=>[-0.2285206176218639,0.3231452956429919] (9,-1; 9,-1), time: 30.0204s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_119, [-inf,inf]=>[-0.5316357753564587,0.00993494079272927] (9,-1; 9,-1), time: 30.0185s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-0.2236563007230913,0.29309962020979113] (9,-1; 9,-1), time: 30.0217s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[-0.10103179701016007,0.40008378374125725] (9,-1; 9,-1), time: 30.0256s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6771s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8193s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[-0.3368897029654589,0.23375781985334682] (9,-1; 9,-1), time: 30.0126s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-0.34840751930125574,0.19664288218804354] (9,-1; 9,-1), time: 30.0191s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[-0.5638675157944645,0.07107399415173028] (9,-1; 9,-1), time: 30.0123s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.3332953014321235,0.27236069718668354] (9,-1; 9,-1), time: 30.0204s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7972s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[-0.0585857341485791,0.5412018643575699] (9,-1; 9,-1), time: 30.0196s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7921s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8353s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[-0.2716913660566541,0.3211128482970973] (9,-1; 9,-1), time: 30.0137s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8980s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8725s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7911s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7757s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[-0.1037368271187208,0.4939316308672936] (9,-1; 9,-1), time: 30.0666s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6843s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.5206526255772006,0.049922688073140924] (9,-1; 9,-1), time: 30.0251s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7194s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6800s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6610s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7340s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7457s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7214s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[1e-05,1.1433162771642376] (15,-1; 9,-1), time: 15.6661s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7521s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7451s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6509s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[1e-05,0.7440554850623454] (15,-1; 9,-1), time: 15.7467s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8676s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[-0.06994469265111623,0.552492918792898] (9,-1; 9,-1), time: 30.0157s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7291s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8378s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8234s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7047s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8545s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7790s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[1e-05,1.9126025212927884] (15,-1; 9,-1), time: 15.6826s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6794s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-0.9937517917217586,0.2608945467168008] (9,-1; 9,-1), time: 30.0109s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6779s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6851s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7112s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7144s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7108s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-0.4563386213492169,0.1494818532218968] (9,-1; 9,-1), time: 30.0123s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6919s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.351910929013227,0.4604065284911228] (9,-1; 9,-1), time: 30.0568s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_186, [-inf,inf]=>[-0.6238511786532943,0.008147669038369316] (9,-1; 9,-1), time: 30.0160s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[-0.20894033053802644,0.42364265699929] (9,-1; 9,-1), time: 30.0128s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7725s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.5365147524870651,0.06888743148285312] (9,-1; 9,-1), time: 30.0136s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[-0.32243957596604983,0.13196963239584644] (9,-1; 9,-1), time: 30.0174s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.4923470615308412,0.06947457982349015] (9,-1; 9,-1), time: 30.0122s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8190s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-0.4011487322010771,0.14645443855665424] (9,-1; 9,-1), time: 30.0165s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.3650992884092067,0.3308198504483588] (9,-1; 9,-1), time: 30.0152s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[-0.44410875069828587,0.18061037231613286] (9,-1; 9,-1), time: 30.0123s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7424s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7187s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6945s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-0.2387198569090121,0.24409329660536153] (9,-1; 9,-1), time: 30.0101s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[-0.2950016199657375,0.2424778205771208] (9,-1; 9,-1), time: 30.0131s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.3512s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7628s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6286s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[1e-05,0.6220705730514502] (15,-1; 9,-1), time: 16.6670s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.5715s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8324s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8150s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8256s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,0.8228733139816009] (15,-1; 9,-1), time: 15.6904s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[1e-05,0.9278427224804157] (15,-1; 9,-1), time: 15.8462s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-0.333992456738657,0.16929668451958801] (9,-1; 9,-1), time: 30.0141s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.46141956011177937,0.11859638777569304] (9,-1; 9,-1), time: 30.0163s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-0.6672521454531205,0.08741712566426067] (9,-1; 9,-1), time: 30.1303s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7096s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8100s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[1e-05,1.3827370764599967] (15,-1; 9,-1), time: 15.6781s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[1e-05,0.700698562669387] (15,-1; 9,-1), time: 17.1137s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-0.6505395651425554,0.14143226682055765] (9,-1; 9,-1), time: 30.0171s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7686s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6789s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8231s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8400s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-0.4973936907351027,0.03388287150225436] (9,-1; 9,-1), time: 30.0150s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-0.7000891758625339,0.14247604677603823] (9,-1; 9,-1), time: 30.0151s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7325s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.16125762479200587,0.409106120267982] (9,-1; 9,-1), time: 30.0154s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[1e-05,0.8684236087333332] (15,-1; 9,-1), time: 15.6968s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-0.5801539738156635,0.01381427465635731] (9,-1; 9,-1), time: 30.0188s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-0.6458639184974323,0.05908346877595094] (9,-1; 9,-1), time: 30.0190s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-0.5427049840425735,0.10407433506599201] (9,-1; 9,-1), time: 30.0152s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[1e-05,1.3811404664943725] (15,-1; 9,-1), time: 15.8338s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-0.09614679913996003,0.508634452588179] (9,-1; 9,-1), time: 30.0132s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[1e-05,0.6712216618636344] (15,-1; 9,-1), time: 15.7235s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-0.4246510892892784,0.15348925883099396] (9,-1; 9,-1), time: 30.0179s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.3955043116914475,0.16932321416617124] (9,-1; 9,-1), time: 30.0153s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[1e-05,1.3186521971331377] (15,-1; 9,-1), time: 15.8777s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7957s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[1e-05,0.8097677160697587] (15,-1; 9,-1), time: 15.6963s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8228s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6963s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[1e-05,0.7739990226991946] (15,-1; 9,-1), time: 15.7146s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6896s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-0.465478523698049,0.10939557895143236] (9,-1; 9,-1), time: 30.0192s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.24385706957159317,0.36893946613014905] (9,-1; 9,-1), time: 30.0110s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6852s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7777s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8434s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[-0.4003056279508522,0.11369747402913669] (9,-1; 9,-1), time: 30.0142s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7249s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8099s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-0.2640277396945603,0.44114622702197814] (9,-1; 9,-1), time: 30.0159s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[1e-05,0.6894538449074397] (15,-1; 9,-1), time: 15.7659s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[1e-05,0.7353838418630396] (15,-1; 9,-1), time: 25.7580s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[1e-05,0.9748574331890488] (15,-1; 9,-1), time: 15.7412s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6916s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.22379686616828742,0.2820205525380835] (9,-1; 9,-1), time: 30.0110s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[1e-05,1.3930071392343757] (15,-1; 9,-1), time: 15.7959s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.5543858281432422,0.15675665448914497] (9,-1; 9,-1), time: 30.0146s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8734s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[1e-05,1.336880745984971] (15,-1; 9,-1), time: 15.8314s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7856s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6920s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-0.2876886793683752,0.2784527825535247] (9,-1; 9,-1), time: 30.0133s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[1e-05,1.2431917868430595] (15,-1; 9,-1), time: 15.6947s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.5956270432737256,0.022966385740249343] (9,-1; 9,-1), time: 30.0258s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6795s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[1e-05,0.8513966449433374] (15,-1; 9,-1), time: 15.8245s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[1e-05,1.346540866724778] (15,-1; 9,-1), time: 15.8011s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[1e-05,0.46614384581470536] (15,-1; 9,-1), time: 27.0390s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6940s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-0.7936813831164664,0.008584618948854171] (9,-1; 9,-1), time: 30.0128s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[1e-05,1.0613354006844031] (15,-1; 9,-1), time: 15.7347s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[1e-05,1.0285706961120982] (15,-1; 9,-1), time: 15.7243s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.3589366468680767,0.24005043470080537] (9,-1; 9,-1), time: 30.0147s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-0.035844359314436525,0.5103640045515119] (9,-1; 9,-1), time: 30.0275s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[1e-05,1.7045493175317017] (15,-1; 9,-1), time: 15.7006s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[-0.4048104258702054,0.13576320553900886] (9,-1; 9,-1), time: 30.0130s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[1e-05,1.4453879656641335] (15,-1; 9,-1), time: 15.7145s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,1.583368847214582] (15,-1; 9,-1), time: 15.7632s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-0.2788828823614402,0.3374765098789475] (9,-1; 9,-1), time: 30.0144s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-0.2278961680017728,0.26055640392652946] (9,-1; 9,-1), time: 30.0190s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[1e-05,2.367583884937769] (15,-1; 9,-1), time: 15.5234s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-0.5034839012686987,0.06703253479987226] (9,-1; 9,-1), time: 30.0486s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.25959890193596213,0.23914914406239154] (9,-1; 9,-1), time: 30.0127s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.45078684180139916,0.22738587291465076] (9,-1; 9,-1), time: 30.0320s, #vars: 1869, #constrs: 1226, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(159, -1), (34, -1), (190, -1), (18, -1), (189, -1), (35, -1), (133, -1), (172, -1), (123, -1), (75, -1), (179, -1), (106, -1), (192, 1), (30, -1), (90, -1), (167, -1), (49, -1), (132, -1), (88, -1), (100, -1), (96, -1), (31, 1), (58, -1), (110, -1), (1, -1), (105, -1), (139, -1), (130, -1), (93, -1), (43, -1), (101, -1), (152, 1), (4, -1), (2, -1), (68, -1), (136, -1), (84, -1), (186, -1), (122, -1), (156, -1), (41, -1), (117, -1), (95, 1), (158, 1), (85, -1), (0, -1), (187, 1), (5, -1), (149, -1), (140, -1), (47, -1), (74, -1), (161, 1), (51, -1), (191, -1), (162, -1), (107, -1), (165, -1), (27, 1), (175, -1), (137, -1), (53, 1), (86, -1), (119, 1), (147, 1), (81, 1), (112, 1), (82, 1), (46, 1), (73, -1), (142, 1), (28, 1), (37, -1), (166, 1)]
best_l after optimization: -255.43853759765625
beta sum per layer: []
alpha/beta optimization time: 15.415470600128174
alpha-CROWN with intermediate bounds by MIP: tensor([[-20.63362694, -29.27724838, -27.63450623, -30.16235733, -30.81377411,
         -27.90668869, -24.82615852, -30.46903419, -33.71514130]],
       device='cuda:0') None
MIP improved 182 nodes out of 182 unstable nodes, lb improved 84.16077423095703, ub improved 121.23908233642578, time 162.4486
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_83', 'lay10_91', 'lay10_193', 'lay10_69', 'lay10_191', 'lay10_167', 'lay10_64', 'lay10_97', 'lay10_31', 'lay10_56', 'lay10_158', 'lay10_22', 'lay10_39', 'lay10_174', 'lay10_194', 'lay10_101', 'lay10_54', 'lay10_85', 'lay10_163', 'lay10_95', 'lay10_155', 'lay10_160', 'lay10_144', 'lay10_42', 'lay10_104', 'lay10_99', 'lay10_18', 'lay10_156', 'lay10_15', 'lay10_123', 'lay10_153', 'lay10_183', 'lay10_11', 'lay10_96', 'lay10_86', 'lay10_94', 'lay10_74', 'lay10_184', 'lay10_134', 'lay10_138', 'lay10_89', 'lay10_10', 'lay10_106', 'lay10_188', 'lay10_114', 'lay10_73', 'lay10_38', 'lay10_40', 'lay10_76', 'lay10_117', 'lay10_65', 'lay10_199', 'lay10_110', 'lay10_23', 'lay10_58', 'lay10_70', 'lay10_57', 'lay10_53', 'lay10_82', 'lay10_142', 'lay10_67', 'lay10_6', 'lay10_12', 'lay10_50', 'lay10_125', 'lay10_1', 'lay10_169', 'lay10_36', 'lay10_135', 'lay10_0', 'lay10_139', 'lay10_152', 'lay10_37', 'lay10_164', 'lay10_130', 'lay10_143', 'lay10_47', 'lay10_129', 'lay10_2', 'lay10_30', 'lay10_79', 'lay10_92', 'lay10_60', 'lay10_115', 'lay10_19', 'lay10_93', 'lay10_48', 'lay10_35', 'lay10_63', 'lay10_154', 'lay10_162', 'lay10_52', 'lay10_168', 'lay10_16', 'lay10_55', 'lay10_102', 'lay10_149', 'lay10_61', 'lay10_14', 'lay10_5', 'lay10_112', 'lay10_182', 'lay10_192', 'lay10_111', 'lay10_197', 'lay10_159', 'lay10_34', 'lay10_124', 'lay10_157', 'lay10_41', 'lay10_62', 'lay10_100', 'lay10_109', 'lay10_185', 'lay10_128', 'lay10_72', 'lay10_176', 'lay10_24', 'lay10_75', 'lay10_27', 'lay10_171', 'lay10_9', 'lay10_68', 'lay10_43', 'lay10_45', 'lay10_173', 'lay10_131', 'lay10_7', 'lay10_122', 'lay10_166', 'lay10_8', 'lay10_126', 'lay10_189', 'lay10_195', 'lay10_90', 'lay10_181', 'lay10_98', 'lay10_46', 'lay10_29', 'lay10_127', 'lay10_161', 'lay10_105', 'lay10_187', 'lay10_26', 'lay10_77', 'lay10_21', 'lay10_165', 'lay10_107', 'lay10_136', 'lay10_71', 'lay10_150', 'lay10_28', 'lay10_3', 'lay10_121', 'lay10_196', 'lay10_80', 'lay10_84', 'lay10_44', 'lay10_51', 'lay10_146', 'lay10_113', 'lay10_4', 'lay10_120', 'lay10_186', 'lay10_81', 'lay10_132', 'lay10_49', 'lay10_198', 'lay10_32', 'lay10_88', 'lay10_33', 'lay10_141', 'lay10_151', 'lay10_180', 'lay10_147', 'lay10_119', 'lay10_118', 'lay10_20', 'lay10_145', 'lay10_178', 'lay10_116', 'lay10_103', 'lay10_190', 'lay10_87', 'lay10_13', 'lay10_172', 'lay10_78', 'lay10_170', 'lay10_177', 'lay10_148', 'lay10_108', 'lay10_17', 'lay10_59', 'lay10_137', 'lay10_175', 'lay10_25', 'lay10_66', 'lay10_133', 'lay10_140', 'lay10_179'] filter: 1.0
Solving MIP for lay10_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0881s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1246s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1297s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1436s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1628s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2019s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2892s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9841s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1655s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7026s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2189s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1451s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9744s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.3596s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1657s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-0.13693562333563883,0.8408839720919413] (9,-1; 9,-1), time: 30.0147s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-0.15768191335248985,0.819086045724142] (9,-1; 9,-1), time: 30.0437s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-0.8046448172119258,0.009326967125107805] (9,-1; 9,-1), time: 30.0562s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-0.07502512196671542,0.8001316333169448] (9,-1; 9,-1), time: 30.0699s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[-0.017551789015665505,0.5587146721255978] (9,-1; 9,-1), time: 30.0748s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[-0.5817107681474009,0.1835255027723834] (9,-1; 9,-1), time: 30.0798s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.42272877572712986,0.6192551507493396] (9,-1; 9,-1), time: 30.4102s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0484s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0705s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1112s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.09434781637434746,0.6774851023396219] (9,-1; 9,-1), time: 30.0489s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[-0.5537526133499739,0.13393990654431392] (9,-1; 9,-1), time: 30.0746s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9069s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-0.3543169991767729,0.267086715114091] (9,-1; 9,-1), time: 30.1470s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[-0.7609560906120685,0.08525184855347284] (9,-1; 9,-1), time: 30.1031s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-0.2921887475207492,0.3707876674488042] (9,-1; 9,-1), time: 30.2902s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0053s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0144s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9750s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2837s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9350s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9641s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.17476643075565595,0.5418777976186123] (9,-1; 9,-1), time: 30.1241s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.7451934467063421,0.06527518266951124] (9,-1; 9,-1), time: 30.2370s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9536s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0575s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9747s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[-0.7490676304523333,0.3709891654787815] (9,-1; 9,-1), time: 30.2082s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-0.670830311127491,0.0013800203341333694] (9,-1; 9,-1), time: 30.1214s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9358s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0513s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0457s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9403s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1047s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0209s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9519s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9583s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0770s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0761s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.1692s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[1e-05,0.7963411760424479] (15,-1; 9,-1), time: 16.0194s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[1e-05,1.1529147223012177] (15,-1; 9,-1), time: 16.1485s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[1e-05,1.9057379014123763] (15,-1; 9,-1), time: 15.9834s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[1e-05,0.8308898774256981] (15,-1; 9,-1), time: 16.1237s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,4.292636040301421] (15,-1; 9,-1), time: 15.9863s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[1e-05,2.1362250499858892] (15,-1; 9,-1), time: 16.1446s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9420s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9356s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9936s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9735s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-0.29098355552381366,0.40967012098887934] (9,-1; 9,-1), time: 30.1624s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[-0.5813421151361817,0.1715409577199547] (9,-1; 9,-1), time: 30.0667s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0135s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-0.4063191471280635,0.4715015612067999] (9,-1; 9,-1), time: 30.0339s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.8390854420088121,0.07978578567185954] (9,-1; 9,-1), time: 30.0600s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-0.05698004187595296,0.5532059070832172] (9,-1; 9,-1), time: 30.1220s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-0.42816977450616767,0.2603594769754006] (9,-1; 9,-1), time: 30.2727s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1221s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9110s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-0.17838884854247733,0.5538168616048269] (9,-1; 9,-1), time: 30.1555s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-0.7491844880485425,0.06089544366760841] (9,-1; 9,-1), time: 30.2297s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9127s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.4639s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0752s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.6887526390700967,0.03858874937525692] (9,-1; 9,-1), time: 30.2003s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9900s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0184s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9381s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0950s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0425s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0132s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0446s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0594s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[-0.0926336034559068,0.7213870888820408] (9,-1; 9,-1), time: 30.1941s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-0.6151892906578259,0.013329982934363615] (9,-1; 9,-1), time: 30.1942s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-0.5785389801506797,0.31066880236010136] (9,-1; 9,-1), time: 30.3918s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0110s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0300s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[1e-05,0.9965151531604889] (15,-1; 9,-1), time: 16.0727s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[1e-05,2.590730266969889] (15,-1; 9,-1), time: 16.0030s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9026s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0500s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[1e-05,1.2906153952930628] (15,-1; 9,-1), time: 16.1312s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0418s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9908s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9856s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-0.4815595734451734,0.09059990413389932] (9,-1; 9,-1), time: 30.1437s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-0.8267663094253895,0.1877437625031254] (9,-1; 9,-1), time: 30.2227s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0717s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0738s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1993s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5374s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[1e-05,3.895080074481248] (15,-1; 9,-1), time: 16.2526s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-0.47434546482921164,0.25529477018229435] (9,-1; 9,-1), time: 30.0272s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-0.48125674894351406,0.14711036127554478] (9,-1; 9,-1), time: 30.0252s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-0.6172195359415269,0.143491647149869] (9,-1; 9,-1), time: 30.0530s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-0.7778004527592347,0.15922934802679498] (9,-1; 9,-1), time: 30.1761s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-0.38872647228456547,0.3142697377369698] (9,-1; 9,-1), time: 30.1762s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0918s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0674s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-0.461496997546625,0.30736757893983624] (9,-1; 9,-1), time: 30.1272s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0958s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9776s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[1e-05,0.9815914892801815] (15,-1; 9,-1), time: 16.1103s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9826s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0818s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1251s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[1e-05,1.4218185990697778] (15,-1; 9,-1), time: 16.0037s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0374s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[1e-05,0.7386275283068928] (15,-1; 9,-1), time: 17.7873s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[1e-05,2.727441131959612] (15,-1; 9,-1), time: 15.9405s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0411s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9285s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-0.8025848404109821,0.32372068959706213] (9,-1; 9,-1), time: 30.0742s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0685s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9530s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9430s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0128s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.8227011802103691,0.014152620241958402] (9,-1; 9,-1), time: 30.0403s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9846s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-0.5366956499763805,0.10309873580115947] (9,-1; 9,-1), time: 30.0171s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[-0.07243627231970975,0.6442635689557729] (9,-1; 9,-1), time: 30.1300s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9006s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.531891252937689,0.08913223899643691] (9,-1; 9,-1), time: 30.1073s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-0.6473597620161746,0.04451999511936531] (9,-1; 9,-1), time: 30.0732s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-0.5300112281541342,0.27758584234809025] (9,-1; 9,-1), time: 30.1912s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9147s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0228s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[-0.3582143039110837,0.26191945533666006] (9,-1; 9,-1), time: 30.1437s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-0.5659903898073264,0.20269636993500256] (9,-1; 9,-1), time: 30.0668s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-0.017126362535814448,0.7345605463320899] (9,-1; 9,-1), time: 30.0542s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-0.611484033792408,0.12606922145358757] (9,-1; 9,-1), time: 30.1280s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-0.3973455720329265,0.2671854959648324] (9,-1; 9,-1), time: 30.0436s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9915s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9960s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.5157578916064797,0.27243094116014543] (9,-1; 9,-1), time: 30.0578s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0091s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[1e-05,0.8482230972265637] (15,-1; 9,-1), time: 18.1171s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1276s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0040s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0947s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9788s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[-0.09610628171616488,0.6332844668461763] (9,-1; 9,-1), time: 30.1313s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9696s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0077s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-0.3302526022881426,0.19504035579382362] (9,-1; 9,-1), time: 30.1089s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9703s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.6118s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[1e-05,2.1634336457619088] (15,-1; 9,-1), time: 15.9265s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-0.6663313128771324,0.17550407102085255] (9,-1; 9,-1), time: 30.0957s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[-0.6013359728471409,0.22291611374311734] (9,-1; 9,-1), time: 30.1876s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[1e-05,0.9550283161949005] (15,-1; 9,-1), time: 17.7021s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1693s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0966s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0421s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9246s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0908s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0330s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[1e-05,2.142628556948678] (15,-1; 9,-1), time: 16.0046s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[1e-05,3.2205002353643932] (15,-1; 9,-1), time: 16.0531s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.5521711821428428,0.18902687986988176] (9,-1; 9,-1), time: 30.0213s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9694s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-0.4847219426186746,0.39518792458541074] (9,-1; 9,-1), time: 30.0553s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0650s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9912s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9435s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0678s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9380s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[1e-05,3.249217090707588] (15,-1; 9,-1), time: 16.1632s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[1e-05,2.027577405548879] (15,-1; 9,-1), time: 16.1850s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0192s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-0.07049898001314721,0.6672752408527428] (9,-1; 9,-1), time: 30.1950s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-0.5429344089827627,0.20916637625125] (9,-1; 9,-1), time: 30.0445s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-0.13952800338635288,0.7625563452675928] (9,-1; 9,-1), time: 30.0936s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.2954167988541795,0.5552327506015836] (9,-1; 9,-1), time: 30.1147s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-0.9859349502234904,0.0009419360196721432] (9,-1; 9,-1), time: 30.0312s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[-0.23898329257212889,0.5463818081131788] (9,-1; 9,-1), time: 30.1610s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-0.14038098895970783,0.558446696986598] (9,-1; 9,-1), time: 30.0897s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-0.24691066681271634,0.593036996763078] (9,-1; 9,-1), time: 30.2626s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-0.6862282287236653,0.16176121724026984] (9,-1; 9,-1), time: 30.1854s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-0.2916958904446417,0.3767895603724938] (9,-1; 9,-1), time: 30.0431s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-0.5181515019402262,0.1508768141389389] (9,-1; 9,-1), time: 30.1740s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.39981964813953336,0.29864136647218076] (9,-1; 9,-1), time: 30.0705s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.1334580480583593,0.6990890386940307] (9,-1; 9,-1), time: 30.1265s, #vars: 2181, #constrs: 1594, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-0.6896157072923834,0.020601220007114944] (9,-1; 9,-1), time: 30.0137s, #vars: 2181, #constrs: 1594, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(193, -1), (36, -1), (91, -1), (29, -1), (76, 1), (124, -1), (155, -1), (18, -1), (162, -1), (34, -1), (71, -1), (170, -1), (181, -1), (125, -1), (19, -1), (114, 1), (85, -1), (52, -1), (118, -1), (65, -1), (113, 1), (102, -1), (195, -1), (12, -1), (154, -1), (176, -1), (158, 1), (134, -1), (20, -1), (39, -1), (142, 1), (44, -1), (35, 1), (45, -1), (33, -1), (128, -1), (0, -1), (30, -1), (122, -1), (4, -1), (56, -1), (189, -1), (179, -1), (188, -1), (111, -1), (93, -1), (94, -1), (42, 1), (151, -1), (8, -1), (141, -1), (104, -1), (129, -1), (192, -1), (157, -1), (50, -1), (103, -1), (163, -1), (139, -1), (184, -1), (73, -1), (173, -1), (133, -1), (66, -1), (199, -1), (145, 1), (183, -1), (99, -1), (1, -1), (13, 1), (49, 1), (95, -1), (164, -1), (79, -1), (194, -1), (6, -1), (97, -1), (5, -1), (48, 1), (63, 1), (135, -1), (70, -1), (69, -1), (177, 1), (81, -1), (57, -1), (25, 1), (3, -1), (116, -1), (21, -1), (175, -1), (174, 1), (159, -1), (166, 1), (123, 1), (115, 1), (144, 1), (178, 1), (54, 1), (172, -1), (74, -1), (152, 1), (10, -1), (132, -1), (58, 1), (112, -1), (107, 1), (86, -1), (9, -1), (72, -1), (180, -1), (147, 1), (165, 1), (38, -1), (27, 1), (55, 1), (169, 1), (26, -1), (196, -1), (23, 1), (17, -1), (106, 1), (143, -1), (109, 1), (127, 1), (88, -1)]
best_l after optimization: -45.2010498046875
beta sum per layer: []
alpha/beta optimization time: 14.718655347824097
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.86802483, -4.26896572, -3.93787384, -5.68489885, -5.71447134,
         -4.76664352, -4.60869932, -5.52312613, -6.82834482]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 271.0811767578125, ub improved 466.2767639160156, time 180.4968
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=200, bias=True) 5 12 torch.Size([200])
sorted candidates ['lay12_71', 'lay12_30', 'lay12_61', 'lay12_3', 'lay12_68', 'lay12_109', 'lay12_197', 'lay12_39', 'lay12_40', 'lay12_91', 'lay12_93', 'lay12_147', 'lay12_81', 'lay12_154', 'lay12_132', 'lay12_95', 'lay12_80', 'lay12_175', 'lay12_111', 'lay12_52', 'lay12_74', 'lay12_96', 'lay12_145', 'lay12_146', 'lay12_35', 'lay12_41', 'lay12_118', 'lay12_116', 'lay12_58', 'lay12_125', 'lay12_174', 'lay12_183', 'lay12_67', 'lay12_119', 'lay12_60', 'lay12_70', 'lay12_98', 'lay12_65', 'lay12_46', 'lay12_19', 'lay12_103', 'lay12_172', 'lay12_83', 'lay12_124', 'lay12_14', 'lay12_127', 'lay12_12', 'lay12_164', 'lay12_163', 'lay12_107', 'lay12_114', 'lay12_15', 'lay12_5', 'lay12_87', 'lay12_84', 'lay12_136', 'lay12_47', 'lay12_90', 'lay12_28', 'lay12_151', 'lay12_139', 'lay12_86', 'lay12_21', 'lay12_79', 'lay12_117', 'lay12_4', 'lay12_131', 'lay12_24', 'lay12_120', 'lay12_82', 'lay12_176', 'lay12_27', 'lay12_129', 'lay12_22', 'lay12_148', 'lay12_2', 'lay12_160', 'lay12_7', 'lay12_149', 'lay12_17', 'lay12_57', 'lay12_66', 'lay12_99', 'lay12_188', 'lay12_20', 'lay12_1', 'lay12_128', 'lay12_190', 'lay12_142', 'lay12_173', 'lay12_130', 'lay12_115', 'lay12_101', 'lay12_187', 'lay12_13', 'lay12_140', 'lay12_34', 'lay12_150', 'lay12_69', 'lay12_97', 'lay12_51', 'lay12_62', 'lay12_199', 'lay12_43', 'lay12_75', 'lay12_121', 'lay12_194', 'lay12_63', 'lay12_141', 'lay12_55', 'lay12_170', 'lay12_48', 'lay12_44', 'lay12_38', 'lay12_73', 'lay12_152', 'lay12_78', 'lay12_8', 'lay12_110', 'lay12_143', 'lay12_181', 'lay12_196', 'lay12_31', 'lay12_177', 'lay12_133', 'lay12_16', 'lay12_180', 'lay12_9', 'lay12_106', 'lay12_25', 'lay12_123', 'lay12_158', 'lay12_159', 'lay12_153', 'lay12_36', 'lay12_122', 'lay12_169', 'lay12_156', 'lay12_195', 'lay12_45', 'lay12_167', 'lay12_10', 'lay12_182', 'lay12_85', 'lay12_178', 'lay12_193', 'lay12_50', 'lay12_89', 'lay12_29', 'lay12_179', 'lay12_198', 'lay12_76', 'lay12_186', 'lay12_72', 'lay12_49', 'lay12_53', 'lay12_56', 'lay12_184', 'lay12_105', 'lay12_191', 'lay12_0', 'lay12_100', 'lay12_88', 'lay12_113', 'lay12_165', 'lay12_54', 'lay12_162', 'lay12_168', 'lay12_161', 'lay12_92', 'lay12_42', 'lay12_137', 'lay12_126', 'lay12_6', 'lay12_23', 'lay12_33', 'lay12_171', 'lay12_135', 'lay12_26', 'lay12_155', 'lay12_64', 'lay12_11', 'lay12_157', 'lay12_166', 'lay12_104', 'lay12_192', 'lay12_102', 'lay12_108', 'lay12_112', 'lay12_134', 'lay12_18', 'lay12_189', 'lay12_77', 'lay12_185', 'lay12_59', 'lay12_32', 'lay12_37', 'lay12_144', 'lay12_138', 'lay12_94'] filter: 1.0
Solving MIP for lay12_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2225s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3393s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3545s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3632s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4454s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4595s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5045s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6528s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7120s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7681s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5158s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4206s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5316s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5751s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5402s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.8504s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4657s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4132s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5184s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4897s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5666s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4285s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_146, [-inf,inf]=>[1e-05,1.07166160925278] (15,-1; 9,-1), time: 16.4578s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[1e-05,1.6059690842318084] (15,-1; 9,-1), time: 18.6818s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2327s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2904s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3094s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[1e-05,3.4403324136639655] (15,-1; 9,-1), time: 16.4039s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3175s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3674s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4607s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5122s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9732s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3072s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.44830622665983655,0.5032354986272465] (9,-1; 9,-1), time: 30.2475s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[-0.9126613403237767,0.21862735985258963] (9,-1; 9,-1), time: 30.3413s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-0.8778105375565506,0.15795592353110605] (9,-1; 9,-1), time: 30.5152s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-0.2500707196610954,0.859833257200278] (9,-1; 9,-1), time: 30.6924s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[-0.5689429295810754,0.5150688384846858] (9,-1; 9,-1), time: 30.0570s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[-0.7717729612371134,0.24272046086518004] (9,-1; 9,-1), time: 30.0185s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_175, [-inf,inf]=>[-0.3113494997880141,0.49662395153316663] (9,-1; 9,-1), time: 30.0697s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4427s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-0.4413049588410333,0.425254204288017] (9,-1; 9,-1), time: 30.1009s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2321s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4239s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2772s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2554s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2024s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3025s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5147s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3731s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_174, [-inf,inf]=>[-1.108859024825265,0.09787496252557674] (9,-1; 9,-1), time: 30.3635s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_116, [-inf,inf]=>[-0.921221758493673,0.097703498649232] (9,-1; 9,-1), time: 30.8790s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4026s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_183, [-inf,inf]=>[-1.1223601933252478,0.15219188430642477] (9,-1; 9,-1), time: 30.3118s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3126s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.6040s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4050s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3294s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3353s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-0.21626754956081068,0.7667321951944605] (9,-1; 9,-1), time: 30.4664s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.30745934375686096,0.6342758092813334] (9,-1; 9,-1), time: 30.0515s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2937s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3747s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_163, [-inf,inf]=>[1e-05,1.6316470669454766] (15,-1; 9,-1), time: 16.9368s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3581s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[1e-05,1.2369227946598105] (15,-1; 9,-1), time: 16.3032s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[1e-05,1.1895453784045935] (15,-1; 9,-1), time: 16.6069s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_120, [-inf,inf]=>[1e-05,2.1845187134188806] (15,-1; 9,-1), time: 16.3509s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3061s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[-0.5549413449532994,0.566730117039842] (9,-1; 9,-1), time: 30.3466s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[1e-05,1.132171717905087] (15,-1; 9,-1), time: 16.4854s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1998s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2885s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2281s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4230s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_160, [-inf,inf]=>[1e-05,2.276306235875087] (15,-1; 9,-1), time: 16.4120s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4810s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3776s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6078s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_129, [-inf,inf]=>[1e-05,0.9399507423026863] (15,-1; 9,-1), time: 19.6750s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.6710s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_150, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3402s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4266s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2826s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_107, [-inf,inf]=>[-0.06278785672343845,1.1066589053134581] (9,-1; 9,-1), time: 30.4321s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4384s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3123s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4218s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_114, [-inf,inf]=>[-0.5767779302702166,0.329026008821941] (9,-1; 9,-1), time: 31.0439s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.45503422104535] (15,-1; 9,-1), time: 16.5514s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4324s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_117, [-inf,inf]=>[-0.7136293360619773,0.295953581705409] (9,-1; 9,-1), time: 30.2672s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-0.9820102171800709,0.11402761792820837] (9,-1; 9,-1), time: 30.5159s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2152s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_176, [-inf,inf]=>[-0.5549493555601411,0.42215674401967906] (9,-1; 9,-1), time: 30.0792s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3638s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2840s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1687s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5037s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_148, [-inf,inf]=>[-0.6053660795332824,0.34687823513322946] (9,-1; 9,-1), time: 30.5706s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4445s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4286s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_149, [-inf,inf]=>[-0.3069889077160278,0.6033711878422424] (9,-1; 9,-1), time: 30.2745s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5182s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-0.7309258005185038,0.21357101607753148] (9,-1; 9,-1), time: 30.0694s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2394s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1703s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5038s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3977s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3219s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2543s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_199, [-inf,inf]=>[1e-05,2.401048708898282] (15,-1; 9,-1), time: 16.3302s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4194s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2071s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5637s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4268s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[1e-05,1.1427342443768531] (15,-1; 9,-1), time: 18.4035s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3230s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_188, [-inf,inf]=>[-0.866377819547738,0.03653317109591574] (9,-1; 9,-1), time: 30.4786s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_173, [-inf,inf]=>[-1.0031410663090792,0.05571378645314812] (9,-1; 9,-1), time: 30.0476s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_187, [-inf,inf]=>[-0.9818814848584885,0.15794633501919184] (9,-1; 9,-1), time: 30.1336s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-0.8837256230995513,0.17646427293296635] (9,-1; 9,-1), time: 30.3156s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_143, [-inf,inf]=>[1e-05,2.764040107484759] (15,-1; 9,-1), time: 16.5715s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4405s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-0.07847612881971971,0.9348062577237571] (9,-1; 9,-1), time: 30.7583s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.008925432457547133,0.903920112889616] (9,-1; 9,-1), time: 30.1432s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2267s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2478s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_133, [-inf,inf]=>[1e-05,4.180400744791564] (15,-1; 9,-1), time: 16.4507s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3068s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4643s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2970s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2671s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4429s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5451s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_194, [-inf,inf]=>[-0.08061411486780762,0.8481856797711523] (9,-1; 9,-1), time: 30.2954s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3603s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3890s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.2300968276382631,0.8238300845289647] (9,-1; 9,-1), time: 30.1849s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-0.6826904422534216,0.16212400505922314] (9,-1; 9,-1), time: 30.1547s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-0.6667346159995159,0.2603906235788427] (9,-1; 9,-1), time: 30.6798s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2631s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4084s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_153, [-inf,inf]=>[1e-05,2.1825095210637104] (15,-1; 9,-1), time: 17.2152s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_110, [-inf,inf]=>[-0.6651606469228354,0.18633937396038114] (9,-1; 9,-1), time: 30.0541s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4820s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3560s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5231s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4938s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4293s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3988s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4896s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2800s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_195, [-inf,inf]=>[1e-05,1.360361685890673] (15,-1; 9,-1), time: 16.4421s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4046s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3820s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2913s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_193, [-inf,inf]=>[1e-05,3.2361945466668973] (15,-1; 9,-1), time: 16.3895s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3696s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_123, [-inf,inf]=>[-0.574172842901674,0.2615770383150664] (9,-1; 9,-1), time: 30.2309s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-0.3873474680771375,0.655481020553189] (9,-1; 9,-1), time: 30.4285s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_122, [-inf,inf]=>[-0.2122250196223854,0.794126923359812] (9,-1; 9,-1), time: 30.3973s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_169, [-inf,inf]=>[-0.6697453430705416,0.30063944082625527] (9,-1; 9,-1), time: 30.1232s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4876s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4228s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_191, [-inf,inf]=>[1e-05,4.08378416398043] (15,-1; 9,-1), time: 16.2557s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3929s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_113, [-inf,inf]=>[1e-05,1.995922032648505] (15,-1; 9,-1), time: 16.5787s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.4973321579502896,0.32930167630647045] (9,-1; 9,-1), time: 30.1282s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2974s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3021s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_182, [-inf,inf]=>[-0.8213937644523459,0.26755628210386295] (9,-1; 9,-1), time: 30.2690s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2663s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3835s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4573s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_126, [-inf,inf]=>[1e-05,1.826372999759556] (15,-1; 9,-1), time: 16.6768s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4007s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_198, [-inf,inf]=>[-0.9667390168331074,0.0424695328949157] (9,-1; 9,-1), time: 30.4257s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-0.7332736548513563,0.05843467747151884] (9,-1; 9,-1), time: 30.3437s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1824s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.2637s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2928s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2967s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4108s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3158s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3738s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.6705865223394772,0.33999144771680156] (9,-1; 9,-1), time: 30.3113s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[1e-05,1.8004302579860656] (15,-1; 9,-1), time: 16.1578s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-0.399900346497502,0.4647086125882843] (9,-1; 9,-1), time: 30.5960s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_161, [-inf,inf]=>[-1.1038093146265506,0.016675147529444122] (9,-1; 9,-1), time: 30.5296s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-0.7622077286059448,0.14196966392202454] (9,-1; 9,-1), time: 30.1816s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-0.25858612610917653,0.7133584975102458] (9,-1; 9,-1), time: 30.0585s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_171, [-inf,inf]=>[-0.9331120462869404,0.12648770035466309] (9,-1; 9,-1), time: 30.2495s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.037890460679183134,1.2787326130559602] (9,-1; 9,-1), time: 30.0153s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_155, [-inf,inf]=>[-0.6767835538085627,0.40065941631616275] (9,-1; 9,-1), time: 30.1690s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_166, [-inf,inf]=>[-0.43958923727928206,0.5173498482826657] (9,-1; 9,-1), time: 30.6392s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_134, [-inf,inf]=>[-0.41190410309698416,0.43390956589201696] (9,-1; 9,-1), time: 30.2342s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_189, [-inf,inf]=>[-0.9238712737972006,0.08615604123725643] (9,-1; 9,-1), time: 30.0626s, #vars: 2519, #constrs: 2001, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[-0.6857255607556156,0.16914807674693055] (9,-1; 9,-1), time: 30.4706s, #vars: 2519, #constrs: 2001, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 4 has unstable to stable neurons: [(91, -1), (167, -1), (31, -1), (56, -1), (158, -1), (22, -1), (39, -1), (194, -1), (101, -1), (54, -1), (163, -1), (42, -1), (104, -1), (99, -1), (156, -1), (183, 1), (96, -1), (86, 1), (94, -1), (74, -1), (184, -1), (134, -1), (89, -1), (10, -1), (38, -1), (40, -1), (76, -1), (199, -1), (110, -1), (23, -1), (58, -1), (70, -1), (57, -1), (53, -1), (82, 1), (142, -1), (67, 1), (12, -1), (50, 1), (125, -1), (1, -1), (169, -1), (36, -1), (135, -1), (0, 1), (164, -1), (47, -1), (129, -1), (2, -1), (30, -1), (92, -1), (19, -1), (35, -1), (154, -1), (162, 1), (52, 1), (168, 1), (16, -1), (55, -1), (102, -1), (149, -1), (61, -1), (14, -1), (5, -1), (112, -1), (182, -1), (192, 1), (159, -1), (34, -1), (124, 1), (157, -1), (41, -1), (62, -1), (100, 1), (109, -1), (185, 1), (128, -1), (72, -1), (176, -1), (75, -1), (27, -1), (171, 1), (173, -1), (131, -1), (7, -1), (8, -1), (126, -1), (189, -1), (90, -1), (29, -1), (161, -1), (187, -1), (26, -1), (77, -1), (21, -1), (165, -1), (71, -1), (150, 1), (3, -1), (196, 1), (80, 1), (84, -1), (44, -1), (51, 1), (4, -1), (120, -1), (186, -1), (81, -1), (132, 1), (49, -1), (32, -1), (33, -1), (151, -1), (180, -1), (147, -1), (118, -1), (145, -1), (116, -1), (103, -1), (190, -1), (87, -1), (172, -1), (170, 1), (177, 1), (108, -1), (137, -1), (175, -1), (25, -1), (66, -1), (133, -1), (179, -1)]
best_l after optimization: -9.797775268554688
beta sum per layer: []
alpha/beta optimization time: 14.847817182540894
alpha-CROWN with intermediate bounds by MIP: tensor([[-0.51581717, -0.30928993,  0.00682449, -1.56726646, -1.43609285,
         -0.85591745, -1.36429787, -1.34530783, -2.41061020]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 929.1738891601562, ub improved 1812.8336181640625, time 153.6437
maximum relu layer improved by MIP so far 5
Linear(in_features=200, out_features=200, bias=True) 6 14 torch.Size([200])
sorted candidates ['lay14_39', 'lay14_41', 'lay14_48', 'lay14_121', 'lay14_156', 'lay14_174', 'lay14_78', 'lay14_21', 'lay14_146', 'lay14_106', 'lay14_188', 'lay14_36', 'lay14_74', 'lay14_58', 'lay14_173', 'lay14_56', 'lay14_167', 'lay14_126', 'lay14_159', 'lay14_197', 'lay14_37', 'lay14_87', 'lay14_161', 'lay14_26', 'lay14_179', 'lay14_0', 'lay14_118', 'lay14_165', 'lay14_49', 'lay14_51', 'lay14_69', 'lay14_127', 'lay14_81', 'lay14_139', 'lay14_76', 'lay14_54', 'lay14_14', 'lay14_135', 'lay14_149', 'lay14_176', 'lay14_154', 'lay14_93', 'lay14_92', 'lay14_119', 'lay14_11', 'lay14_59', 'lay14_2', 'lay14_67', 'lay14_5', 'lay14_61', 'lay14_35', 'lay14_184', 'lay14_82', 'lay14_84', 'lay14_175', 'lay14_143', 'lay14_43', 'lay14_71', 'lay14_110', 'lay14_145', 'lay14_20', 'lay14_128', 'lay14_122', 'lay14_178', 'lay14_13', 'lay14_162', 'lay14_75', 'lay14_28', 'lay14_101', 'lay14_97', 'lay14_12', 'lay14_7', 'lay14_40', 'lay14_134', 'lay14_125', 'lay14_47', 'lay14_136', 'lay14_88', 'lay14_73', 'lay14_64', 'lay14_170', 'lay14_44', 'lay14_103', 'lay14_183', 'lay14_114', 'lay14_102', 'lay14_100', 'lay14_23', 'lay14_70', 'lay14_4', 'lay14_46', 'lay14_182', 'lay14_130', 'lay14_117', 'lay14_112', 'lay14_163', 'lay14_29', 'lay14_42', 'lay14_94', 'lay14_148', 'lay14_158', 'lay14_113', 'lay14_66', 'lay14_38', 'lay14_199', 'lay14_45', 'lay14_25', 'lay14_9', 'lay14_53', 'lay14_153', 'lay14_166', 'lay14_27', 'lay14_30', 'lay14_192', 'lay14_120', 'lay14_138', 'lay14_194', 'lay14_190', 'lay14_144', 'lay14_57', 'lay14_150', 'lay14_24', 'lay14_108', 'lay14_72', 'lay14_129', 'lay14_68', 'lay14_31', 'lay14_63', 'lay14_33', 'lay14_151', 'lay14_55', 'lay14_124', 'lay14_22', 'lay14_85', 'lay14_32', 'lay14_115', 'lay14_3', 'lay14_79', 'lay14_10', 'lay14_15', 'lay14_196', 'lay14_19', 'lay14_147', 'lay14_16', 'lay14_80', 'lay14_107', 'lay14_193', 'lay14_111', 'lay14_96', 'lay14_104', 'lay14_86', 'lay14_116', 'lay14_17', 'lay14_185', 'lay14_99', 'lay14_62', 'lay14_169', 'lay14_34', 'lay14_50', 'lay14_1', 'lay14_123', 'lay14_89', 'lay14_155', 'lay14_77', 'lay14_132', 'lay14_152', 'lay14_52', 'lay14_133', 'lay14_164', 'lay14_109', 'lay14_172', 'lay14_160', 'lay14_198', 'lay14_168', 'lay14_105', 'lay14_137', 'lay14_142', 'lay14_187', 'lay14_195', 'lay14_95', 'lay14_18', 'lay14_177', 'lay14_65', 'lay14_181', 'lay14_186', 'lay14_191', 'lay14_8', 'lay14_91', 'lay14_189', 'lay14_83', 'lay14_60', 'lay14_141', 'lay14_171', 'lay14_90', 'lay14_131', 'lay14_140', 'lay14_98', 'lay14_157', 'lay14_180', 'lay14_6'] filter: 1.0
Solving MIP for lay14_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8492s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0059s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0331s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1071s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1151s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1198s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1847s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2189s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7072s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9415s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8421s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7686s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9050s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7825s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8487s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9469s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_127, [-inf,inf]=>[1e-05,1.5435518902212604] (15,-1; 9,-1), time: 16.9370s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[-1.1836878180777324,0.057448289831507404] (9,-1; 9,-1), time: 30.2401s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_121, [-inf,inf]=>[-0.9866415188795004,0.22826314837106756] (9,-1; 9,-1), time: 30.2570s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_156, [-inf,inf]=>[-1.0220022373823503,0.31935974628342073] (9,-1; 9,-1), time: 30.2683s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_188, [-inf,inf]=>[-1.0107440013454922,0.20184513521743386] (9,-1; 9,-1), time: 30.2700s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_36, [-inf,inf]=>[-1.2049880401593642,0.01672277720188558] (9,-1; 9,-1), time: 30.3195s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_106, [-inf,inf]=>[-1.2241166486358102,0.17625605328841976] (9,-1; 9,-1), time: 30.3317s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_174, [-inf,inf]=>[-0.2730853609643288,1.1726108401906443] (9,-1; 9,-1), time: 30.4631s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_173, [-inf,inf]=>[-0.453831096857259,0.7756391559096548] (9,-1; 9,-1), time: 30.7158s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6381s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6112s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_167, [-inf,inf]=>[-0.30944799198979694,0.8278786701874392] (9,-1; 9,-1), time: 30.1231s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7679s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8624s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_37, [-inf,inf]=>[-0.3862061434615379,0.5671683826809113] (9,-1; 9,-1), time: 30.1089s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_126, [-inf,inf]=>[-0.8086549209656073,0.37305828831691484] (9,-1; 9,-1), time: 30.2703s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_87, [-inf,inf]=>[-0.6256650701972382,0.37053683136166465] (9,-1; 9,-1), time: 30.1994s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1909s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_161, [-inf,inf]=>[-1.1645393942065632,0.15040971786731588] (9,-1; 9,-1), time: 30.4446s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5716s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5394s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6172s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8548s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_179, [-inf,inf]=>[-0.8692700478964546,0.19990532583515352] (9,-1; 9,-1), time: 30.1952s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6677s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6557s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6790s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6615s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8623s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6814s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6126s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[-1.2248071013682897,0.06277358878263173] (9,-1; 9,-1), time: 30.1460s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6518s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7058s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5439s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.0194s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.8239s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_76, [-inf,inf]=>[1e-05,2.8119420151945893] (15,-1; 9,-1), time: 17.1227s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8611s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_143, [-inf,inf]=>[1e-05,1.3528237176121642] (15,-1; 9,-1), time: 16.7843s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_154, [-inf,inf]=>[1e-05,1.360992170691108] (15,-1; 9,-1), time: 20.5777s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_81, [-inf,inf]=>[-0.8397537453484467,0.3559212049602775] (9,-1; 9,-1), time: 30.1801s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_75, [-inf,inf]=>[1e-05,2.7602669400926936] (15,-1; 9,-1), time: 16.9219s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6251s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_176, [-inf,inf]=>[-0.44779959494211574,0.5598940753523457] (9,-1; 9,-1), time: 30.1147s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_92, [-inf,inf]=>[-0.8195950811572523,0.0982530141983856] (9,-1; 9,-1), time: 30.0923s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_119, [-inf,inf]=>[-1.0288860797852113,0.025761570528212263] (9,-1; 9,-1), time: 30.1344s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6004s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_67, [-inf,inf]=>[-1.1625880478348485,0.17448482636357487] (9,-1; 9,-1), time: 31.1084s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_184, [-inf,inf]=>[-0.5004662442653596,0.6093198434148503] (9,-1; 9,-1), time: 30.4964s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_175, [-inf,inf]=>[-0.9323936818265377,0.02754008985634653] (9,-1; 9,-1), time: 30.2495s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_43, [-inf,inf]=>[-0.6125678851831009,0.4932010521381406] (9,-1; 9,-1), time: 30.2387s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_110, [-inf,inf]=>[-0.7301983303351245,0.2478123549726112] (9,-1; 9,-1), time: 30.0562s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_20, [-inf,inf]=>[-0.923890319611688,0.07426272842312912] (9,-1; 9,-1), time: 30.1962s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8822s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_12, [-inf,inf]=>[1e-05,1.5057927205560464] (15,-1; 9,-1), time: 16.8054s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8466s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[1e-05,1.4928297128825294] (15,-1; 9,-1), time: 16.7879s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7380s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7900s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_28, [-inf,inf]=>[-0.8451077463753627,0.3176745528549195] (9,-1; 9,-1), time: 30.0235s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1652s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4315s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7960s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_101, [-inf,inf]=>[-0.13037122195792644,0.8288335712947] (9,-1; 9,-1), time: 30.0163s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5009s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8206s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_183, [-inf,inf]=>[1e-05,1.5767581214889237] (15,-1; 9,-1), time: 17.1054s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-0.6115981165326713,0.2630319343173118] (9,-1; 9,-1), time: 30.0962s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9959s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6251s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6183s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_134, [-inf,inf]=>[-0.36744595421735265,0.6399898168125336] (9,-1; 9,-1), time: 30.1288s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_100, [-inf,inf]=>[1e-05,1.1717319617225057] (15,-1; 9,-1), time: 21.1688s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5775s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9015s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[-0.4881506493373913,0.3941244991014511] (9,-1; 9,-1), time: 30.3787s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_88, [-inf,inf]=>[-0.7292691620192834,0.3010861251082888] (9,-1; 9,-1), time: 30.1465s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_73, [-inf,inf]=>[-0.30736587626982637,0.9000679004021496] (9,-1; 9,-1), time: 30.2237s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_64, [-inf,inf]=>[-0.7217711255729612,0.2803230703652052] (9,-1; 9,-1), time: 30.1581s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_170, [-inf,inf]=>[-0.36180480605621457,0.7637907156785879] (9,-1; 9,-1), time: 30.2978s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8999s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7945s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_103, [-inf,inf]=>[-0.7065354138395379,0.5363076228966508] (9,-1; 9,-1), time: 30.2610s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6471s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_130, [-inf,inf]=>[1e-05,1.2233134454535513] (15,-1; 9,-1), time: 23.9862s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7836s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_102, [-inf,inf]=>[-0.6524628005236365,0.22778044633072736] (9,-1; 9,-1), time: 30.2510s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_70, [-inf,inf]=>[-0.41637288413511,0.5086307089398624] (9,-1; 9,-1), time: 30.1565s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6964s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7725s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7465s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7919s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5932s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_117, [-inf,inf]=>[-0.24328305868836364,0.7596181677724974] (9,-1; 9,-1), time: 30.1007s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_163, [-inf,inf]=>[-0.7040016804908498,0.18382639547254362] (9,-1; 9,-1), time: 30.3825s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6524s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7605s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_94, [-inf,inf]=>[-0.9214383969110532,0.05623283916924798] (9,-1; 9,-1), time: 30.4340s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_158, [-inf,inf]=>[-0.24537452415302044,0.8050985230011785] (9,-1; 9,-1), time: 30.6699s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_150, [-inf,inf]=>[1e-05,3.3460341406771534] (15,-1; 9,-1), time: 16.7300s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_24, [-inf,inf]=>[1e-05,1.8673029133502295] (15,-1; 9,-1), time: 16.7998s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7959s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5707s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6600s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_38, [-inf,inf]=>[-1.065771649166818,0.08884615751259128] (9,-1; 9,-1), time: 30.0992s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_129, [-inf,inf]=>[1e-05,1.4463653514381447] (15,-1; 9,-1), time: 20.3969s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_31, [-inf,inf]=>[1e-05,1.5138042095264237] (15,-1; 9,-1), time: 16.6292s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_25, [-inf,inf]=>[-0.7385184763518065,0.3061426824122952] (9,-1; 9,-1), time: 30.1976s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_9, [-inf,inf]=>[-0.7723110013384521,0.18862505128488855] (9,-1; 9,-1), time: 30.1769s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_53, [-inf,inf]=>[-0.36640381974653596,0.4444291232897958] (9,-1; 9,-1), time: 30.6930s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7181s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9205s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_166, [-inf,inf]=>[-0.838022561706405,0.03239067606570499] (9,-1; 9,-1), time: 30.1086s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6975s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_151, [-inf,inf]=>[1e-05,2.253106227616958] (15,-1; 9,-1), time: 16.6244s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_120, [-inf,inf]=>[-0.7348823291009983,0.2938607471075966] (9,-1; 9,-1), time: 30.4779s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_138, [-inf,inf]=>[-0.9983285638294033,0.0415603826096089] (9,-1; 9,-1), time: 30.3406s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_108, [-inf,inf]=>[-0.8021056866446261,0.14787734366812386] (9,-1; 9,-1), time: 30.2207s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6231s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_68, [-inf,inf]=>[-0.5347904591086629,0.4196611402777575] (9,-1; 9,-1), time: 30.3450s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.3322s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6792s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_115, [-inf,inf]=>[1e-05,2.7640699442576233] (15,-1; 9,-1), time: 17.2664s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4863s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_3, [-inf,inf]=>[1e-05,2.6451550993090076] (15,-1; 9,-1), time: 17.1691s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9861s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7245s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_147, [-inf,inf]=>[1e-05,4.213232904565668] (15,-1; 9,-1), time: 16.8286s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_16, [-inf,inf]=>[1e-05,2.3708642299612217] (15,-1; 9,-1), time: 17.3066s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8075s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5984s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_55, [-inf,inf]=>[-0.8533868165823623,0.21922603534542318] (9,-1; 9,-1), time: 30.0522s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6672s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_124, [-inf,inf]=>[-1.289043849783732,0.14268127533681296] (9,-1; 9,-1), time: 30.5246s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7275s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6726s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_79, [-inf,inf]=>[-0.05319034161715107,1.3775354652243683] (9,-1; 9,-1), time: 30.1484s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8045s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-0.4208991444779435,0.6420494200351029] (9,-1; 9,-1), time: 30.0910s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_99, [-inf,inf]=>[1e-05,1.9183402048115128] (15,-1; 9,-1), time: 17.0921s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9422s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_19, [-inf,inf]=>[-0.8281156523359726,0.2954094877081111] (9,-1; 9,-1), time: 30.4168s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_80, [-inf,inf]=>[-0.9517610607608429,0.08454200586218791] (9,-1; 9,-1), time: 30.0544s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_34, [-inf,inf]=>[1e-05,1.2123924474573942] (15,-1; 9,-1), time: 17.0244s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.4800s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9404s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6615s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8897s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7202s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_96, [-inf,inf]=>[-1.1042330299116438,0.050475086070756535] (9,-1; 9,-1), time: 30.1129s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_193, [-inf,inf]=>[-0.5092707931114066,0.33989636734597334] (9,-1; 9,-1), time: 30.8772s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_104, [-inf,inf]=>[-0.9446263606231229,0.1508390117993591] (9,-1; 9,-1), time: 30.1976s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8757s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_77, [-inf,inf]=>[1e-05,1.4963862783709412] (15,-1; 9,-1), time: 17.0697s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5667s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_185, [-inf,inf]=>[-0.6645051453550778,0.2772400966653746] (9,-1; 9,-1), time: 30.2665s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_169, [-inf,inf]=>[-0.5298906671075939,0.37542670133172046] (9,-1; 9,-1), time: 30.0717s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_142, [-inf,inf]=>[1e-05,1.616417108215578] (15,-1; 9,-1), time: 17.0446s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_89, [-inf,inf]=>[-0.7166468233485519,0.25309969428325996] (9,-1; 9,-1), time: 30.4415s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_155, [-inf,inf]=>[-0.9481787869494984,0.1053444174254748] (9,-1; 9,-1), time: 30.8797s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8644s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_181, [-inf,inf]=>[1e-05,2.3614503724684006] (15,-1; 9,-1), time: 17.1457s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4842s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_109, [-inf,inf]=>[-0.021224268613747956,1.0556008373862487] (9,-1; 9,-1), time: 30.2269s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_198, [-inf,inf]=>[-1.1511355556637344,0.20259928205237637] (9,-1; 9,-1), time: 30.1811s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_160, [-inf,inf]=>[-0.42187417322456106,0.9264473631625865] (9,-1; 9,-1), time: 30.4004s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6508s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_105, [-inf,inf]=>[-0.8978669786120613,0.0907671211475272] (9,-1; 9,-1), time: 30.0689s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8224s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_187, [-inf,inf]=>[-0.6803277867330891,0.29209886544993247] (9,-1; 9,-1), time: 30.2912s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.3926s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_18, [-inf,inf]=>[-0.733839020196038,0.2794518718222292] (9,-1; 9,-1), time: 30.2649s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_65, [-inf,inf]=>[-0.8624755528005484,0.11596059680640394] (9,-1; 9,-1), time: 30.1973s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_191, [-inf,inf]=>[-0.07264096512837927,1.3938550378102215] (9,-1; 9,-1), time: 30.1040s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_8, [-inf,inf]=>[-1.2135954117159773,0.05154604113150789] (9,-1; 9,-1), time: 30.0627s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_91, [-inf,inf]=>[-0.9147685295836455,0.0721892457221608] (9,-1; 9,-1), time: 30.3930s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_141, [-inf,inf]=>[1e-05,1.4889882854783685] (15,-1; 9,-1), time: 19.4019s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_189, [-inf,inf]=>[-0.8244112244483492,0.27733875217610937] (9,-1; 9,-1), time: 30.0712s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_83, [-inf,inf]=>[-0.28181374471319837,0.6462466779199648] (9,-1; 9,-1), time: 30.3330s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_171, [-inf,inf]=>[-0.49655157683846823,0.44064101274649514] (9,-1; 9,-1), time: 30.1708s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_90, [-inf,inf]=>[-1.0239538901332876,0.06460466560998174] (9,-1; 9,-1), time: 30.1272s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_140, [-inf,inf]=>[-0.021963238215282555,1.2195321312247462] (9,-1; 9,-1), time: 30.2741s, #vars: 2825, #constrs: 2360, improved: True
Solving MIP for lay14_157, [-inf,inf]=>[-0.714322158842512,0.0984453221367492] (9,-1; 9,-1), time: 30.0886s, #vars: 2825, #constrs: 2360, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 5 has unstable to stable neurons: [(30, -1), (61, 1), (3, -1), (68, -1), (109, -1), (197, -1), (39, -1), (40, -1), (147, -1), (154, -1), (132, -1), (95, -1), (111, -1), (74, -1), (96, -1), (145, -1), (146, 1), (35, -1), (118, -1), (58, -1), (125, -1), (67, 1), (119, -1), (60, -1), (70, -1), (46, -1), (19, -1), (103, -1), (172, -1), (124, -1), (14, -1), (127, -1), (12, -1), (164, -1), (163, 1), (15, -1), (5, -1), (87, -1), (84, -1), (136, -1), (47, -1), (90, -1), (28, -1), (151, -1), (139, -1), (86, 1), (21, -1), (4, 1), (131, -1), (24, -1), (120, 1), (82, -1), (27, 1), (129, 1), (22, -1), (2, -1), (160, 1), (7, -1), (57, -1), (66, 1), (99, -1), (20, -1), (1, -1), (128, -1), (190, -1), (142, -1), (130, -1), (115, -1), (101, -1), (140, -1), (150, -1), (97, -1), (51, -1), (62, -1), (199, 1), (43, -1), (75, 1), (121, -1), (63, -1), (141, -1), (55, -1), (170, -1), (48, -1), (152, -1), (78, -1), (8, -1), (143, 1), (181, -1), (196, -1), (31, -1), (177, -1), (133, 1), (16, -1), (180, -1), (9, -1), (106, -1), (25, -1), (158, -1), (159, -1), (153, 1), (156, -1), (195, 1), (167, -1), (10, -1), (85, -1), (178, -1), (193, 1), (50, -1), (89, -1), (29, -1), (179, -1), (186, -1), (72, -1), (53, -1), (56, -1), (184, -1), (105, -1), (191, 1), (0, -1), (100, -1), (88, -1), (113, 1), (165, -1), (162, -1), (168, -1), (92, -1), (42, -1), (137, -1), (126, 1), (6, -1), (135, -1), (26, -1), (11, 1), (157, -1), (104, -1), (192, -1), (102, -1), (108, -1), (112, -1), (18, -1), (77, -1), (185, -1), (59, -1), (32, -1), (144, -1), (138, -1), (94, -1)]
best_l after optimization: -1.3440232276916504
beta sum per layer: []
alpha/beta optimization time: 14.918920516967773
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.39149141,  0.58261919,  0.90692568, -0.55926514, -0.40807962,
          0.07483912, -0.60625315, -0.40784454, -1.31845617]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 5181.02001953125, ub improved 7221.970703125, time 210.4069
maximum relu layer improved by MIP so far 6
Linear(in_features=200, out_features=200, bias=True) 7 16 torch.Size([200])
sorted candidates ['lay16_100', 'lay16_153', 'lay16_168', 'lay16_140', 'lay16_5', 'lay16_175', 'lay16_32', 'lay16_178', 'lay16_1', 'lay16_157', 'lay16_103', 'lay16_92', 'lay16_159', 'lay16_177', 'lay16_146', 'lay16_123', 'lay16_113', 'lay16_28', 'lay16_130', 'lay16_4', 'lay16_7', 'lay16_72', 'lay16_189', 'lay16_164', 'lay16_194', 'lay16_55', 'lay16_105', 'lay16_104', 'lay16_95', 'lay16_107', 'lay16_53', 'lay16_185', 'lay16_36', 'lay16_89', 'lay16_121', 'lay16_71', 'lay16_59', 'lay16_156', 'lay16_196', 'lay16_16', 'lay16_129', 'lay16_182', 'lay16_142', 'lay16_70', 'lay16_2', 'lay16_52', 'lay16_150', 'lay16_158', 'lay16_176', 'lay16_38', 'lay16_23', 'lay16_31', 'lay16_47', 'lay16_147', 'lay16_167', 'lay16_119', 'lay16_115', 'lay16_82', 'lay16_198', 'lay16_165', 'lay16_114', 'lay16_39', 'lay16_143', 'lay16_145', 'lay16_30', 'lay16_197', 'lay16_117', 'lay16_66', 'lay16_3', 'lay16_50', 'lay16_192', 'lay16_8', 'lay16_173', 'lay16_83', 'lay16_186', 'lay16_101', 'lay16_27', 'lay16_57', 'lay16_86', 'lay16_124', 'lay16_79', 'lay16_179', 'lay16_112', 'lay16_80', 'lay16_155', 'lay16_25', 'lay16_106', 'lay16_151', 'lay16_67', 'lay16_88', 'lay16_0', 'lay16_125', 'lay16_120', 'lay16_24', 'lay16_96', 'lay16_133', 'lay16_160', 'lay16_62', 'lay16_108', 'lay16_61', 'lay16_91', 'lay16_58', 'lay16_20', 'lay16_135', 'lay16_69', 'lay16_144', 'lay16_109', 'lay16_122', 'lay16_43', 'lay16_87', 'lay16_90', 'lay16_97', 'lay16_56', 'lay16_33', 'lay16_187', 'lay16_17', 'lay16_139', 'lay16_19', 'lay16_49', 'lay16_51', 'lay16_184', 'lay16_181', 'lay16_183', 'lay16_162', 'lay16_15', 'lay16_85', 'lay16_9', 'lay16_149', 'lay16_131', 'lay16_29', 'lay16_60', 'lay16_118', 'lay16_132', 'lay16_14', 'lay16_76', 'lay16_68', 'lay16_6', 'lay16_64', 'lay16_75', 'lay16_154', 'lay16_141', 'lay16_161', 'lay16_137', 'lay16_127', 'lay16_99', 'lay16_35', 'lay16_110', 'lay16_18', 'lay16_48', 'lay16_195', 'lay16_42', 'lay16_126', 'lay16_84', 'lay16_37', 'lay16_128', 'lay16_22', 'lay16_63', 'lay16_11', 'lay16_174', 'lay16_44', 'lay16_54', 'lay16_191', 'lay16_13', 'lay16_10', 'lay16_73', 'lay16_111', 'lay16_34', 'lay16_102', 'lay16_169', 'lay16_77', 'lay16_74', 'lay16_94', 'lay16_199', 'lay16_40', 'lay16_41', 'lay16_172', 'lay16_180', 'lay16_134', 'lay16_45', 'lay16_170', 'lay16_136', 'lay16_193', 'lay16_93', 'lay16_116', 'lay16_163', 'lay16_190', 'lay16_188', 'lay16_21', 'lay16_26', 'lay16_138', 'lay16_12', 'lay16_65', 'lay16_148', 'lay16_166', 'lay16_81', 'lay16_78', 'lay16_98', 'lay16_152', 'lay16_171', 'lay16_46'] filter: 1.0
Solving MIP for lay16_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4552s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5213s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6672s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8371s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8429s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0006s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0987s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7359s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4015s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9130s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.2500s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.6210s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3428s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_100, [-inf,inf]=>[-1.1025241385831526,0.3797925623029519] (9,-1; 9,-1), time: 30.1967s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_175, [-inf,inf]=>[-1.3910535903954255,0.21486857156194997] (9,-1; 9,-1), time: 30.2950s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_140, [-inf,inf]=>[-1.5494250760180666,0.17338411078864324] (9,-1; 9,-1), time: 30.5748s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_103, [-inf,inf]=>[-1.6615937077506389,0.12973330165752098] (9,-1; 9,-1), time: 30.5890s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_5, [-inf,inf]=>[-0.9159513650740208,0.7011046571119809] (9,-1; 9,-1), time: 30.6777s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_157, [-inf,inf]=>[-1.79255679672795,0.34130503435810355] (9,-1; 9,-1), time: 30.7488s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_178, [-inf,inf]=>[-1.3324536278809036,0.26943926762705944] (9,-1; 9,-1), time: 30.9979s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2180s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_113, [-inf,inf]=>[-1.2709769575046028,0.7671011762786021] (9,-1; 9,-1), time: 30.0760s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1069s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_130, [-inf,inf]=>[-0.9914509353493399,0.4715755025134444] (9,-1; 9,-1), time: 30.1563s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5111s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_189, [-inf,inf]=>[-0.9655039617708039,0.33403113820022134] (9,-1; 9,-1), time: 30.0536s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4471s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_4, [-inf,inf]=>[-1.3577014768732765,0.7177990162027631] (9,-1; 9,-1), time: 30.6036s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1415s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3010s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_194, [-inf,inf]=>[-1.2424507462317769,0.48525743159226387] (9,-1; 9,-1), time: 30.1087s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_55, [-inf,inf]=>[-1.3719661810964832,0.24082887027051653] (9,-1; 9,-1), time: 30.3537s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4877s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_105, [-inf,inf]=>[-1.4183504108758258,0.03475231685704207] (9,-1; 9,-1), time: 30.3364s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_95, [-inf,inf]=>[-0.604233249072123,0.8678427242457374] (9,-1; 9,-1), time: 30.2654s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_104, [-inf,inf]=>[-1.3586191007048631,0.06222576221010765] (9,-1; 9,-1), time: 30.3873s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_150, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5117s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1595s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0793s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4562s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.0221s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3017s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2720s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.9446s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6371s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.3261s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5074s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7449s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2520s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_107, [-inf,inf]=>[-1.2640477128325533,0.4412195195463099] (9,-1; 9,-1), time: 30.4176s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_36, [-inf,inf]=>[-1.2628584250369381,0.3303899186532847] (9,-1; 9,-1), time: 30.5716s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_71, [-inf,inf]=>[-1.4363654667487367,0.0820386102922019] (9,-1; 9,-1), time: 30.7952s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_59, [-inf,inf]=>[-1.2752715725042063,0.22102492093785464] (9,-1; 9,-1), time: 30.1101s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1092s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_156, [-inf,inf]=>[-1.0962242329941374,0.6486282392626221] (9,-1; 9,-1), time: 30.2690s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_129, [-inf,inf]=>[-1.411244976299889,0.23303719753784202] (9,-1; 9,-1), time: 30.1190s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_196, [-inf,inf]=>[-1.0346269019193435,0.330610494603795] (9,-1; 9,-1), time: 30.5914s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4979s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2313s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0982s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4256s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_52, [-inf,inf]=>[-1.4574538896855014,0.13718899233579626] (9,-1; 9,-1), time: 30.4035s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6007s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7619s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3355s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_23, [-inf,inf]=>[-1.302541392972478,0.2805329403606097] (9,-1; 9,-1), time: 30.4267s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_176, [-inf,inf]=>[-0.27178110732895444,1.6335988942373219] (9,-1; 9,-1), time: 31.0151s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6701s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_31, [-inf,inf]=>[-1.7561253849651302,0.18306227208575818] (9,-1; 9,-1), time: 30.5981s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3749s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2960s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_167, [-inf,inf]=>[-0.9731368164331946,0.2667686194831833] (9,-1; 9,-1), time: 30.2721s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5865s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3512s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_198, [-inf,inf]=>[-0.6449350569471337,0.6013377383151524] (9,-1; 9,-1), time: 30.3335s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4542s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6539s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_165, [-inf,inf]=>[-0.7856535954302839,0.4953432717559609] (9,-1; 9,-1), time: 30.3066s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_114, [-inf,inf]=>[-1.7147247920498816,0.1337090491563002] (9,-1; 9,-1), time: 30.4977s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1974s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7312s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2486s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1849s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3266s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_30, [-inf,inf]=>[-0.8264222611911811,0.5228763606274969] (9,-1; 9,-1), time: 30.9475s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_151, [-inf,inf]=>[1e-05,3.2639110925062043] (15,-1; 9,-1), time: 17.6990s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_120, [-inf,inf]=>[1e-05,1.9443995112797012] (15,-1; 9,-1), time: 17.4171s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_3, [-inf,inf]=>[-1.2390390077766302,0.2894019748922803] (9,-1; 9,-1), time: 30.5716s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_8, [-inf,inf]=>[-1.6599467982119278,0.020411099829307756] (9,-1; 9,-1), time: 30.2331s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_83, [-inf,inf]=>[-1.0395232872855251,0.41508784693643996] (9,-1; 9,-1), time: 30.0334s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_173, [-inf,inf]=>[-1.2822101900812235,0.3941306180193368] (9,-1; 9,-1), time: 30.5739s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.3592s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4381s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3887s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_86, [-inf,inf]=>[-0.7695057854785059,0.3615743185440087] (9,-1; 9,-1), time: 30.1510s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6926s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_80, [-inf,inf]=>[-1.4791730395870115,0.24424529721091892] (9,-1; 9,-1), time: 30.9992s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_106, [-inf,inf]=>[-1.460657669863383,0.6204927068276966] (9,-1; 9,-1), time: 30.1524s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_155, [-inf,inf]=>[-1.1112659023341978,0.21447170610170138] (9,-1; 9,-1), time: 31.5047s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_67, [-inf,inf]=>[-1.5764517135441827,0.24117887903838522] (9,-1; 9,-1), time: 30.3210s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1940s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1735s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3700s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.4073s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7035s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_133, [-inf,inf]=>[-0.6183904884765641,0.9351147046133523] (9,-1; 9,-1), time: 30.0581s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_160, [-inf,inf]=>[-1.4250206119661635,0.35453261159247973] (9,-1; 9,-1), time: 30.4084s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_62, [-inf,inf]=>[-0.7671671097231657,0.4563639738327865] (9,-1; 9,-1), time: 30.1987s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8013s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5865s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7703s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_61, [-inf,inf]=>[-0.34963249091028,1.0344482810875633] (9,-1; 9,-1), time: 30.4324s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4018s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_91, [-inf,inf]=>[-1.1359089766411026,0.08198259245544082] (9,-1; 9,-1), time: 30.1088s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4409s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_17, [-inf,inf]=>[1e-05,2.469858134611162] (15,-1; 9,-1), time: 17.3658s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4530s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2112s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_20, [-inf,inf]=>[-1.0572228674179616,0.14765269711625412] (9,-1; 9,-1), time: 30.3127s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_135, [-inf,inf]=>[-1.7108577285432358,0.02832833714735663] (9,-1; 9,-1), time: 30.1924s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_69, [-inf,inf]=>[-0.8602095433023733,0.6156534720052795] (9,-1; 9,-1), time: 30.4375s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_15, [-inf,inf]=>[1e-05,2.0594567157947106] (15,-1; 9,-1), time: 17.9439s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1727s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6461s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_90, [-inf,inf]=>[-0.24519942177929943,0.898699895166892] (9,-1; 9,-1), time: 30.3538s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_43, [-inf,inf]=>[-1.2238011595389438,0.27139451770122175] (9,-1; 9,-1), time: 31.0662s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0909s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5318s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6381s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_33, [-inf,inf]=>[-1.1774014463778164,0.2437916447732024] (9,-1; 9,-1), time: 30.2607s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_139, [-inf,inf]=>[-0.9249309956787013,0.3516585319822598] (9,-1; 9,-1), time: 30.2793s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_49, [-inf,inf]=>[-1.113283337273327,0.1958018289399732] (9,-1; 9,-1), time: 30.2210s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_51, [-inf,inf]=>[-0.8280468361512245,0.2247820927675357] (9,-1; 9,-1), time: 30.2046s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5749s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_181, [-inf,inf]=>[-0.8879477397241172,0.4143505630045318] (9,-1; 9,-1), time: 30.1790s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.6348s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4716s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2062s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_85, [-inf,inf]=>[-1.064581820080944,0.21017426038020565] (9,-1; 9,-1), time: 30.5631s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5098s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_149, [-inf,inf]=>[-0.9538353021412791,0.48259839527504683] (9,-1; 9,-1), time: 30.4170s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4740s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1328s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_131, [-inf,inf]=>[-0.30813746818638815,1.0751965654844362] (9,-1; 9,-1), time: 30.5846s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8205s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3985s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_132, [-inf,inf]=>[-0.4797456201868422,0.9426518283372511] (9,-1; 9,-1), time: 30.3409s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_14, [-inf,inf]=>[-0.8275239211598849,0.4191564320031822] (9,-1; 9,-1), time: 30.2052s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_76, [-inf,inf]=>[-0.4289942048791363,0.8790527283607541] (9,-1; 9,-1), time: 30.3481s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4075s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1845s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_75, [-inf,inf]=>[-0.7419733038696456,0.5979007992997618] (9,-1; 9,-1), time: 30.2806s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_154, [-inf,inf]=>[-0.6212110471240341,0.6234545118373412] (9,-1; 9,-1), time: 30.0308s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2838s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_137, [-inf,inf]=>[-0.2521350005713635,0.9287669876399753] (9,-1; 9,-1), time: 30.4375s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3388s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_127, [-inf,inf]=>[-0.8101693132760919,0.45802976647052357] (9,-1; 9,-1), time: 30.2791s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3441s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_35, [-inf,inf]=>[-1.0987537343730824,0.2870035267558234] (9,-1; 9,-1), time: 31.1951s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3465s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_110, [-inf,inf]=>[-1.6113615193042594,0.0645614150093083] (9,-1; 9,-1), time: 30.1945s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_18, [-inf,inf]=>[-1.5165694580003377,0.06603816149413813] (9,-1; 9,-1), time: 30.0330s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5900s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1103s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4139s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2415s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5523s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_195, [-inf,inf]=>[-1.0663827356812314,0.16278101500211586] (9,-1; 9,-1), time: 30.4591s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.0445s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0713s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3530s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_22, [-inf,inf]=>[-0.7548608559729258,0.6082408184792473] (9,-1; 9,-1), time: 30.0797s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_63, [-inf,inf]=>[-1.556071003130203,0.10972426428518892] (9,-1; 9,-1), time: 30.2852s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_11, [-inf,inf]=>[-0.6212436243938324,0.5531885069785166] (9,-1; 9,-1), time: 30.5337s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_44, [-inf,inf]=>[-1.542750386643333,0.06588977388565617] (9,-1; 9,-1), time: 30.0374s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3040s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2585s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_191, [-inf,inf]=>[-1.017686163259829,0.1627566525912346] (9,-1; 9,-1), time: 30.0822s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_13, [-inf,inf]=>[-1.643321372579556,0.10511018602009528] (9,-1; 9,-1), time: 30.3147s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.3837s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4595s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_193, [-inf,inf]=>[1e-05,4.950614923432978] (15,-1; 9,-1), time: 17.5120s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_111, [-inf,inf]=>[-1.7320965209484642,0.3356347535394515] (9,-1; 9,-1), time: 30.4946s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0590s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1713s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3185s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_34, [-inf,inf]=>[-1.1427167290405982,0.1619853234096323] (9,-1; 9,-1), time: 31.5510s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4110s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_21, [-inf,inf]=>[1e-05,2.0815295973177688] (15,-1; 9,-1), time: 17.3063s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_94, [-inf,inf]=>[-1.2261338537079407,0.31106629077414616] (9,-1; 9,-1), time: 30.3041s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_199, [-inf,inf]=>[-0.206973337069766,1.3536315436566253] (9,-1; 9,-1), time: 30.4005s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_138, [-inf,inf]=>[1e-05,4.113128328971317] (15,-1; 9,-1), time: 17.8487s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_65, [-inf,inf]=>[1e-05,2.5254304463563653] (15,-1; 9,-1), time: 17.4720s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_134, [-inf,inf]=>[-0.0369621395395279,1.7910283381135703] (9,-1; 9,-1), time: 30.4979s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_136, [-inf,inf]=>[-1.183953100625332,0.06427129982184873] (9,-1; 9,-1), time: 30.5904s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_166, [-inf,inf]=>[1e-05,3.1780957345708187] (15,-1; 9,-1), time: 17.8236s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_93, [-inf,inf]=>[-1.5156618999296692,0.006231941754674758] (9,-1; 9,-1), time: 30.2957s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_163, [-inf,inf]=>[-1.3545281666421798,0.04652003834828551] (9,-1; 9,-1), time: 31.4292s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_26, [-inf,inf]=>[-0.8643791561943459,0.5688530903856376] (9,-1; 9,-1), time: 30.4542s, #vars: 3183, #constrs: 2797, improved: True
Solving MIP for lay16_78, [-inf,inf]=>[-1.0709834933690339,0.46634429752255263] (9,-1; 9,-1), time: 30.6876s, #vars: 3183, #constrs: 2797, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 6 has unstable to stable neurons: [(39, -1), (48, -1), (78, -1), (21, -1), (146, -1), (74, -1), (58, -1), (56, -1), (159, -1), (197, -1), (26, -1), (0, -1), (118, -1), (165, -1), (49, -1), (51, -1), (127, 1), (139, -1), (76, 1), (54, -1), (14, -1), (135, -1), (149, -1), (154, 1), (93, -1), (11, -1), (59, -1), (2, -1), (5, -1), (61, -1), (35, -1), (82, -1), (84, -1), (143, 1), (71, -1), (145, -1), (128, -1), (122, -1), (178, -1), (13, -1), (162, -1), (75, 1), (97, -1), (12, 1), (7, 1), (125, -1), (136, -1), (44, -1), (183, 1), (114, -1), (100, 1), (23, -1), (4, -1), (46, -1), (182, -1), (130, 1), (112, -1), (29, -1), (42, -1), (148, -1), (113, -1), (66, -1), (199, -1), (45, -1), (153, -1), (27, -1), (30, -1), (192, -1), (194, -1), (190, -1), (144, -1), (57, -1), (150, 1), (24, 1), (72, -1), (129, 1), (31, 1), (63, -1), (33, -1), (151, 1), (22, -1), (85, -1), (32, -1), (115, 1), (3, 1), (15, -1), (196, -1), (147, 1), (16, 1), (107, -1), (111, -1), (86, -1), (116, -1), (17, -1), (99, 1), (62, -1), (34, 1), (50, -1), (1, -1), (123, -1), (77, 1), (132, -1), (152, -1), (52, -1), (133, -1), (164, -1), (172, -1), (168, -1), (137, -1), (142, 1), (195, -1), (95, -1), (177, -1), (181, 1), (186, -1), (60, -1), (141, 1), (131, -1), (98, -1), (180, -1), (6, -1)]
best_l after optimization: 3.6318397521972656
beta sum per layer: []
alpha/beta optimization time: 15.15237045288086
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.93907022,  1.10515308,  1.41756868,  0.03613329,  0.19684124,
          0.64479637, -0.17357635,  0.15957785, -0.69372463]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 18436.1875, ub improved 26314.857421875, time 213.8931
maximum relu layer improved by MIP so far 7
Linear(in_features=200, out_features=10, bias=True) 8 18 torch.Size([9, 1])
MIP finished with 1076.2399249076843s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
best_l after optimization: 6.700902462005615
beta sum per layer: []
alpha/beta optimization time: 12.368674516677856
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 1.22714090,  1.43566608,  1.72583675,  0.43429232,  0.56650925,
          1.02020884,  0.09357977,  0.45958042, -0.26191187]], device='cuda:0') None
Split layers:
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
refined global lb: tensor([[ 1.22714090],
        [ 1.43566608],
        [ 1.72583675],
        [ 0.43429232],
        [ 0.56650925],
        [ 1.02020884],
        [ 0.09357977],
        [ 0.45958042],
        [-0.26191187]], device='cuda:0') min: tensor(-0.26191187, device='cuda:0')
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200]), torch.Size([1, 9, 200])]

Properties batch 0, size 1
Remaining timeout: 389.17212319374084
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.2271409034729004.

Properties batch 1, size 1
Remaining timeout: 389.0597839355469
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.4356660842895508.

Properties batch 2, size 1
Remaining timeout: 388.99856424331665
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.7258367538452148.

Properties batch 3, size 1
Remaining timeout: 388.93591713905334
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.4342923164367676.

Properties batch 4, size 1
Remaining timeout: 388.87445616722107
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.5665092468261719.

Properties batch 5, size 1
Remaining timeout: 388.8115463256836
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.0202088356018066.

Properties batch 6, size 1
Remaining timeout: 388.74925446510315
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.09357976913452148.

Properties batch 7, size 1
Remaining timeout: 388.68672227859497
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.4595804214477539.

Properties batch 8, size 1
Remaining timeout: 388.6241366863251
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-0.26191187]], device='cuda:0') need to verify.
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[])
  (/1): BoundParams(name=/1, inputs=[])
  (/2): BoundParams(name=/2, inputs=[])
  (/3): BoundParams(name=/3, inputs=[])
  (/4): BoundParams(name=/4, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/9): BoundParams(name=/9, inputs=[])
  (/10): BoundParams(name=/10, inputs=[])
  (/11): BoundParams(name=/11, inputs=[])
  (/12): BoundParams(name=/12, inputs=[])
  (/13): BoundParams(name=/13, inputs=[])
  (/14): BoundParams(name=/14, inputs=[])
  (/15): BoundParams(name=/15, inputs=[])
  (/16): BoundParams(name=/16, inputs=[])
  (/17): BoundParams(name=/17, inputs=[])
  (/18): BoundParams(name=/18, inputs=[])
  (/19): BoundShape(name=/19, inputs=[/0])
  (/20): BoundConstant(name=/20, inputs=[])
  (/21): BoundGather(name=/21, inputs=[/19, /20])
  (/22): BoundConstant(name=/22, inputs=[])
  (/23): BoundUnsqueeze(name=/23, inputs=[/21])
  (/24): BoundUnsqueeze(name=/24, inputs=[/22])
  (/25): BoundConcat(name=/25, inputs=[/23, /24])
  (/26): BoundReshape(name=/26, inputs=[/0, /25])
  (/input): BoundLinear(name=/input, inputs=[/26, /1, /2])
  (/28): BoundRelu(name=/28, inputs=[/input])
  (/input.3): BoundLinear(name=/input.3, inputs=[/28, /3, /4])
  (/30): BoundRelu(name=/30, inputs=[/input.3])
  (/input.7): BoundLinear(name=/input.7, inputs=[/30, /5, /6])
  (/32): BoundRelu(name=/32, inputs=[/input.7])
  (/input.11): BoundLinear(name=/input.11, inputs=[/32, /7, /8])
  (/34): BoundRelu(name=/34, inputs=[/input.11])
  (/input.15): BoundLinear(name=/input.15, inputs=[/34, /9, /10])
  (/36): BoundRelu(name=/36, inputs=[/input.15])
  (/input.19): BoundLinear(name=/input.19, inputs=[/36, /11, /12])
  (/38): BoundRelu(name=/38, inputs=[/input.19])
  (/input.23): BoundLinear(name=/input.23, inputs=[/38, /13, /14])
  (/40): BoundRelu(name=/40, inputs=[/input.23])
  (/input.27): BoundLinear(name=/input.27, inputs=[/40, /15, /16])
  (/42): BoundRelu(name=/42, inputs=[/input.27])
  (/43): BoundLinear(name=/43, inputs=[/42, /17, /18])
)
Model prediction is: tensor([-2.16338587,  5.30384159, -1.20036483, -1.64464474, -1.12465811,
        -0.42532018, -0.87205619,  0.64180905, -0.16331565, -0.73634005],
       device='cuda:0')
build_with_refined_bounds batch [0/1]
setting alpha for layer /28 start_node /43 with alignment adjustment
setting alpha for layer /30 start_node /43 with alignment adjustment
setting alpha for layer /32 start_node /43 with alignment adjustment
setting alpha for layer /34 start_node /43 with alignment adjustment
setting alpha for layer /36 start_node /43 with alignment adjustment
setting alpha for layer /38 start_node /43 with alignment adjustment
setting alpha for layer /40 start_node /43 with alignment adjustment
setting alpha for layer /42 start_node /43 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200]), torch.Size([1, 1, 200])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.26191187]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.7,/input.11,/input.23,/input.27,/input.15,/input,/input.19,/input.3,/43
Split layers:
  BoundLinear(name=/input.27, inputs=[/40, /15, /16]): [(BoundRelu(name=/42, inputs=[/input.27]), 0)]
  BoundLinear(name=/input.19, inputs=[/36, /11, /12]): [(BoundRelu(name=/38, inputs=[/input.19]), 0)]
  BoundLinear(name=/input, inputs=[/26, /1, /2]): [(BoundRelu(name=/28, inputs=[/input]), 0)]
  BoundLinear(name=/input.15, inputs=[/34, /9, /10]): [(BoundRelu(name=/36, inputs=[/input.15]), 0)]
  BoundLinear(name=/input.7, inputs=[/30, /5, /6]): [(BoundRelu(name=/32, inputs=[/input.7]), 0)]
  BoundLinear(name=/input.3, inputs=[/28, /3, /4]): [(BoundRelu(name=/30, inputs=[/input.3]), 0)]
  BoundLinear(name=/input.11, inputs=[/32, /7, /8]): [(BoundRelu(name=/34, inputs=[/input.11]), 0)]
  BoundLinear(name=/input.23, inputs=[/38, /13, /14]): [(BoundRelu(name=/40, inputs=[/input.23]), 0)]
Keeping slopes for these layers: ['/43']
Keeping slopes for these layers: ['/43']
Node /28 input 0: size torch.Size([200]) unstable 54
Node /30 input 0: size torch.Size([200]) unstable 44
Node /32 input 0: size torch.Size([200]) unstable 44
Node /34 input 0: size torch.Size([200]) unstable 56
Node /36 input 0: size torch.Size([200]) unstable 69
Node /38 input 0: size torch.Size([200]) unstable 53
Node /40 input 0: size torch.Size([200]) unstable 79
Node /42 input 0: size torch.Size([200]) unstable 86
-----------------
# of unstable neurons: 485
-----------------

BaB round 1
batch: 1
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.27, 5] 
split level 1: [/input.27, 4] 
split level 2: [/input.27, 100] 
split level 3: [/input.27, 175] 
split level 4: [/input.27, 156] 
split level 5: [/input.27, 194] 
pruning_in_iteration open status: True
ratio of positive domain = 54 / 64 = 0.84375
pruning-in-iteration extra time: 0.015110969543457031
Time: prepare 0.0186    beta_bound 0.6227    bound 0.6227    transfer 0.0007    finalize 0.0100    func 0.6521    
Accumulated time: func 0.6521    prepare 0.0199    bound 0.6227    beta_bound 0.6227    transfer 0.0007    finalize 0.0100    
batch bounding time:  0.6521859169006348
Current worst splitting domains lb-rhs (depth):
-0.26191 (6), -0.25632 (6), -0.18037 (6), -0.15451 (6), -0.15056 (6), -0.10818 (6), -0.08414 (6), -0.04352 (6), -0.03083 (6), -0.01745 (6), 
length of domains: 10
Time: pickout 0.0027    decision 0.3340    set_bounds 0.0033    solve 0.6522    add 0.0018    
Accumulated time: pickout 0.0027    decision 0.3340    set_bounds 0.0033    solve 0.6522    add 0.0018    
Current (lb-rhs): -0.26191186904907227
10 domains visited
Cumulative time: 1.1023693084716797

BaB round 2
batch: 10
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.27, 55] [/input.19, 114] [/input.27, 157] [/input.27, 55] [/input.27, 55] [/input.27, 55] [/input.27, 55] [/input.27, 157] [/input.27, 55] [/input.27, 55] 
split level 1: [/input.19, 114] [/input.27, 55] [/input.27, 55] [/input.19, 114] [/input.19, 114] [/input.19, 114] [/input.19, 114] [/input.27, 55] [/input.19, 114] [/input.19, 176] 
split level 2: [/input.27, 173] [/input.27, 173] [/input.27, 173] [/input.27, 173] [/input.19, 176] [/input.27, 173] [/input.27, 173] [/input.27, 173] [/input.27, 173] [/input.19, 114] 

all verified at 9th iter
pruning_in_iteration open status: True
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 0.006692171096801758
Time: prepare 0.0210    beta_bound 0.2033    bound 0.2033    transfer 0.0008    finalize 0.0139    func 0.2390    
Accumulated time: func 0.8911    prepare 0.0415    bound 0.8261    beta_bound 0.8259    transfer 0.0015    finalize 0.0239    
batch bounding time:  0.23914003372192383
length of domains: 0
Time: pickout 0.0016    decision 0.0360    set_bounds 0.0038    solve 0.2392    add 0.0002    
Accumulated time: pickout 0.0043    decision 0.3699    set_bounds 0.0072    solve 0.8914    add 0.0020    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10 domains visited
Cumulative time: 1.3847167491912842

Result: safe in 1112.9094 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):1112.8982938915117, max time: 1112.9094228744507
mean time for verified SAFE instances(total 1): 1112.9094228744507, max time: 1112.9094228744507
safe (total 1), index: [0]
