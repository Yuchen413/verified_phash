/home/hongjixu/miniconda3/envs/alpha-beta-crown/lib/python3.11/site-packages/onnx2pytorch/convert/layer.py:29: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at /opt/conda/conda-bld/pytorch_1708025845868/work/torch/csrc/utils/tensor_numpy.cpp:206.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/hongjixu/miniconda3/envs/alpha-beta-crown/lib/python3.11/site-packages/onnx2pytorch/convert/model.py:151: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  warnings.warn(
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: max
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: false
  csv_name: instances.csv
  results_file: out.txt
  root_path: ../../vnncomp2023_benchmarks/benchmarks/vggnet16
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: true
  output_file: /home/hongjixu/Verifier_Development/tests/gpu_tests/vnncomp23/vggnet16/master_outputs/1.pkl
  return_optimized_model: false
model:
  name: null
  path: null
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 1
  end: 2
  select_instance: null
  num_outputs: 1000
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: null
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 1
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: forward+backward
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 16
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 10
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: true
    max_dim: 100
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: sb
    candidates: 3
    reduceop: min
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      branching_point_node: ''
      branching_point_db: []
      num_branches: 2
      branching_point_refinement: false
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic: false
      dynamic_bbps: false
      dynamic_beta_heuristic: false
      beta_heuristic: false
      dynamic_options: [uniform, three_left, three_right]
    input_split:
      enable: true
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_primary_spec: null
      sb_primary_spec_iter: 1
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_zero_crossing_score: false
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: input_bab
  pgd_steps: 100
  pgd_restarts: 30
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: true
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Wed Mar 27 04:35:33 2024 on huan-c4140-server
customized start/end sample from instance 1 to 2 in instances.csv
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx onnx/vgg16-7.onnx
Using vnnlib vnnlib/spec1_football_helmet.vnnlib
Precompiled vnnlib file found at ../../vnncomp2023_benchmarks/benchmarks/vggnet16/vnnlib/spec1_football_helmet.vnnlib.compiled
Loading onnx ../../vnncomp2023_benchmarks/benchmarks/vggnet16/onnx/vgg16-7.onnx wih quirks {}
Total VNNLIB file length: 1, max property batch size: 1, total number of batches: 1

Properties batch 0, size 1
Remaining timeout: 1191.4855754375458
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.,  0.,  0.]]], dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
torch allclose failed: norm 3.884386842401e-06
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[], perturbed=False)
  (/52): BoundParams(name=/52, inputs=[], perturbed=False)
  (/53): BoundParams(name=/53, inputs=[], perturbed=False)
  (/54): BoundParams(name=/54, inputs=[], perturbed=False)
  (/55): BoundParams(name=/55, inputs=[], perturbed=False)
  (/56): BoundParams(name=/56, inputs=[], perturbed=False)
  (/57): BoundParams(name=/57, inputs=[], perturbed=False)
  (/58): BoundParams(name=/58, inputs=[], perturbed=False)
  (/59): BoundParams(name=/59, inputs=[], perturbed=False)
  (/60): BoundParams(name=/60, inputs=[], perturbed=False)
  (/61): BoundParams(name=/61, inputs=[], perturbed=False)
  (/62): BoundParams(name=/62, inputs=[], perturbed=False)
  (/63): BoundParams(name=/63, inputs=[], perturbed=False)
  (/64): BoundParams(name=/64, inputs=[], perturbed=False)
  (/65): BoundParams(name=/65, inputs=[], perturbed=False)
  (/66): BoundParams(name=/66, inputs=[], perturbed=False)
  (/67): BoundParams(name=/67, inputs=[], perturbed=False)
  (/68): BoundParams(name=/68, inputs=[], perturbed=False)
  (/69): BoundParams(name=/69, inputs=[], perturbed=False)
  (/70): BoundParams(name=/70, inputs=[], perturbed=False)
  (/71): BoundParams(name=/71, inputs=[], perturbed=False)
  (/72): BoundParams(name=/72, inputs=[], perturbed=False)
  (/73): BoundParams(name=/73, inputs=[], perturbed=False)
  (/74): BoundParams(name=/74, inputs=[], perturbed=False)
  (/75): BoundParams(name=/75, inputs=[], perturbed=False)
  (/76): BoundParams(name=/76, inputs=[], perturbed=False)
  (/77): BoundParams(name=/77, inputs=[], perturbed=False)
  (/78): BoundParams(name=/78, inputs=[], perturbed=False)
  (/79): BoundParams(name=/79, inputs=[], perturbed=False)
  (/80): BoundParams(name=/80, inputs=[], perturbed=False)
  (/81): BoundParams(name=/81, inputs=[], perturbed=False)
  (/82): BoundParams(name=/82, inputs=[], perturbed=False)
  (/83): BoundParams(name=/83, inputs=[], perturbed=False)
  (/84): BoundParams(name=/84, inputs=[], perturbed=False)
  (/85): BoundParams(name=/85, inputs=[], perturbed=False)
  (/86): BoundParams(name=/86, inputs=[], perturbed=False)
  (/87): BoundParams(name=/87, inputs=[], perturbed=False)
  (/88): BoundParams(name=/88, inputs=[], perturbed=False)
  (/89): BoundParams(name=/89, inputs=[], perturbed=False)
  (/90): BoundParams(name=/90, inputs=[], perturbed=False)
  (/91): BoundParams(name=/91, inputs=[], perturbed=False)
  (/92): BoundParams(name=/92, inputs=[], perturbed=False)
  (/93): BoundParams(name=/93, inputs=[], perturbed=False)
  (/94): BoundParams(name=/94, inputs=[], perturbed=False)
  (/95): BoundParams(name=/95, inputs=[], perturbed=False)
  (/96): BoundParams(name=/96, inputs=[], perturbed=False)
  (/97): BoundParams(name=/97, inputs=[], perturbed=False)
  (/98): BoundParams(name=/98, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input.1, /52, /53], perturbed=False)
  (/100): BoundRelu(name=/100, inputs=[/input], perturbed=False)
  (/input.4): BoundConv(name=/input.4, inputs=[/100, /54, /55], perturbed=False)
  (/102): BoundRelu(name=/102, inputs=[/input.4], perturbed=False)
  (/input.8): BoundConv(name=/input.8, inputs=[/102, /56], perturbed=False)
  (/104): BoundRelu(name=/104, inputs=[/input.8], perturbed=False)
  (/input.12): BoundConv(name=/input.12, inputs=[/104, /57], perturbed=False)
  (/106): BoundRelu(name=/106, inputs=[/input.12], perturbed=False)
  (/input.16): BoundConv(name=/input.16, inputs=[/106, /58], perturbed=False)
  (/108): BoundRelu(name=/108, inputs=[/input.16], perturbed=False)
  (/input.20): BoundConv(name=/input.20, inputs=[/108, /59, /60], perturbed=False)
  (/110): BoundRelu(name=/110, inputs=[/input.20], perturbed=False)
  (/input.24): BoundConv(name=/input.24, inputs=[/110, /61, /62], perturbed=False)
  (/112): BoundRelu(name=/112, inputs=[/input.24], perturbed=False)
  (/input.28): BoundConv(name=/input.28, inputs=[/112, /63], perturbed=False)
  (/114): BoundRelu(name=/114, inputs=[/input.28], perturbed=False)
  (/input.32): BoundConv(name=/input.32, inputs=[/114, /64], perturbed=False)
  (/116): BoundRelu(name=/116, inputs=[/input.32], perturbed=False)
  (/input.36): BoundConv(name=/input.36, inputs=[/116, /65], perturbed=False)
  (/118): BoundRelu(name=/118, inputs=[/input.36], perturbed=False)
  (/input.40): BoundConv(name=/input.40, inputs=[/118, /66, /67], perturbed=False)
  (/120): BoundRelu(name=/120, inputs=[/input.40], perturbed=False)
  (/input.44): BoundConv(name=/input.44, inputs=[/120, /68, /69], perturbed=False)
  (/122): BoundRelu(name=/122, inputs=[/input.44], perturbed=False)
  (/input.48): BoundConv(name=/input.48, inputs=[/122, /70, /71], perturbed=False)
  (/124): BoundRelu(name=/124, inputs=[/input.48], perturbed=False)
  (/input.52): BoundConv(name=/input.52, inputs=[/124, /72], perturbed=False)
  (/126): BoundRelu(name=/126, inputs=[/input.52], perturbed=False)
  (/input.56): BoundConv(name=/input.56, inputs=[/126, /73], perturbed=False)
  (/128): BoundRelu(name=/128, inputs=[/input.56], perturbed=False)
  (/input.60): BoundConv(name=/input.60, inputs=[/128, /74], perturbed=False)
  (/130): BoundRelu(name=/130, inputs=[/input.60], perturbed=False)
  (/input.64): BoundConv(name=/input.64, inputs=[/130, /75, /76], perturbed=False)
  (/132): BoundRelu(name=/132, inputs=[/input.64], perturbed=False)
  (/input.68): BoundConv(name=/input.68, inputs=[/132, /77, /78], perturbed=False)
  (/134): BoundRelu(name=/134, inputs=[/input.68], perturbed=False)
  (/input.72): BoundConv(name=/input.72, inputs=[/134, /79, /80], perturbed=False)
  (/136): BoundRelu(name=/136, inputs=[/input.72], perturbed=False)
  (/input.76): BoundConv(name=/input.76, inputs=[/136, /81], perturbed=False)
  (/138): BoundRelu(name=/138, inputs=[/input.76], perturbed=False)
  (/input.80): BoundConv(name=/input.80, inputs=[/138, /82], perturbed=False)
  (/140): BoundRelu(name=/140, inputs=[/input.80], perturbed=False)
  (/input.84): BoundConv(name=/input.84, inputs=[/140, /83], perturbed=False)
  (/142): BoundRelu(name=/142, inputs=[/input.84], perturbed=False)
  (/input.88): BoundConv(name=/input.88, inputs=[/142, /84, /85], perturbed=False)
  (/144): BoundRelu(name=/144, inputs=[/input.88], perturbed=False)
  (/input.92): BoundConv(name=/input.92, inputs=[/144, /86, /87], perturbed=False)
  (/146): BoundRelu(name=/146, inputs=[/input.92], perturbed=False)
  (/input.96): BoundConv(name=/input.96, inputs=[/146, /88, /89], perturbed=False)
  (/148): BoundRelu(name=/148, inputs=[/input.96], perturbed=False)
  (/input.100): BoundConv(name=/input.100, inputs=[/148, /90], perturbed=False)
  (/150): BoundRelu(name=/150, inputs=[/input.100], perturbed=False)
  (/input.104): BoundConv(name=/input.104, inputs=[/150, /91], perturbed=False)
  (/152): BoundRelu(name=/152, inputs=[/input.104], perturbed=False)
  (/input.108): BoundConv(name=/input.108, inputs=[/152, /92], perturbed=False)
  (/154): BoundRelu(name=/154, inputs=[/input.108], perturbed=False)
  (/155): BoundFlatten(name=/155, inputs=[/154], perturbed=False)
  (/input.112): BoundLinear(name=/input.112, inputs=[/155, /93, /94], perturbed=False)
  (/157): BoundRelu(name=/157, inputs=[/input.112], perturbed=False)
  (/158): BoundFlatten(name=/158, inputs=[/157], perturbed=False)
  (/input.116): BoundLinear(name=/input.116, inputs=[/158, /95, /96], perturbed=False)
  (/160): BoundRelu(name=/160, inputs=[/input.116], perturbed=False)
  (/161): BoundFlatten(name=/161, inputs=[/160], perturbed=False)
  (/162): BoundLinear(name=/162, inputs=[/161, /97, /98], perturbed=False)
)
Model prediction is: tensor([-4.42063475e+00, -2.97700381e+00, -2.62515688e+00, -2.93403864e+00,
        -3.51846981e+00, -8.37338924e+00, -5.20574331e+00,  7.41288364e-01,
        -2.45812535e+00, -2.75457978e+00, -3.65652108e+00,  6.05827928e-01,
        -4.05151892e+00, -6.62732506e+00, -3.10707235e+00, -5.04016161e+00,
        -5.62962818e+00, -2.46166205e+00, -8.20408165e-01, -4.12766981e+00,
        -4.74818516e+00, -1.65467596e+00, -2.90844560e+00, -2.64074183e+00,
        -2.46718049e+00, -1.95516908e+00, -4.84406137e+00, -4.61017990e+00,
        -1.47481680e+00, -4.64737797e+00, -3.36795735e+00, -3.60585284e+00,
        -3.61262274e+00, -3.90602851e+00, -9.14794564e-01, -3.16607451e+00,
        -3.91560197e+00, -6.11406279e+00, -5.40360737e+00, -2.47774172e+00,
        -7.15420914e+00, -6.48212242e+00, -7.09557629e+00, -6.01168585e+00,
        -5.86224461e+00, -4.00522995e+00, -4.99329662e+00, -5.27602816e+00,
        -4.47146940e+00, -3.50641346e+00, -2.24849725e+00,  2.11007103e-01,
        -1.28296912e+00, -1.21928418e+00, -3.83886433e+00, -2.89291048e+00,
         8.03998113e-01, -4.94256306e+00, -3.09414196e+00, -3.16846585e+00,
         1.05543518e+00,  4.70510781e-01, -5.90946734e-01,  5.62077105e-01,
        -3.92586398e+00,  3.06187558e+00, -4.60302591e+00, -2.15611267e+00,
        -3.26807070e+00, -3.46849751e+00, -4.72255421e+00, -1.76861274e+00,
        -1.30729723e+00, -9.74086046e-01, -1.22792554e+00, -3.14717364e+00,
        -3.03173637e+00, -4.84693146e+00, -2.42909908e+00, -1.09481108e+00,
         1.14625490e+00, -5.08453703e+00, -3.21738911e+00, -3.75647068e+00,
        -4.60601950e+00, -4.03685141e+00, -2.94983768e+00, -3.41171116e-01,
        -1.38155818e+00, -3.49844508e-02, -3.26121306e+00, -7.84250879e+00,
        -7.36152458e+00, -3.92668176e+00, -2.36062503e+00, -8.55796242e+00,
        -2.71272969e+00,  6.42220974e-01, -3.52374554e+00, -1.31512296e+00,
         3.20801526e-01,  1.64622760e+00, -3.60060906e+00, -5.17960072e+00,
        -1.53504479e+00, -4.75674105e+00, -1.74820399e+00, -1.33122301e+00,
         1.97947130e-01, -4.08504009e+00, -5.23207617e+00, -3.14662814e+00,
         2.50720590e-01, -3.20369601e-01, -5.49467039e+00, -5.89538753e-01,
        -2.61059332e+00, -3.08900952e+00, -2.24905300e+00, -1.40643060e+00,
        -8.44544172e-01, -1.42965341e+00, -1.20265269e+00, -1.50513577e+00,
        -1.04426563e+00, -2.96202707e+00, -1.81676304e+00, -3.37132886e-02,
        -4.55651093e+00, -1.75891042e+00,  2.11739063e+00, -6.19713211e+00,
        -1.93984807e+00, -8.84476852e+00, -2.37013626e+00, -7.03643608e+00,
        -5.04952848e-01, -9.62275922e-01, -5.59200430e+00, -2.49897289e+00,
        -5.04643297e+00, -5.13551044e+00, -6.40674639e+00, -2.02423429e+00,
        -6.00649297e-01,  8.29933286e-02, -3.43227768e+00, -3.24682665e+00,
        -2.26260996e+00, -2.33376646e+00, -5.25326109e+00,  3.73220420e+00,
         1.18261254e+00,  1.03086853e+00, -1.06789279e+00, -8.32773864e-01,
         1.54915023e+00,  2.92563653e+00,  2.38223839e+00,  2.44167924e+00,
         2.64183211e+00, -1.39049244e+00, -7.19728917e-02,  2.12333894e+00,
        -1.27027857e+00, -1.66544974e+00, -2.96192348e-01,  1.84631455e+00,
         1.34876192e+00,  4.71090651e+00,  3.51001167e+00,  2.87447548e+00,
         2.02115965e+00,  3.46838522e+00,  1.02981997e+00,  1.61086917e+00,
         5.65250635e+00,  1.90076208e+00, -1.18784654e+00,  3.82239223e+00,
         3.71523190e+00,  3.41513824e+00,  2.98470950e+00,  2.02827477e+00,
         2.58201027e+00,  3.88099360e+00,  2.01392293e+00, -3.10874820e-01,
        -2.19278768e-01,  1.96496594e+00, -2.09606028e+00, -4.84731570e-02,
         8.32937002e-01,  4.23851967e-01, -1.56012201e+00,  3.22398877e+00,
         1.18801618e+00,  1.31813836e+00,  3.11655021e+00,  2.73254490e+00,
         3.33722210e+00, -3.63218993e-01, -3.30713511e-01,  1.09194040e+00,
         1.80190516e+00,  2.41963816e+00,  3.33726335e+00,  1.06620121e+00,
         1.44636047e+00, -5.29101908e-01, -9.06960726e-01,  2.16774464e+00,
         9.96918082e-02,  1.70173717e+00,  1.61241758e+00,  1.64228714e+00,
         2.05231023e+00,  1.21082626e-01,  1.24173892e+00,  4.67826605e-01,
         1.18186915e+00, -6.77229226e-01,  5.11701441e+00,  5.17142725e+00,
         3.07301140e+00,  3.12132239e+00,  3.07528210e+00,  3.44054294e+00,
         2.46957302e+00,  1.89601505e+00,  3.75140142e+00,  5.53649235e+00,
         4.14730406e+00,  2.95910430e+00,  5.62803984e+00,  5.39528656e+00,
         2.86341882e+00,  2.85920233e-01,  4.90128088e+00,  2.55988216e+00,
         5.25955057e+00,  7.01250076e+00,  9.25523996e-01, -1.92378950e+00,
         3.06565332e+00, -1.22476292e+00,  1.18477702e+00,  1.49687850e+00,
         3.93798161e+00,  6.88669348e+00,  3.27920008e+00,  6.96100330e+00,
        -4.01892990e-01,  5.35484171e+00,  2.04720712e+00,  4.64914465e+00,
         3.98617220e+00,  4.52270460e+00,  4.53318739e+00,  1.22448862e+00,
         3.84996414e-01,  2.61579156e+00,  4.06834573e-01, -1.13698351e+00,
         3.09460759e+00,  2.82498550e+00,  3.81136322e+00,  4.80304241e+00,
        -2.97297645e+00, -3.32077235e-01, -8.24957848e-01, -2.88478851e+00,
        -3.35318828e+00, -1.88216019e+00, -1.72281897e+00, -1.81276083e+00,
        -3.80864286e+00, -2.47242641e+00, -2.76073956e+00, -3.22250843e+00,
        -2.50276756e+00, -3.84205914e+00, -1.86435521e+00, -5.68743563e+00,
        -5.47032452e+00, -5.12450171e+00, -5.33283043e+00, -5.76517344e+00,
        -4.00405741e+00, -4.36159515e+00, -4.31387949e+00, -4.79901075e+00,
        -2.04385900e+00, -9.71448302e-01, -3.66627526e+00, -2.29966640e+00,
        -4.04072380e+00, -5.63306808e+00, -5.46835804e+00, -6.80928802e+00,
        -5.37776041e+00,  1.41393530e+00, -3.65993762e+00, -4.36168098e+00,
        -5.05135655e-01, -3.56203246e+00, -4.16598845e+00, -1.55634415e+00,
        -1.23864412e+00, -4.83396828e-01, -1.70059371e+00, -1.86806440e+00,
        -4.17394733e+00, -4.49832010e+00, -3.46842980e+00, -3.31560683e+00,
        -5.04558039e+00, -1.09559739e+00, -4.32738543e+00, -2.27278924e+00,
        -3.49357104e+00, -1.93068838e+00, -6.21853113e+00, -3.01952195e+00,
        -2.73819852e+00, -3.35197377e+00, -4.12030506e+00, -1.20044172e+00,
        -7.34068990e-01, -1.06336462e+00, -4.30594301e+00, -2.50725007e+00,
        -2.54258108e+00, -3.30102372e+00, -3.88668251e+00, -4.70389032e+00,
        -3.18738794e+00, -3.59487247e+00, -1.04581821e+00,  2.99674153e+00,
         1.11424470e+00,  1.78883421e+00, -3.42189288e+00, -5.90744495e+00,
        -6.03690434e+00, -3.41601893e-02, -3.04139400e+00, -3.74051952e+00,
        -5.72634816e-01, -4.95118237e+00, -5.30137062e+00, -8.25167942e+00,
        -5.12627792e+00, -5.37242413e+00,  6.52645171e-01,  5.90536892e-01,
        -3.89513224e-01, -3.49092221e+00,  1.89883637e+00, -6.58348143e-01,
        -2.43772268e+00,  3.32472849e+00, -2.05931830e+00, -5.43345332e-01,
        -5.92505264e+00, -5.71656322e+00, -1.13333821e+00, -7.36663938e-02,
        -2.78259039e+00, -2.46852040e+00, -5.33888960e+00, -2.00709963e+00,
        -4.14944935e+00, -5.65493107e+00, -3.13254380e+00, -4.00082493e+00,
        -8.05513668e+00, -4.04399776e+00, -4.32730341e+00, -4.24048138e+00,
        -4.91341305e+00, -3.95573735e+00, -3.03039169e+00,  7.75049925e-01,
        -1.36130936e-02, -1.73745346e+00, -2.25780964e+00, -1.81047726e+00,
        -1.66731048e+00, -2.72913885e+00, -4.67261457e+00, -1.59922361e+00,
        -4.64198685e+00, -1.56477666e+00, -1.02768373e+00, -3.12913609e+00,
         5.94387650e-01, -4.80807686e+00,  1.51549554e+00, -5.00048220e-01,
         2.28343892e+00,  8.14833927e+00,  2.48336291e+00, -7.86712468e-01,
        -4.28340554e-01,  4.11488628e+00, -3.65204501e+00,  5.63905859e+00,
        -3.55095237e-01,  3.79982376e+00,  4.34114873e-01, -2.59532779e-01,
         4.28244209e+00,  6.52715588e+00,  6.38927555e+00, -1.44872475e+00,
         2.33266163e+00,  8.64918709e+00, -7.35345244e-01,  1.63440049e+00,
         6.05919313e+00, -1.01615489e-02,  6.40548420e+00, -2.11377835e+00,
        -1.44890475e+00, -1.33108771e+00, -3.48805833e+00,  3.23396516e+00,
         4.72276354e+00,  1.12677174e+01,  7.90393305e+00, -1.54862857e+00,
         2.68061447e+00,  8.96688366e+00, -7.55742371e-01, -1.03406584e+00,
        -2.13602424e+00,  1.85700095e+00, -3.69903564e+00,  1.15030203e+01,
         5.09925365e-01, -2.10823131e+00, -2.78787494e+00,  2.16597247e+00,
         1.13839493e+01,  5.72667933e+00, -5.79429102e+00,  2.54425550e+00,
        -2.09776711e+00, -3.34066439e+00,  1.09686279e+01, -2.64292836e+00,
         1.23020911e+00, -3.49238777e+00, -3.49728847e+00,  9.23900366e-01,
         5.63569975e+00,  3.58702230e+00,  1.51540235e-01,  7.53726673e+00,
        -5.53156376e+00,  1.20269785e+01, -1.29015398e+00,  5.75961924e+00,
         5.11628342e+00,  5.26409388e+00, -3.52548909e+00, -6.10648203e+00,
         6.89075470e-01,  2.93077528e-01, -1.31078625e+00,  7.59124708e+00,
         2.96843386e+00, -2.96091884e-01, -3.80150765e-01, -4.05230016e-01,
         2.43058491e+00, -4.99247760e-03, -1.43651986e+00,  3.22496533e+00,
         9.13690269e-01, -2.17914486e+00, -5.90926588e-01,  2.51357865e+00,
         1.48636770e+00, -1.01788163e+00,  1.18140781e+00,  5.93696404e+00,
         3.36616540e+00,  2.45651937e+00,  8.99059105e+00,  5.08971786e+00,
        -2.69394803e+00, -4.87693596e+00, -3.00693941e+00, -1.35818481e+00,
         3.00158858e+00, -1.28076017e+00, -1.67428517e+00,  9.24878895e-01,
        -2.48466873e+00,  8.71856391e-01,  3.09439278e+00,  2.09562802e+00,
        -9.33679819e-01, -2.45204496e+00,  2.43110347e+00, -5.58686674e-01,
        -1.47927022e+00,  4.57695770e+00, -1.28199756e+00, -4.97512519e-01,
         2.79283375e-01,  9.38527393e+00,  3.81790757e+00,  6.73436356e+00,
        -1.10198963e+00, -2.39427805e+00,  1.38014421e+01,  1.23313391e+00,
        -7.91176975e-01, -2.56296992e+00,  7.93683290e+00,  5.22879744e+00,
         9.24729061e+00, -3.52126932e+00, -3.01406169e+00, -2.32348466e+00,
        -2.49512625e+00,  5.36164236e+00,  3.55775404e+00,  3.32381964e+00,
        -2.88951659e+00, -1.85450172e+00, -1.61643863e+00, -2.49303997e-01,
        -6.51259899e-01,  3.05972052e+00, -2.39332771e+00, -2.69892842e-01,
        -5.08036435e-01,  1.07020788e+01,  8.98655128e+00,  3.34750032e+00,
         2.54877090e+00, -4.08490688e-01,  2.47752047e+00, -2.51910567e+00,
        -2.73126149e+00, -2.99786353e+00, -4.65958214e+00, -2.30090332e+00,
         6.64047241e+00, -1.62574613e+00,  1.76602387e+00,  5.51231718e+00,
        -3.19693804e+00,  1.39491785e+00,  3.99921417e+00,  7.50038671e+00,
         2.85675678e+01, -1.28737581e+00, -1.10591501e-02, -4.86158800e+00,
        -6.87991190e+00, -3.00353909e+00,  9.92039490e+00, -3.48926097e-01,
        -6.09678924e-01, -1.17466435e-01,  9.09164429e+00, -3.92826647e-01,
         8.68883952e-02,  1.04260597e+01,  7.31479645e+00,  7.02985811e+00,
        -5.25393710e-02,  8.05855155e-01,  2.64979649e+00, -1.68938160e+00,
        -8.74008834e-01,  1.75928867e+00,  2.34964579e-01,  2.54927158e+00,
        -3.45449567e-01,  6.37254596e-01,  3.54487419e+00,  6.74018264e-01,
         2.47745275e+00, -1.28801048e+00, -4.74275732e+00,  2.13215685e+00,
        -2.47112703e+00,  2.90929008e+00, -1.21027279e+00, -9.04955983e-01,
         2.58097410e+00,  2.40411592e+00,  2.65617222e-01, -1.30204010e+00,
         8.04398000e-01,  3.87823653e+00,  1.57703578e+00,  1.43778634e+00,
        -2.04753542e+00, -4.88020658e-01, -1.53493488e+00,  2.61405635e+00,
         3.46797514e+00,  4.33701128e-01,  5.81968975e+00,  7.98998922e-02,
         1.11172152e+00,  7.70478547e-01,  1.12537313e+00,  1.63349075e+01,
         6.41644478e-01,  3.65548754e+00,  1.60694265e+00, -1.73649102e-01,
        -2.85097092e-01,  7.13139963e+00,  3.00539827e+00, -2.58985966e-01,
         1.05061364e+00,  4.85923958e+00, -8.87024760e-01, -1.27913535e-01,
        -1.92734629e-01, -1.39710963e+00,  6.80482268e-01,  1.33008039e+00,
         5.79567194e+00, -1.38576162e+00, -5.47964573e+00, -1.95347571e+00,
         1.59083116e+00, -1.33240509e+00,  9.88534737e+00,  5.70885563e+00,
        -3.75310183e+00,  5.02076530e+00,  2.56986475e+00,  9.71736145e+00,
        -4.00267065e-01,  6.91215658e+00,  3.16610479e+00, -2.86289215e+00,
        -4.83513784e+00, -1.28428948e+00,  3.01743770e+00,  6.30964190e-02,
         8.50419712e+00,  2.10443282e+00,  5.61312318e-01,  8.89981842e+00,
        -1.21964467e+00,  1.21489108e+00, -6.88977242e-01, -2.92220443e-01,
         3.48780870e+00,  2.65767336e+00, -5.16141987e+00, -3.02733302e+00,
         2.37416983e+00,  8.92950630e+00,  5.86571550e+00,  2.79938602e+00,
        -1.79977345e+00, -4.63578701e+00,  1.06288214e+01,  1.04785166e+01,
         2.47683072e+00, -1.78312898e+00, -1.26247299e+00, -6.90727413e-01,
         5.96389198e+00, -3.06306982e+00,  7.28356934e+00,  1.69571853e+00,
         2.14038181e+00,  8.54996920e-01, -1.94180286e+00,  4.77585030e+00,
         3.30440831e+00,  1.07083893e+00, -1.71234405e+00, -2.73941135e+00,
        -3.53944039e+00,  3.27107280e-01, -4.58638096e+00,  6.26841354e+00,
         9.55313742e-02,  7.89128542e+00, -8.96224380e-01,  1.82439482e+00,
        -1.47645938e+00,  4.10190868e+00,  3.71416950e+00, -1.30046809e+00,
         1.65547085e+00,  1.09205217e+01,  1.02469409e+00,  5.22542191e+00,
         3.50298691e+00, -6.71556175e-01, -1.33479142e+00, -2.05542350e+00,
        -4.57004875e-01, -3.08296990e+00, -2.40302706e+00,  5.62692165e-01,
        -1.05938566e+00, -4.02109098e+00,  5.09057343e-01,  3.48084950e+00,
         3.17790508e+00,  5.53775549e-01, -3.12718272e+00,  1.83373249e+00,
         1.37256682e+00,  3.00573492e+00,  2.50122857e+00,  4.56095552e+00,
        -3.73255610e-01, -2.64844954e-01, -3.58311367e+00,  2.73829937e+00,
         3.26088643e+00, -4.81857729e+00, -7.84640074e-01,  7.66805649e+00,
        -1.74077320e+00,  6.84543657e+00,  4.45341253e+00,  3.45071936e+00,
         8.67795706e-01,  1.69018841e+00, -4.29338932e+00, -3.97434282e+00,
        -1.83317006e-01, -9.41026390e-01, -2.83414960e+00,  2.06387568e+00,
         1.81351006e+00,  2.24074244e-01,  7.85688305e+00,  6.92238140e+00,
         1.51627004e-01, -3.21993065e+00, -1.58771849e+00,  6.22336721e+00,
         6.11288166e+00, -3.20136642e+00, -2.56158996e+00,  3.34952283e+00,
         3.38934374e+00,  4.06715536e+00,  5.29238796e+00,  2.16729283e+00,
        -3.78668383e-02, -1.61866784e-01, -1.51569113e-01,  4.22628671e-02,
         6.69605541e+00,  2.21425176e+00, -4.39794731e+00, -5.51055968e-01,
         2.04160767e+01, -3.61550426e+00,  9.62919426e+00, -2.77784204e+00,
         3.59716249e+00,  9.61654425e-01,  4.40379429e+00,  2.42949319e+00,
         3.70744967e+00,  5.46964943e-01, -2.22531986e+00,  2.40921831e+00,
        -5.32642651e+00,  8.36830902e+00,  8.68791878e-01, -6.24436438e-01,
        -7.89840400e-01,  1.48261082e+00, -4.57552099e+00,  1.20896177e+01,
         4.61926556e+00, -3.89275384e+00, -2.83703096e-02,  3.91995001e+00,
         1.73853517e+00,  3.97357821e+00, -4.80572557e+00,  5.39942694e+00,
         6.14153957e+00,  1.36275268e+00, -4.40973473e+00, -2.02406788e+00,
         1.78879929e+00,  2.77658606e+00,  2.16020536e+00, -5.81971645e+00,
        -8.29121351e-01,  1.73086758e+01,  5.58205652e+00,  5.45130432e-01,
         2.91248655e+00, -6.21044636e-01, -2.94639540e+00, -4.99803972e+00,
         2.82168102e+00,  7.75364041e-01,  8.32604229e-01, -1.03107452e+00,
        -4.28193212e-01,  4.55623102e+00,  3.04773855e+00,  6.98589945e+00,
         3.42192620e-01, -4.47298908e+00,  5.43823099e+00,  1.07837880e+00,
         1.99395251e+00, -2.32340646e+00,  5.96104622e+00, -4.40300512e+00,
         1.37526989e+00, -1.80919075e+00,  1.35320330e+01, -3.81512117e+00,
        -1.07350862e+00, -2.40821981e+00,  1.16635191e+00, -2.93637967e+00,
         6.94989443e+00,  6.48319864e+00,  3.85630918e+00, -1.58129752e+00,
        -5.35283267e-01,  3.26660585e+00,  4.92742634e+00,  4.75520039e+00,
        -3.82149053e+00, -1.09661412e+00, -3.33069921e+00,  3.19993317e-01,
         1.17177975e+00,  1.52939129e+00,  3.52920437e+00,  7.24562740e+00,
         2.56765723e+00, -2.86332941e+00,  1.41506588e+00,  5.91867030e-01,
        -8.94018114e-01,  1.68913651e+00, -7.20007801e+00,  2.14620568e-02,
        -1.70977163e+00,  2.22133231e+00,  6.48408556e+00,  4.78011084e+00,
         2.70011067e+00,  7.40019226e+00,  3.14048028e+00,  1.30005872e+00,
         1.15421772e+00, -1.65758014e+00,  5.90178919e+00, -4.20578718e+00,
         1.91742468e+00, -4.67274278e-01, -4.04727650e+00,  1.15763035e+01,
        -1.83970249e+00,  1.08943069e+00, -2.99264216e+00,  5.51316118e+00,
         1.15860672e+01, -1.92596710e+00,  1.10097289e+00, -1.47086704e+00,
        -2.62363744e+00, -1.52808332e+00,  7.24281013e-01, -1.31251907e+00,
        -2.37763309e+00,  3.99745679e+00,  1.04315205e+01, -3.18252420e+00,
         1.21577442e+00, -3.09070539e+00, -3.05689752e-01,  2.95448565e+00,
        -4.66225767e+00, -1.85398474e-01,  5.59702015e+00,  3.48773575e+00,
        -2.74752006e-02, -4.76472807e+00,  7.49730539e+00,  3.70989466e+00,
        -3.79116917e+00, -5.74888659e+00, -1.29483473e+00,  7.05557644e-01,
         4.86470652e+00, -1.92030579e-01,  3.86225171e-02,  7.17877299e-02,
         1.88879907e+00, -3.87398505e+00, -4.92377186e+00,  1.55041420e+00,
         1.42696753e-01,  4.82002449e+00, -1.69089580e+00,  1.29337823e+00,
        -6.97958050e-03, -3.52862865e-01, -5.95482159e+00, -2.60795617e+00,
        -1.11935520e+00, -6.24063635e+00, -5.34660149e+00, -2.82646942e+00,
        -1.01840973e+00,  4.32555342e+00, -4.82739019e+00, -3.33819556e+00,
         4.45850706e+00, -4.63571501e+00, -2.16040373e+00, -5.84040833e+00,
        -5.53303337e+00, -3.39821053e+00, -4.16597223e+00, -1.92215455e+00,
        -5.18034315e+00, -4.32501030e+00, -4.15094328e+00, -2.83888459e+00,
        -2.67177749e+00, -3.79890037e+00, -2.58386683e+00, -2.40388060e+00,
        -6.24590695e-01, -2.30170226e+00, -3.59141803e+00, -4.76855230e+00,
        -3.32466722e+00, -3.06883073e+00, -2.96449041e+00, -3.68257093e+00,
        -2.84465885e+00, -3.78069663e+00,  1.90976393e+00, -3.42101312e+00,
        -2.03119588e+00, -3.19604540e+00, -9.21913910e+00, -5.71596146e+00,
        -8.85769176e+00, -3.64141226e+00, -1.63101292e+00, -2.69987345e+00,
         8.56599629e-01, -2.41188455e+00,  6.78832340e+00,  8.11078453e+00,
        -1.34893119e+00,  2.33033037e+00, -1.68574989e+00,  3.11238146e+00,
        -4.81767702e+00,  2.99296713e+00,  9.05331969e-02,  9.71419334e-01,
        -3.26457286e+00,  1.46251450e+01,  2.51712465e+00,  7.39763546e+00,
        -1.64358354e+00, -2.31291032e+00, -7.46760845e+00, -2.41011953e+00,
        -4.62222862e+00, -2.75566411e+00, -4.79750824e+00, -4.27199268e+00,
        -6.52556181e-01, -8.07013798e+00, -2.46555042e+00, -3.41340852e+00,
        -5.46510887e+00, -8.25784779e+00, -2.75379348e+00,  4.10945559e+00],
       device='cuda:0')/home/hongjixu/Verifier_Development/complete_verifier/auto_LiRPA/perturbations.py:254: UserWarning: The reduce argument of torch.scatter with Tensor src is deprecated and will be removed in a future PyTorch release. Use torch.scatter_reduce instead for more reduction options. (Triggered internally at /opt/conda/conda-bld/pytorch_1708025845868/work/aten/src/ATen/native/TensorAdvancedIndexing.cpp:232.)
  self.x_L_sparse.scatter_(dim=-1, index=index, src=(x_L - lb).view(batch_size, -1), reduce='add')

Clean RHS: tensor([[8.15149117]], device='cuda:0')
Split layers:
  BoundConv(name=/input.40, inputs=[/118, /66, /67], perturbed=True): [(BoundRelu(name=/120, inputs=[/input.40], perturbed=True), 0)]
  BoundConv(name=/input.72, inputs=[/134, /79, /80], perturbed=True): [(BoundRelu(name=/136, inputs=[/input.72], perturbed=True), 0)]
  BoundConv(name=/input.104, inputs=[/150, /91], perturbed=True): [(BoundRelu(name=/152, inputs=[/input.104], perturbed=True), 0)]
  BoundConv(name=/input.52, inputs=[/124, /72], perturbed=True): [(BoundRelu(name=/126, inputs=[/input.52], perturbed=True), 0)]
  BoundConv(name=/input.84, inputs=[/140, /83], perturbed=True): [(BoundRelu(name=/142, inputs=[/input.84], perturbed=True), 0)]
  BoundConv(name=/input.20, inputs=[/108, /59, /60], perturbed=True): [(BoundRelu(name=/110, inputs=[/input.20], perturbed=True), 0)]
  BoundConv(name=/input.32, inputs=[/114, /64], perturbed=True): [(BoundRelu(name=/116, inputs=[/input.32], perturbed=True), 0)]
  BoundConv(name=/input.64, inputs=[/130, /75, /76], perturbed=True): [(BoundRelu(name=/132, inputs=[/input.64], perturbed=True), 0)]
  BoundConv(name=/input.96, inputs=[/146, /88, /89], perturbed=True): [(BoundRelu(name=/148, inputs=[/input.96], perturbed=True), 0)]
  BoundConv(name=/input.44, inputs=[/120, /68, /69], perturbed=True): [(BoundRelu(name=/122, inputs=[/input.44], perturbed=True), 0)]
  BoundConv(name=/input.76, inputs=[/136, /81], perturbed=True): [(BoundRelu(name=/138, inputs=[/input.76], perturbed=True), 0)]
  BoundConv(name=/input.108, inputs=[/152, /92], perturbed=True): [(BoundRelu(name=/154, inputs=[/input.108], perturbed=True), 0)]
  BoundConv(name=/input.4, inputs=[/100, /54, /55], perturbed=True): [(BoundRelu(name=/102, inputs=[/input.4], perturbed=True), 0)]
  BoundConv(name=/input.8, inputs=[/102, /56], perturbed=True): [(BoundRelu(name=/104, inputs=[/input.8], perturbed=True), 0)]
  BoundConv(name=/input.16, inputs=[/106, /58], perturbed=True): [(BoundRelu(name=/108, inputs=[/input.16], perturbed=True), 0)]
  BoundConv(name=/input.24, inputs=[/110, /61, /62], perturbed=True): [(BoundRelu(name=/112, inputs=[/input.24], perturbed=True), 0)]
  BoundConv(name=/input.56, inputs=[/126, /73], perturbed=True): [(BoundRelu(name=/128, inputs=[/input.56], perturbed=True), 0)]
  BoundConv(name=/input.88, inputs=[/142, /84, /85], perturbed=True): [(BoundRelu(name=/144, inputs=[/input.88], perturbed=True), 0)]
  BoundConv(name=/input, inputs=[/input.1, /52, /53], perturbed=True): [(BoundRelu(name=/100, inputs=[/input], perturbed=True), 0)]
  BoundConv(name=/input.36, inputs=[/116, /65], perturbed=True): [(BoundRelu(name=/118, inputs=[/input.36], perturbed=True), 0)]
  BoundConv(name=/input.68, inputs=[/132, /77, /78], perturbed=True): [(BoundRelu(name=/134, inputs=[/input.68], perturbed=True), 0)]
  BoundConv(name=/input.100, inputs=[/148, /90], perturbed=True): [(BoundRelu(name=/150, inputs=[/input.100], perturbed=True), 0)]
  BoundConv(name=/input.48, inputs=[/122, /70, /71], perturbed=True): [(BoundRelu(name=/124, inputs=[/input.48], perturbed=True), 0)]
  BoundConv(name=/input.80, inputs=[/138, /82], perturbed=True): [(BoundRelu(name=/140, inputs=[/input.80], perturbed=True), 0)]
  BoundLinear(name=/input.116, inputs=[/158, /95, /96], perturbed=True): [(BoundRelu(name=/160, inputs=[/input.116], perturbed=True), 0)]
  BoundConv(name=/input.28, inputs=[/112, /63], perturbed=True): [(BoundRelu(name=/114, inputs=[/input.28], perturbed=True), 0)]
  BoundConv(name=/input.60, inputs=[/128, /74], perturbed=True): [(BoundRelu(name=/130, inputs=[/input.60], perturbed=True), 0)]
  BoundConv(name=/input.92, inputs=[/144, /86, /87], perturbed=True): [(BoundRelu(name=/146, inputs=[/input.92], perturbed=True), 0)]
  BoundLinear(name=/input.112, inputs=[/155, /93, /94], perturbed=True): [(BoundRelu(name=/157, inputs=[/input.112], perturbed=True), 0)]
  BoundConv(name=/input.12, inputs=[/104, /57], perturbed=True): [(BoundRelu(name=/106, inputs=[/input.12], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/100, inputs=[/input], perturbed=True)
   BoundRelu(name=/102, inputs=[/input.4], perturbed=True)
   BoundRelu(name=/104, inputs=[/input.8], perturbed=True)
   BoundRelu(name=/106, inputs=[/input.12], perturbed=True)
   BoundRelu(name=/108, inputs=[/input.16], perturbed=True)
   BoundRelu(name=/110, inputs=[/input.20], perturbed=True)
   BoundRelu(name=/112, inputs=[/input.24], perturbed=True)
   BoundRelu(name=/114, inputs=[/input.28], perturbed=True)
   BoundRelu(name=/116, inputs=[/input.32], perturbed=True)
   BoundRelu(name=/118, inputs=[/input.36], perturbed=True)
   BoundRelu(name=/120, inputs=[/input.40], perturbed=True)
   BoundRelu(name=/122, inputs=[/input.44], perturbed=True)
   BoundRelu(name=/124, inputs=[/input.48], perturbed=True)
   BoundRelu(name=/126, inputs=[/input.52], perturbed=True)
   BoundRelu(name=/128, inputs=[/input.56], perturbed=True)
   BoundRelu(name=/130, inputs=[/input.60], perturbed=True)
   BoundRelu(name=/132, inputs=[/input.64], perturbed=True)
   BoundRelu(name=/134, inputs=[/input.68], perturbed=True)
   BoundRelu(name=/136, inputs=[/input.72], perturbed=True)
   BoundRelu(name=/138, inputs=[/input.76], perturbed=True)
   BoundRelu(name=/140, inputs=[/input.80], perturbed=True)
   BoundRelu(name=/142, inputs=[/input.84], perturbed=True)
   BoundRelu(name=/144, inputs=[/input.88], perturbed=True)
   BoundRelu(name=/146, inputs=[/input.92], perturbed=True)
   BoundRelu(name=/148, inputs=[/input.96], perturbed=True)
   BoundRelu(name=/150, inputs=[/input.100], perturbed=True)
   BoundRelu(name=/152, inputs=[/input.104], perturbed=True)
   BoundRelu(name=/154, inputs=[/input.108], perturbed=True)
   BoundRelu(name=/157, inputs=[/input.112], perturbed=True)
   BoundRelu(name=/160, inputs=[/input.116], perturbed=True)
Using Linf sparse perturbation. Perturbed dimensions: 1.
Avg perturbation: 0.00020003318786621094
initial forward+backward bounds: tensor([[8.15149307]], device='cuda:0')
Worst class: (+ rhs) 8.151493072509766
Verified by initial bound!
Result: safe in 11.9656 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):11.965489657160923, max time: 11.965609312057495
mean time for verified SAFE instances(total 1): 11.965609312057495, max time: 11.965609312057495
safe (total 1), index: [0]
Result dict saved to /home/hongjixu/Verifier_Development/tests/gpu_tests/vnncomp23/vggnet16/master_outputs/1.pkl.
