/home/hongjixu/miniconda3/envs/alpha-beta-crown/lib/python3.11/site-packages/onnx2pytorch/convert/model.py:151: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  warnings.warn(
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: matrix
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: false
  csv_name: instances.csv
  results_file: out.txt
  root_path: ../../vnncomp2023_benchmarks/benchmarks/tllverifybench
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: true
  output_file: /home/hongjixu/Verifier_Development/tests/gpu_tests/vnncomp23/tllVerifyBench/master_outputs/0.pkl
  return_optimized_model: false
model:
  name: null
  path: null
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: merge_linear
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 1
  end: 2
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: null
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 1500
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: forward+backward
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 10
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: naive
    candidates: 3
    reduceop: min
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      branching_point_node: ''
      branching_point_db: []
      num_branches: 2
      branching_point_refinement: false
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic: false
      dynamic_bbps: false
      dynamic_beta_heuristic: false
      beta_heuristic: false
      dynamic_options: [uniform, three_left, three_right]
    input_split:
      enable: true
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_primary_spec: null
      sb_primary_spec_iter: 1
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_zero_crossing_score: false
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 30
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Wed Mar 27 04:50:00 2024 on huan-c4140-server
customized start/end sample from instance 1 to 2 in instances.csv
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx onnx/tllBench_n=2_N=M=8_m=1_instance_0_1.onnx
Using vnnlib vnnlib/property_N=8_1.vnnlib
Precompiled vnnlib file found at ../../vnncomp2023_benchmarks/benchmarks/tllverifybench/vnnlib/property_N=8_1.vnnlib.compiled
Loading onnx ../../vnncomp2023_benchmarks/benchmarks/tllverifybench/onnx/tllBench_n=2_N=M=8_m=1_instance_0_1.onnx wih quirks {}
Onnx optimization with flag: merge_linear
Found existed optimized onnx model at ../../vnncomp2023_benchmarks/benchmarks/tllverifybench/onnx/tllBench_n=2_N=M=8_m=1_instance_0_1.onnx.optimized
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.5, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.23474252]], device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.20it/s]100%|██████████| 1/1 [00:00<00:00,  1.20it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.62895966]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.92734146]]], device='cuda:0')
number of violation:  0
Attack finished in 1.4793 seconds.
PGD attack failed
Total VNNLIB file length: 1, max property batch size: 1, total number of batches: 1

Properties batch 0, size 1
Remaining timeout: 598.3598136901855
##### Instance 0 first 10 spec matrices: 
tensor([[[1.]]], dtype=torch.float64)
thresholds: tensor([-24.55630112], device='cuda:0') ######
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/input): BoundLinear(name=/input, inputs=[/0, /15, /16], perturbed=False)
  (/30): BoundRelu(name=/30, inputs=[/input], perturbed=False)
  (/input.3): BoundLinear(name=/input.3, inputs=[/30, /17, /18], perturbed=False)
  (/32): BoundRelu(name=/32, inputs=[/input.3], perturbed=False)
  (/input.7): BoundLinear(name=/input.7, inputs=[/32, /19, /20], perturbed=False)
  (/34): BoundRelu(name=/34, inputs=[/input.7], perturbed=False)
  (/input.11): BoundLinear(name=/input.11, inputs=[/34, /21, /22], perturbed=False)
  (/36): BoundRelu(name=/36, inputs=[/input.11], perturbed=False)
  (/input.15): BoundLinear(name=/input.15, inputs=[/36, /23, /24], perturbed=False)
  (/38): BoundRelu(name=/38, inputs=[/input.15], perturbed=False)
  (/input.19): BoundLinear(name=/input.19, inputs=[/38, /25, /26], perturbed=False)
  (/40): BoundRelu(name=/40, inputs=[/input.19], perturbed=False)
  (/41): BoundLinear(name=/41, inputs=[/40, /27, /28], perturbed=False)
)
Model prediction is: tensor([-0.23474252], device='cuda:0')
Split layers:
  BoundLinear(name=/input.15, inputs=[/36, /23, /24], perturbed=True): [(BoundRelu(name=/38, inputs=[/input.15], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/32, /19, /20], perturbed=True): [(BoundRelu(name=/34, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input, inputs=[/0, /15, /16], perturbed=True): [(BoundRelu(name=/30, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.19, inputs=[/38, /25, /26], perturbed=True): [(BoundRelu(name=/40, inputs=[/input.19], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/30, /17, /18], perturbed=True): [(BoundRelu(name=/32, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/34, /21, /22], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/30, inputs=[/input], perturbed=True)
   BoundRelu(name=/32, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/34, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/38, inputs=[/input.15], perturbed=True)
   BoundRelu(name=/40, inputs=[/input.19], perturbed=True)
initial forward+backward bounds: tensor([[-2070.45971680]], device='cuda:0')
Worst class: (+ rhs) -2070.459716796875
Iteration 1
Batch size: 1500
Worst bound: tensor([-634.63055420], device='cuda:0')
Total time: 0.0273  pickout: 0.0003 decision: 0.0021  bounding: 0.0243 add_domain: 0.0007
length of domains: 4
4 branch and bound domains visited
Current (lb-rhs): -634.6305541992188
Cumulative time: 0.6499605178833008

Iteration 2
Adv attack time: 0.0197s
Batch size: 1500
Worst bound: tensor([-319.82482910], device='cuda:0')
Total time: 0.0154  pickout: 0.0002 decision: 0.0017  bounding: 0.0129 add_domain: 0.0006
length of domains: 14
20 branch and bound domains visited
Current (lb-rhs): -319.8248291015625
Cumulative time: 0.685875654220581

Iteration 3
Adv attack time: 0.0184s
Batch size: 1500
Worst bound: tensor([-155.91848755], device='cuda:0')
Total time: 0.0149  pickout: 0.0002 decision: 0.0016  bounding: 0.0124 add_domain: 0.0006
length of domains: 15
76 branch and bound domains visited
Current (lb-rhs): -155.91848754882812
Cumulative time: 0.7223825454711914

Iteration 4
Adv attack time: 0.0178s
Batch size: 1500
Worst bound: tensor([-64.98428345], device='cuda:0')
Total time: 0.0151  pickout: 0.0002 decision: 0.0016  bounding: 0.0126 add_domain: 0.0006
length of domains: 8
136 branch and bound domains visited
Current (lb-rhs): -64.98428344726562
Cumulative time: 0.7620096206665039

Iteration 5
Adv attack time: 0.0180s
Batch size: 1500
Worst bound: tensor([-14.71998215], device='cuda:0')
Total time: 0.0150  pickout: 0.0002 decision: 0.0016  bounding: 0.0125 add_domain: 0.0006
length of domains: 3
168 branch and bound domains visited
Current (lb-rhs): -14.719982147216797
Cumulative time: 0.7957136631011963

Iteration 6
Adv attack time: 0.0175s
Batch size: 1500
Worst bound: tensor([12.47523308], device='cuda:0')
Total time: 0.0189  pickout: 0.0002 decision: 0.0049  bounding: 0.0134 add_domain: 0.0004
length of domains: 0
180 branch and bound domains visited
No domains left, verification finished!
The lower bound of last batch is -12.08106803894043
Cumulative time: 0.8322300910949707

Result: safe in 2.6785 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):2.678522504478324, max time: 2.678549289703369
mean time for verified SAFE instances(total 1): 2.678549289703369, max time: 2.678549289703369
safe (total 1), index: [0]
Result dict saved to /home/hongjixu/Verifier_Development/tests/gpu_tests/vnncomp23/tllVerifyBench/master_outputs/0.pkl.
