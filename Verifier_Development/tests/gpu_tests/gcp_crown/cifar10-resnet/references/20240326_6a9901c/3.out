/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/site-packages/onnx2pytorch/convert/layer.py:29: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/site-packages/onnx2pytorch/convert/model.py:151: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  warnings.warn(
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/site-packages/onnx2pytorch/utils.py:21: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  return value.ndim == 0 or value.shape == torch.Size([1])
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/site-packages/onnx2pytorch/operations/add.py:34: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  elif all(x == 1 for x in input[0].shape):
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: cifar10_resnet_instances.csv
  results_file: out.txt
  root_path: ../../vnncomp2021/benchmarks/cifar10_resnet
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: true
  output_file: /home/zhouxingshi/Verifier_Development/tests/gpu_tests/gcp_crown/cifar10-resnet/master_outputs/3.pkl
  return_optimized_model: false
model:
  name: null
  path: null
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 10
  end: 11
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 2000
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.01
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: true
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.9
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: true
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      branching_point_node: ''
      branching_point_db: []
      num_branches: 2
      branching_point_refinement: false
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic: false
      dynamic_bbps: false
      dynamic_beta_heuristic: false
      beta_heuristic: false
      dynamic_options: [uniform, three_left, three_right]
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_primary_spec: null
      sb_primary_spec_iter: 1
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_zero_crossing_score: false
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Tue Mar 26 01:54:41 2024 on valla.cs.ucla.edu
customized start/end sample from instance 10 to 11 in cifar10_resnet_instances.csv
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx onnx/resnet_2b.onnx
Using vnnlib vnnlib_properties_pgd_filtered/resnet2b_pgd_filtered/prop_10_eps_0.008.vnnlib
3072 inputs and 10 outputs in vnnlib
Loading onnx ../../vnncomp2021/benchmarks/cifar10_resnet/onnx/resnet_2b.onnx wih quirks {}
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[], perturbed=True)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundParams(name=/31, inputs=[], perturbed=False)
  (/32): BoundParams(name=/32, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input.1, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input], perturbed=True)
  (/input.4): BoundConv(name=/input.4, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.4], perturbed=True)
  (/37): BoundConv(name=/37, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundConv(name=/38, inputs=[/34, /23, /24], perturbed=True)
  (/39): BoundAdd(name=/39, inputs=[/37, /38], perturbed=True)
  (/input.8): BoundRelu(name=/input.8, inputs=[/39], perturbed=True)
  (/input.12): BoundConv(name=/input.12, inputs=[/input.8, /25, /26], perturbed=True)
  (/42): BoundRelu(name=/42, inputs=[/input.12], perturbed=True)
  (/43): BoundConv(name=/43, inputs=[/42, /27, /28], perturbed=True)
  (/44): BoundAdd(name=/44, inputs=[/43, /input.8], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/44], perturbed=True)
  (/46): BoundFlatten(name=/46, inputs=[/45], perturbed=True)
  (/input.16): BoundLinear(name=/input.16, inputs=[/46, /29, /30], perturbed=True)
  (/48): BoundRelu(name=/48, inputs=[/input.16], perturbed=True)
  (/49): BoundLinear(name=/49, inputs=[/48, /31, /32], perturbed=True)
)
Original output: tensor([[ 1.44404173,  4.14308023, -1.75357890, -0.90566707, -1.68149924,
         -2.02757931, -0.09987120, -3.51539850,  1.76632619,  2.63015556]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input.16, inputs=[/46, /29, /30], perturbed=True): [(BoundRelu(name=/48, inputs=[/input.16], perturbed=True), 0)]
  BoundConv(name=/input.4, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.4], perturbed=True), 0)]
  BoundConv(name=/input.12, inputs=[/input.8, /25, /26], perturbed=True): [(BoundRelu(name=/42, inputs=[/input.12], perturbed=True), 0)]
  BoundConv(name=/input, inputs=[/input.1, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input], perturbed=True), 0)]
  BoundAdd(name=/44, inputs=[/43, /input.8], perturbed=True): [(BoundRelu(name=/45, inputs=[/44], perturbed=True), 0)]
  BoundAdd(name=/39, inputs=[/37, /38], perturbed=True): [(BoundRelu(name=/input.8, inputs=[/39], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.4], perturbed=True)
   BoundRelu(name=/input.8, inputs=[/39], perturbed=True)
   BoundRelu(name=/42, inputs=[/input.12], perturbed=True)
   BoundRelu(name=/45, inputs=[/44], perturbed=True)
   BoundRelu(name=/48, inputs=[/input.16], perturbed=True)
layer /34 using sparse-features alpha with shape [163]; unstable size 163; total size 2048 ([1, 8, 16, 16])
layer /34 start_node /input.4 using sparse-spec alpha [2, 187, 1, 163] with unstable size 186 total_size 1024 output_shape (16, 8, 8)
layer /34 start_node /39 using sparse-spec alpha [2, 173, 1, 163] with unstable size 172 total_size 1024 output_shape (16, 8, 8)
layer /34 start_node /input.12 using sparse-spec alpha [2, 127, 1, 163] with unstable size 126 total_size 1024 output_shape (16, 8, 8)
layer /34 start_node /44 using sparse-spec alpha [2, 263, 1, 163] with unstable size 262 total_size 1024 output_shape (16, 8, 8)
layer /34 start_node /input.16 using sparse-spec alpha [2, 41, 1, 163] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /34 start_node /49 using full alpha [2, 9, 1, 163] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [186]; unstable size 186; total size 1024 ([1, 16, 8, 8])
layer /36 start_node /39 using sparse-spec alpha [2, 173, 1, 186] with unstable size 172 total_size 1024 output_shape (16, 8, 8)
layer /36 start_node /input.12 using sparse-spec alpha [2, 127, 1, 186] with unstable size 126 total_size 1024 output_shape (16, 8, 8)
layer /36 start_node /44 using sparse-spec alpha [2, 263, 1, 186] with unstable size 262 total_size 1024 output_shape (16, 8, 8)
layer /36 start_node /input.16 using sparse-spec alpha [2, 41, 1, 186] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /36 start_node /49 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /input.8 using sparse-features alpha with shape [172]; unstable size 172; total size 1024 ([1, 16, 8, 8])
layer /input.8 start_node /input.12 using sparse-spec alpha [2, 127, 1, 172] with unstable size 126 total_size 1024 output_shape (16, 8, 8)
layer /input.8 start_node /44 using sparse-spec alpha [2, 263, 1, 172] with unstable size 262 total_size 1024 output_shape (16, 8, 8)
layer /input.8 start_node /input.16 using sparse-spec alpha [2, 41, 1, 172] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input.8 start_node /49 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /42 using sparse-features alpha with shape [126]; unstable size 126; total size 1024 ([1, 16, 8, 8])
layer /42 start_node /44 using sparse-spec alpha [2, 263, 1, 126] with unstable size 262 total_size 1024 output_shape (16, 8, 8)
layer /42 start_node /input.16 using sparse-spec alpha [2, 41, 1, 126] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /42 start_node /49 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [262]; unstable size 262; total size 1024 ([1, 16, 8, 8])
layer /45 start_node /input.16 using sparse-spec alpha [2, 41, 1, 262] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /45 start_node /49 using full alpha [2, 9, 1, 262] with unstable size None total_size 9 output_shape 9
layer /48 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /48 start_node /49 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.46270275,  2.16998005,  1.78782749,  2.74897957,  2.43523121,
          1.04310322,  4.20399094, -0.92025518, -0.89263487]], device='cuda:0') None
best_l after optimization: 14.963000297546387
alpha/beta optimization time: 34.61435914039612
initial alpha-crown bounds: tensor([[-0.12641191,  2.53324842,  2.08688688,  3.02056170,  2.77332211,
          1.35149670,  4.50354767, -0.50396872, -0.67568195]], device='cuda:0')
Worst class: (+ rhs) -0.6756819486618042
preset mip_multi_proc as default setting: 40
Set parameter WLSAccessID
Set parameter WLSSecret
Set parameter LicenseID to value 2482314
Academic license 2482314 - for non-commercial use only - registered to z.___@g.ucla.edu
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 8, 16, 16]), torch.Size([9, 1, 16, 8, 8]), torch.Size([9, 1, 16, 8, 8]), torch.Size([9, 1, 16, 8, 8]), torch.Size([9, 1, 16, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 259.07513189315796
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.503547668457031.

Properties batch 1, size 1
Remaining timeout: 258.4440801143646
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.020561695098877.

Properties batch 2, size 1
Remaining timeout: 258.25412774086
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.773322105407715.

Properties batch 3, size 1
Remaining timeout: 258.01287865638733
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5332484245300293.

Properties batch 4, size 1
Remaining timeout: 257.8000535964966
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0868868827819824.

Properties batch 5, size 1
Remaining timeout: 257.5918073654175
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.351496696472168.

Properties batch 6, size 1
Remaining timeout: 257.3704125881195
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12641191]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.44404173,  4.14308023, -1.75357890, -0.90566707, -1.68149924,
        -2.02757931, -0.09987120, -3.51539850,  1.76632619,  2.63015556],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /49 with alignment adjustment
setting alpha for layer /36 start_node /49 with alignment adjustment
setting alpha for layer /input.8 start_node /49 with alignment adjustment
setting alpha for layer /42 start_node /49 with alignment adjustment
setting alpha for layer /45 start_node /49 with alignment adjustment
setting alpha for layer /48 start_node /49 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12641191]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.16,/input.4,/input.12,/input,/44,/39,/49
Keeping alphas for these layers: ['/49']
Keeping alphas for these layers: ['/49']
Node /34 input 0: size torch.Size([8, 16, 16]) unstable 163
Node /36 input 0: size torch.Size([16, 8, 8]) unstable 185
Node /input.8 input 0: size torch.Size([16, 8, 8]) unstable 163
Node /42 input 0: size torch.Size([16, 8, 8]) unstable 119
Node /45 input 0: size torch.Size([16, 8, 8]) unstable 248
Node /48 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 915
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010323524475097656
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input.16, 76] 
split level 1: [/input.16, 98] 
split level 2: [/input.16, 26] 
split level 3: [/input.16, 21] 
split level 4: [/input.16, 67] 
split level 5: [/input.16, 90] 
split level 6: [/input.16, 88] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.00020647048950195312
Time: prepare 0.0319    bound 0.0928    transfer 0.0019    finalize 0.0660    func 0.1928    
Accumulated time: func 0.1928    prepare 0.0333    bound 0.0928    transfer 0.0019    finalize 0.0660    
length of domains: 0
Time: pickout 0.0030    decision 0.6982    set_bounds 0.0941    solve 0.1931    add 0.0004    
Accumulated time: pickout 0.0030    decision 0.6982    set_bounds 0.0941    solve 0.1931    add 0.0004    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 1.1787304878234863


Properties batch 7, size 1
Remaining timeout: 255.63582301139832
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50396872]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.44404173,  4.14308023, -1.75357890, -0.90566707, -1.68149924,
        -2.02757931, -0.09987120, -3.51539850,  1.76632619,  2.63015556],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /49 with alignment adjustment
setting alpha for layer /36 start_node /49 with alignment adjustment
setting alpha for layer /input.8 start_node /49 with alignment adjustment
setting alpha for layer /42 start_node /49 with alignment adjustment
setting alpha for layer /45 start_node /49 with alignment adjustment
setting alpha for layer /48 start_node /49 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50396872]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.16,/input.4,/input.12,/input,/44,/39,/49
Keeping alphas for these layers: ['/49']
Keeping alphas for these layers: ['/49']
Node /34 input 0: size torch.Size([8, 16, 16]) unstable 163
Node /36 input 0: size torch.Size([16, 8, 8]) unstable 185
Node /input.8 input 0: size torch.Size([16, 8, 8]) unstable 163
Node /42 input 0: size torch.Size([16, 8, 8]) unstable 119
Node /45 input 0: size torch.Size([16, 8, 8]) unstable 248
Node /48 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 915
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.00030112266540527344
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input.16, 94] 
split level 1: [/input.16, 87] 
split level 2: [/input.16, 23] 
split level 3: [/input.16, 67] 
split level 4: [/input.16, 98] 
split level 5: [/input.16, 91] 
split level 6: [/input.16, 88] 
mip_multi_proc: 40, mip_threads: 1, total threads used: 40
mip solver model built in 3.9176 seconds.
lower bounds for all target labels: [-0.12641334533691406, 2.533247947692871, 2.0868868827819824, 3.020561695098877, 2.773322105407715, 1.3514938354492188, 4.503547668457031, -0.5039687156677246, -0.6756833791732788]
Starting MIP solver for these labels: [0, 7, 8]
start creating model mps for candidates: ['lay/49_0', 'lay/49_7', 'lay/49_8']
parallel save mip model to /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=0_44332684.mps
parallel save mip model to /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=8_44332684.mps
parallel save mip model to /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=7_44332684.mps
/home/zhouxingshi/Verifier_Development/complete_verifier/lp_mip_solver.py:1119: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=0_44332684.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/Verifier_Development/complete_verifier/lp_mip_solver.py:1119: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=7_44332684.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 15152 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/Verifier_Development/complete_verifier/lp_mip_solver.py:1119: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=8_44332684.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 15155 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 15156 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.00017976760864257812
Time: prepare 0.0181    bound 0.0321    transfer 0.0010    finalize 0.0184    func 0.0697    
Accumulated time: func 0.0697    prepare 0.0193    bound 0.0321    transfer 0.0010    finalize 0.0184    
length of domains: 0
Time: pickout 0.0018    decision 0.1068    set_bounds 0.0371    solve 0.0699    add 0.0002    
Accumulated time: pickout 0.0018    decision 0.1068    set_bounds 0.0371    solve 0.0699    add 0.0002    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.22877097129821777


Properties batch 8, size 1
Remaining timeout: 255.06893944740295
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.67568195]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.44404173,  4.14308023, -1.75357890, -0.90566707, -1.68149924,
        -2.02757931, -0.09987120, -3.51539850,  1.76632619,  2.63015556],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /49 with alignment adjustment
setting alpha for layer /36 start_node /49 with alignment adjustment
setting alpha for layer /input.8 start_node /49 with alignment adjustment
setting alpha for layer /42 start_node /49 with alignment adjustment
setting alpha for layer /45 start_node /49 with alignment adjustment
setting alpha for layer /48 start_node /49 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.67568195]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.16,/input.4,/input.12,/input,/44,/39,/49
Keeping alphas for these layers: ['/49']
Keeping alphas for these layers: ['/49']
Node /34 input 0: size torch.Size([8, 16, 16]) unstable 163
Node /36 input 0: size torch.Size([16, 8, 8]) unstable 185
Node /input.8 input 0: size torch.Size([16, 8, 8]) unstable 163
Node /42 input 0: size torch.Size([16, 8, 8]) unstable 119
Node /45 input 0: size torch.Size([16, 8, 8]) unstable 248
Node /48 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 915
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0029006004333496094
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input.16, 68] 
split level 1: [/input.16, 88] 
split level 2: [/input.16, 23] 
split level 3: [/input.16, 98] 
split level 4: [/input.16, 76] 
split level 5: [/input.16, 33] 
split level 6: [/input.16, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 128 = 0.8359375
pruning-in-iteration extra time: 0.13351178169250488
Time: prepare 0.0174    bound 4.5872    transfer 0.0026    finalize 0.0212    func 4.6285    
Accumulated time: func 4.6285    prepare 0.0189    bound 4.5872    transfer 0.0026    finalize 0.0212    
Current worst splitting domains lb-rhs (depth):
-0.19837 (7), -0.17632 (7), -0.13260 (7), -0.13000 (7), -0.12130 (7), -0.10965 (7), -0.09528 (7), -0.09080 (7), -0.08679 (7), -0.08052 (7), -0.06569 (7), -0.05540 (7), -0.04831 (7), -0.04682 (7), -0.04669 (7), -0.04049 (7), -0.04030 (7), -0.02972 (7), -0.02967 (7), -0.01709 (7), 
length of domains: 21
Time: pickout 0.0024    decision 0.1262    set_bounds 0.0356    solve 4.6289    add 0.7597    
Accumulated time: pickout 0.0024    decision 0.1262    set_bounds 0.0356    solve 4.6289    add 0.7597    
Current (lb-rhs): -0.19836843013763428
21 domains visited
Cumulative time: 5.660659313201904

BaB round 2
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=8_44332684.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0238
batch: 21
splitting decisions: 
split level 0: [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] 
split level 1: [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] 
split level 2: [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] 
pruning_in_iteration open status: True
ratio of positive domain = 144 / 168 = 0.8571428571428572
pruning-in-iteration extra time: 0.12486600875854492
Time: prepare 0.0465    bound 2.8195    transfer 0.0024    finalize 0.0640    func 2.9326    
Accumulated time: func 7.5611    prepare 0.0664    bound 7.4067    transfer 0.0049    finalize 0.0852    
Current worst splitting domains lb-rhs (depth):
-0.10941 (10), -0.10808 (10), -0.10262 (10), -0.10134 (10), -0.08812 (10), -0.08562 (10), -0.07963 (10), -0.07699 (10), -0.03925 (10), -0.03518 (10), -0.03212 (10), -0.02855 (10), -0.02834 (10), -0.02537 (10), -0.02481 (10), -0.02317 (10), -0.02180 (10), -0.01935 (10), -0.01849 (10), -0.01532 (10), 
length of domains: 24
Time: pickout 0.0039    decision 0.0855    set_bounds 0.0388    solve 2.9331    add 0.6909    
Accumulated time: pickout 0.0064    decision 0.2116    set_bounds 0.0744    solve 7.5620    add 1.4506    
Current (lb-rhs): -0.10940665006637573
45 domains visited
Cumulative time: 9.455763101577759

BaB round 3
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=8_44332684.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0030
batch: 24
splitting decisions: 
split level 0: [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] 
split level 1: [/input.12, 1005] [/44, 355] [/44, 356] [/44, 356] [/44, 355] [/44, 806] [/44, 35] [/44, 355] [/44, 356] [/44, 356] 
split level 2: [/input.12, 1003] [/input.12, 1005] [/44, 806] [/44, 813] [/44, 356] [/44, 355] [/input.12, 1011] [/input.12, 1011] [/44, 806] [/44, 813] 
pruning_in_iteration open status: True
ratio of positive domain = 179 / 192 = 0.9322916666666666
pruning-in-iteration extra time: 0.1822667121887207
Time: prepare 0.2864    bound 3.7748    transfer 0.0228    finalize 0.0962    func 4.1805    
Accumulated time: func 11.7416    prepare 0.3535    bound 11.1815    transfer 0.0277    finalize 0.1814    
Current worst splitting domains lb-rhs (depth):
-0.07063 (13), -0.06524 (13), -0.06073 (13), -0.05969 (13), -0.04869 (13), -0.04656 (13), -0.04405 (13), -0.04161 (13), -0.03358 (13), -0.02861 (13), -0.00901 (13), -0.00441 (13), -0.00348 (13), 
length of domains: 13
Time: pickout 0.0031    decision 0.2277    set_bounds 0.1004    solve 4.1900    add 0.4319    
Accumulated time: pickout 0.0095    decision 0.4393    set_bounds 0.1748    solve 11.7520    add 1.8825    
Current (lb-rhs): -0.07062822580337524
58 domains visited
Cumulative time: 14.43620252609253

BaB round 4
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=8_44332684.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0055
batch: 13
splitting decisions: 
split level 0: [/44, 348] [/44, 348] [/44, 348] [/44, 348] [/44, 355] [/44, 348] [/44, 348] [/44, 348] [/44, 348] [/44, 348] 
split level 1: [/44, 356] [/44, 355] [/44, 355] [/44, 356] [/44, 813] [/44, 806] [/44, 356] [/44, 355] [/44, 806] [/44, 806] 
split level 2: [/44, 813] [/44, 35] [/44, 813] [/44, 813] [/input.12, 860] [/44, 35] [/44, 813] [/44, 35] [/44, 813] [/44, 35] 
pruning_in_iteration open status: True
ratio of positive domain = 90 / 104 = 0.8653846153846154
pruning-in-iteration extra time: 0.2322843074798584
Time: prepare 0.0625    bound 2.8167    transfer 0.0016    finalize 0.0442    func 2.9251    
Accumulated time: func 14.6667    prepare 0.4170    bound 13.9982    transfer 0.0293    finalize 0.2257    
Current worst splitting domains lb-rhs (depth):
-0.02678 (16), -0.02568 (16), -0.02166 (16), -0.02016 (16), -0.01840 (16), -0.01709 (16), -0.01704 (16), -0.01464 (16), -0.01274 (16), -0.01086 (16), -0.00935 (16), -0.00776 (16), -0.00383 (16), -0.00191 (16), 
length of domains: 14
Time: pickout 0.0044    decision 0.0848    set_bounds 0.0272    solve 2.9253    add 0.5524    
Accumulated time: pickout 0.0138    decision 0.5241    set_bounds 0.2020    solve 14.6773    add 2.4349    
Current (lb-rhs): -0.026782631874084473
72 domains visited
Cumulative time: 18.055624961853027

BaB round 5
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=8_44332684.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0035
batch: 14
splitting decisions: 
split level 0: [/44, 28] [/39, 869] [/39, 869] [/44, 28] [/39, 869] [/39, 869] [/44, 28] [/39, 869] [/44, 546] [/39, 869] 
split level 1: [/input.12, 1005] [/input.12, 1011] [/input.12, 1011] [/input.12, 1005] [/input.12, 1011] [/input.12, 1011] [/input.12, 1005] [/input.12, 1011] [/44, 28] [/input.12, 1011] 
split level 2: [/input.16, 42] [/input.12, 860] [/input.12, 860] [/input.16, 42] [/input.12, 860] [/input.12, 860] [/input.16, 42] [/input.12, 860] [/input.16, 42] [/input.12, 860] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 112 / 112 = 1.0
pruning-in-iteration extra time: 0.000152587890625
Time: prepare 0.1265    bound 0.0367    transfer 0.0019    finalize 0.0279    func 0.1930    
Accumulated time: func 14.8597    prepare 0.5441    bound 14.0349    transfer 0.0312    finalize 0.2535    
length of domains: 0
Time: pickout 0.0025    decision 0.1458    set_bounds 0.0476    solve 0.1932    add 0.0002    
Accumulated time: pickout 0.0164    decision 0.6700    set_bounds 0.2496    solve 14.8705    add 2.4352    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
72 domains visited
Cumulative time: 18.450726747512817

found process to kill: terminal indx = 0
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=0_44332684.mps
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=0_44332684.log
found process to kill: terminal indx = 7
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=7_44332684.mps
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=7_44332684.log
found process to kill: terminal indx = 8
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=8_44332684.mps
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1711443276_idx=0_spec=8_44332684.log
found process for pidx=0
found process for pidx=7
kill process for pidx=7
found process for pidx=8
Result: safe in 64.2281 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):64.22741964024756, max time: 64.22806191444397
mean time for verified SAFE instances(total 1): 64.22806191444397, max time: 64.22806191444397
safe (total 1), index: [0]
Result dict saved to /home/zhouxingshi/Verifier_Development/tests/gpu_tests/gcp_crown/cifar10-resnet/master_outputs/3.pkl.
