Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: mip
  enable_incomplete_verification: true
  csv_name: verivital_instances.csv
  results_file: out.txt
  root_path: ../../vnncomp2021/benchmarks/verivital
model:
  name: null
  path: null
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 4
  end: 5
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: null
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 64
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 0.25
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    nonlinear_split:
      method: babsr_like
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      naive_branching_score: false
      filter: false
      prioritize_mul: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue Mar 28 13:37:35 2023 on zeratul
customized start/end sample from instance 4 to 5 in verivital_instances.csv
Internal results will be saved to a-b-crown_[verivital_instances]_start=4_end=5_iter=50_b=64_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip_cplex_cuts=False_initial_max_domains=1.npz.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx Convnet_avgpool.onnx
Using vnnlib ./specs/avgpool_specs/prop_4_0.02.vnnlib
Precompiled vnnlib file found at ../../vnncomp2021/benchmarks/verivital/./specs/avgpool_specs/prop_4_0.02.vnnlib.compiled
Loading onnx ../../vnncomp2021/benchmarks/verivital/Convnet_avgpool.onnx wih quirks {}
Scaling timeout: 300.0 -> 75.0
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[])
  (/5): BoundParams(name=/5, inputs=[])
  (/6): BoundParams(name=/6, inputs=[])
  (/7): BoundParams(name=/7, inputs=[])
  (/8): BoundParams(name=/8, inputs=[])
  (/input): BoundConv(name=/input, inputs=[/input.1, /5, /6])
  (/10): BoundRelu(name=/10, inputs=[/input])
  (/11): BoundConstant(name=/11, inputs=[])
  (/12): BoundConcat(name=/12, inputs=[/11])
  (/13): BoundConstant(name=/13, inputs=[])
  (/14): BoundShape(name=/14, inputs=[/12])
  (/15): BoundGather(name=/15, inputs=[/14, /13])
  (/16): BoundConstant(name=/16, inputs=[])
  (/17): BoundConstant(name=/17, inputs=[])
  (/18): BoundMul(name=/18, inputs=[/16, /17])
  (/19): BoundSub(name=/19, inputs=[/18, /15])
  (/20): BoundCast(name=/20, inputs=[/12])
  (/21): BoundConstantOfShape(name=/21, inputs=[/19])
  (/22): BoundConcat(name=/22, inputs=[/20, /21])
  (/23): BoundConstant(name=/23, inputs=[])
  (/24): BoundReshape(name=/24, inputs=[/22, /23])
  (/25): BoundConstant(name=/25, inputs=[])
  (/26): BoundConstant(name=/26, inputs=[])
  (/27): BoundConstant(name=/27, inputs=[])
  (/28): BoundConstant(name=/28, inputs=[])
  (/29): BoundSlice(name=/29, inputs=[/24, /26, /27, /25, /28])
  (/30): BoundTranspose(name=/30, inputs=[/29])
  (/31): BoundConstant(name=/31, inputs=[])
  (/32): BoundReshape(name=/32, inputs=[/30, /31])
  (/33): BoundCast(name=/33, inputs=[/32])
  (/34): BoundConstant(name=/34, inputs=[])
  (/35): BoundPad(name=/35, inputs=[/10, /33, /34])
  (/36): BoundConstant(name=/36, inputs=[])
  (/37): BoundPad(name=/37, inputs=[/35, /36])
  (/38): BoundAveragePool(name=/38, inputs=[/37])
  (/39): BoundFlatten(name=/39, inputs=[/38])
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8])
)
Model prediction is: tensor([[ -4.53534603, -17.97069168,   4.74542379, -11.03195858,  -3.53708529,
         -12.31299496,  -6.40434504, -11.35073566,   2.16712475,  -4.73230600]],
       device='cuda:0')
layer /10 using sparse-features alpha with shape [2285]; unstable size 2285; total size 23328 (torch.Size([1, 32, 27, 27]))
layer /10 start_node /40 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.63107729, 19.38182831, 12.63956833,  4.90746546, 13.76509571,
          8.12546539, 13.07651901, -0.37525654,  6.06566048]], device='cuda:0') None
best_l after optimization: 84.71182250976562
alpha/beta optimization time: 1.7984731197357178
initial alpha-CROWN bounds: tensor([[ 6.67697811, 19.45141983, 12.71023464,  4.96085739, 13.82955647,
          8.16872883, 13.11772919, -0.33493900,  6.13125896]], device='cuda:0')
Worst class: (+ rhs) -0.33493900299072266
Split layers:
  BoundConv(name=/input, inputs=[/input.1, /5, /6]): [(BoundRelu(name=/10, inputs=[/input]), 0)]
preset mip_multi_proc as default setting: 72
Set parameter Username
Academic license - for non-commercial use only - expires 2024-02-29
mip_multi_proc: 72, mip_threads: 1, total threads used: 72
mip solver model built in 3.3202 seconds.
lower bounds for all target labels: [6.676959037780762, 19.451383590698242, 12.710234642028809, 4.960846900939941, 13.829554557800293, 8.168643951416016, 13.117724418640137, -0.3349924087524414, 6.131222724914551]
Starting MIP solver for these labels: [7]
PGD done for relu layer final
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/onnx2pytorch/convert/layer.py:30: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_numpy.cpp:178.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/onnx2pytorch/convert/model.py:154: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  "Using experimental implementation that allows 'batch_size > 1'."
solving MIP for lay/40_7, status:15, [-0.3349924087524414, inf]=>[-0.3349924087524414, -0.08552265750186513], time: 0.420546293258667s
MIP solved lower bound: tensor([[ 6.67695904],
        [19.45138359],
        [12.71023464],
        [ 4.96084690],
        [13.82955456],
        [ 8.16864395],
        [13.11772442],
        [-0.33499241],
        [ 6.13122272]])
MIP solved upper bound: tensor([[        inf],
        [        inf],
        [        inf],
        [        inf],
        [        inf],
        [        inf],
        [        inf],
        [-0.08552266],
        [        inf]])
verified unsafe-mip with init mip!
Result: unsafe-mip in 17.4775 seconds
############# Summary #############
Final verified acc: 0.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 0 , total falsified (unsafe/sat): 1 , timeout: 0
mean time for ALL instances (total 1):17.47734402348054, max time: 17.477518796920776
mean time for verified UNSAFE instances (total 1): 17.477518796920776, max time: 17.477518796920776
unsafe-mip (total 1), index: [0]
